<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jay&#39;s Blog</title>
  
  
  <link href="https://www.sdhlw.top/atom.xml" rel="self"/>
  
  <link href="https://www.sdhlw.top/"/>
  <updated>2024-03-15T12:08:42.141Z</updated>
  <id>https://www.sdhlw.top/</id>
  
  <author>
    <name>Jay Chou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>交叉验证法</title>
    <link href="https://www.sdhlw.top/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81%E6%B3%95/"/>
    <id>https://www.sdhlw.top/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81%E6%B3%95/</id>
    <published>2024-03-15T11:18:11.000Z</published>
    <updated>2024-03-15T12:08:42.141Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>交叉验证（cross-validation）是一种评估泛化性能（新数据能否正确预测）的统计学方法，它比单次划分训练集和测试集的方法更加稳定、全面。如果只划分一次训练集和测试集，可能难以分类的样本都在测试集中，那么精度会低的离谱，相反，如果容易分类的样本都在测试集中，精度则会高的离谱，所以会导致模型并不能反映数据的真实情况。</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403152007648.png" alt="" style="zoom:40%;" /></p><span id="more"></span><h3 id="k-折交叉验证">k 折交叉验证</h3><p>最常用的交叉验证是 k 折交叉验证（k-fold cross-validation），其中k是由用户指定的数字，通常取5 或10。在执行5折交叉验证时，首先将数据划分为（大致）相等的5部分，每一部分叫作折（fold）<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="安德里亚斯·穆勒, 莎拉·吉多. Python机器学习基础教程[M/OL]. 张亮, 译. 人民邮电出版社">[1]</span></a></sup>。</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151929998.png" alt="" style="zoom:80%;" /></p><p>使用第1折作为测试集、其他折（2~5）作为训练集来训练第一个模型，并算出精度。共构建五个模型，对精度取平均值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line">iris =  load_iris()</span><br><span class="line">Logreg = LogisticRegression()</span><br><span class="line">scores = cross_val_score(Logreg,iris.data,iris.target,cv=<span class="number">5</span>) <span class="comment"># 模型，x,y,折数; 默认给出每个模型精度，自己需平均</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Average cross-validation score:&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(scores.mean())) </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line">scores = cross_val_score(Logreg,iris.data,iris.target,cv=<span class="number">5</span>) <span class="comment"># 模型，x,y,折数; 默认给出每个模型精度，自己需平均</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Average cross-validation score:&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(scores.mean())) </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;">安德里亚斯·穆勒,莎拉·吉多. Python机器学习基础教程[M/OL]. 张亮, 译.人民邮电出版社<a href="#fnref:1" rev="footnote"> ↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;交叉验证（cross-validation）是一种评估泛化性能（新数据能否正确预测）的统计学方法，它比单次划分训练集和测试集的方法更加稳定、全面。如果只划分一次训练集和测试集，可能难以分类的样本都在测试集中，那么精度会低的离谱，相反，如果容易分类的样本都在测试集中，精度则会高的离谱，所以会导致模型并不能反映数据的真实情况。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403152007648.png&quot; alt=&quot;&quot; style=&quot;zoom:40%;&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="机器学习" scheme="https://www.sdhlw.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>参考文献中英文混排-等与 et al 问题</title>
    <link href="https://www.sdhlw.top/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E7%AD%89%E4%B8%8Eetal%E9%97%AE%E9%A2%98/"/>
    <id>https://www.sdhlw.top/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E7%AD%89%E4%B8%8Eetal%E9%97%AE%E9%A2%98/</id>
    <published>2024-03-15T01:59:38.000Z</published>
    <updated>2024-03-15T02:56:19.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>问题：zotero 使用 <ahref="https://github.com/sdhlw/Chinese-STD-GB-T-7714-related-csl">GB格式</a>插入英文文献时，英文文献为等</p><p>解决：</p><p>1、安装可以同时生成等和 et al 的csl格式，已放于OA 仓库：<ahref="https://github.com/sdhlw/OA/tree/main">china-national-standard-gb-t-7714-2015-numeric-BiLan.csl</a></p><p>打开word：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151007465.png" alt="" style="zoom:23%;" /></p><span id="more"></span><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151017925.png" alt="" style="zoom:33%;" /></p><p>2、在zotero中，将显示为等的英文文献的语言修改为“en”<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[[Zotero修改版]终于可以原生支持同时生成“et al”和“等”了](https://zhuanlan.zhihu.com/p/314928204)">[1]</span></a></sup></p><p>按照图片的内容修改，可解决英文文献引用过程中 et al. 变为 等的问题<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Zotero 插件之 Jasminum（茉莉花）的使用教程](https://blog.csdn.net/m0_67394827/article/details/134389267)">[2]</span></a></sup>，如果有一些论文的语言没有自动识别出来，或者是安装茉莉花插件之前的旧文献，我们可以手动进行操作找到自己需要设置语言的论文，点击右键-设置语言，之后，根据论文的语言设置为中文或者英文即可<sup id="fnref:3"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Zotero修改GB/T 7714参考文献格式-实现中英文混排](https://zhuanlan.zhihu.com/p/663341103)">[3]</span></a></sup>。</p><p>茉莉花插件批量修改条目为 en :</p><p>zotero：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151047433.png" alt="" style="zoom:40%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151048903.png" alt="" style="zoom:33%;" /></p><p>2、选中所有英文文献条目，右键：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151050754.png" alt="" style="zoom:25%;" /></p><p>3、点击 word 中 zotero 中的 refresh 即可</p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/314928204">[Zotero修改版]终于可以原生支持同时生成“etal”和“等”了</a><a href="#fnref:1" rev="footnote"> ↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/m0_67394827/article/details/134389267">Zotero插件之Jasminum（茉莉花）的使用教程</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li><li id="fn:3"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/663341103">Zotero修改GB/T7714参考文献格式-实现中英文混排</a><a href="#fnref:3" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;问题：zotero 使用 &lt;a
href=&quot;https://github.com/sdhlw/Chinese-STD-GB-T-7714-related-csl&quot;&gt;GB
格式&lt;/a&gt;插入英文文献时，英文文献为等&lt;/p&gt;
&lt;p&gt;解决：&lt;/p&gt;
&lt;p&gt;1、安装可以同时生成等和 et al 的csl格式，已放于OA 仓库：&lt;a
href=&quot;https://github.com/sdhlw/OA/tree/main&quot;&gt;china-national-standard-gb-t-7714-2015-numeric-BiLan.csl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开word：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151007465.png&quot; alt=&quot;&quot; style=&quot;zoom:23%;&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="软件使用" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="Zotero" scheme="https://www.sdhlw.top/tags/zotero/"/>
    
  </entry>
  
  <entry>
    <title>独热编码（one-hot）</title>
    <link href="https://www.sdhlw.top/%E7%8B%AC%E7%83%AD%E7%BC%96%E7%A0%81%EF%BC%88one-hot%EF%BC%89/"/>
    <id>https://www.sdhlw.top/%E7%8B%AC%E7%83%AD%E7%BC%96%E7%A0%81%EF%BC%88one-hot%EF%BC%89/</id>
    <published>2024-03-11T10:37:55.000Z</published>
    <updated>2024-03-13T01:42:15.485Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>独热编码(one-hot encoding)独热编码是通过创建一个新的虚拟特征，虚拟特征的每一列各代表标称数据的一个值。例如，颜色一共有四个取值green、blue、red、black，独热编码是通过四位二进制来表示，如果是green就表示为<code>[1,0,0,0]</code>，对应的颜色是<code>[green,blue,red,black]</code>，如果属于哪一种颜色，则取值为1，否则为0。</p><span id="more"></span><h3 id="实现的两种方式">实现的两种方式</h3><p>1、OneHotEncoder<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[数据分析预处理 -字符型类别变量（string）](https://blog.csdn.net/Poisson_SHAN/article/details/108894118)">[1]</span></a></sup>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sklearn.preprocessing <span class="keyword">as</span> pre_processing</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">label=pre_processing.LabelEncoder()</span><br><span class="line">labels=label.fit_transform([<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;美国&#x27;</span>,<span class="string">&#x27;法国&#x27;</span>,<span class="string">&#x27;德国&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(labels)</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># [0 3 2 1]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">labels=np.array(labels).reshape(<span class="built_in">len</span>(labels),<span class="number">1</span>) <span class="comment">#先将X组织成（sample，feature）的格式</span></span><br><span class="line"> </span><br><span class="line">onehot=pre_processing.OneHotEncoder()</span><br><span class="line">onehot_label=onehot.fit_transform(labels)</span><br><span class="line"><span class="built_in">print</span>(onehot_label.toarray())   <span class="comment">#这里一定要进行toarray()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># out：</span></span><br><span class="line"><span class="comment"># [[1. 0. 0. 0.]</span></span><br><span class="line"><span class="comment">#  [0. 0. 0. 1.]</span></span><br><span class="line"><span class="comment">#  [0. 0. 1. 0.]</span></span><br><span class="line"><span class="comment">#  [0. 1. 0. 0.]]</span></span><br></pre></td></tr></table></figure><p>2、pd.get_dummies<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Python下数值型与字符型类别变量独热编码（One-hot Encoding）实现](https://cloud.tencent.com/developer/article/1851294)">[2]</span></a></sup></p><p>在<code>get_dummies()</code>函数中，默认情况下<ahref="https://www.zhihu.com/search?q=独热编码&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3246378958%7D">独热编码</a>生成的是bool类型的True和False。如果你希望将其转换为数值型的0和1，你可以使用参数<code>dtype</code>来指定数据类型为<ahref="https://www.zhihu.com/search?q=整数型&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3246378958%7D">整数型</a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onedata = pd.get_dummies(data,columns=[<span class="string">&#x27;SoilType&#x27;</span>],dtype=<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure><h3 id="例子">例子</h3><p>首先我们的数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建颜色数据</span></span><br><span class="line">colors = [<span class="string">&#x27;红色&#x27;</span>, <span class="string">&#x27;蓝色&#x27;</span>, <span class="string">&#x27;绿色&#x27;</span>]</span><br><span class="line">color_data = np.random.choice(colors, size=<span class="number">100</span>, p=[<span class="number">0.4</span>, <span class="number">0.4</span>, <span class="number">0.2</span>])</span><br><span class="line"><span class="comment"># 创建目标变量数据</span></span><br><span class="line">value_data = np.random.randn(<span class="number">100</span>) * <span class="number">10</span> + <span class="number">50</span></span><br><span class="line"><span class="comment"># 将数据合并为数据集</span></span><br><span class="line">data = pd.DataFrame(&#123;<span class="string">&#x27;color&#x27;</span>: color_data, <span class="string">&#x27;value&#x27;</span>: value_data&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;data:&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(data))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">data:   color      value</span><br><span class="line"><span class="number">0</span>     蓝色  <span class="number">64.725733</span></span><br><span class="line"><span class="number">1</span>     蓝色  <span class="number">34.763842</span></span><br><span class="line"><span class="number">2</span>     红色  <span class="number">43.883487</span></span><br><span class="line"><span class="number">3</span>     红色  <span class="number">42.106679</span></span><br><span class="line"><span class="number">4</span>     红色  <span class="number">48.876011</span></span><br><span class="line">..   ...        ...</span><br><span class="line"><span class="number">95</span>    蓝色  <span class="number">64.521983</span></span><br><span class="line"><span class="number">96</span>    蓝色  <span class="number">57.808631</span></span><br><span class="line"><span class="number">97</span>    绿色  <span class="number">44.561463</span></span><br><span class="line"><span class="number">98</span>    蓝色  <span class="number">61.872843</span></span><br><span class="line"><span class="number">99</span>    蓝色  <span class="number">49.776371</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">2</span> columns]</span><br></pre></td></tr></table></figure><p>进行独热编码后的数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用pandas的get_dummies方法进行one-hot编码</span></span><br><span class="line">onehot = pd.get_dummies(data[<span class="string">&#x27;color&#x27;</span>], prefix=<span class="string">&#x27;color&#x27;</span>) <span class="comment"># 取出这列，并对这列进行独热编码</span></span><br><span class="line"><span class="comment"># 将编码后的特征与目标变量合并</span></span><br><span class="line">data_onehot = pd.concat([data[<span class="string">&#x27;value&#x27;</span>], onehot], axis=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;onehot之后的数据：\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(data_onehot))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">onehot之后的数据：</span><br><span class="line">        value  color_红色  color_绿色  color_蓝色</span><br><span class="line"><span class="number">0</span>   <span class="number">64.725733</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">1</span>   <span class="number">34.763842</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">2</span>   <span class="number">43.883487</span>         <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line"><span class="number">3</span>   <span class="number">42.106679</span>         <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line"><span class="number">4</span>   <span class="number">48.876011</span>         <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">..        ...       ...       ...       ...</span><br><span class="line"><span class="number">95</span>  <span class="number">64.521983</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">96</span>  <span class="number">57.808631</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">97</span>  <span class="number">44.561463</span>         <span class="number">0</span>         <span class="number">1</span>         <span class="number">0</span></span><br><span class="line"><span class="number">98</span>  <span class="number">61.872843</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">99</span>  <span class="number">49.776371</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">4</span> columns]</span><br></pre></td></tr></table></figure><p>划分训练集和测试集：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将数据集划分为训练集和测试集</span></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(data_onehot.drop(<span class="string">&#x27;value&#x27;</span>, axis=<span class="number">1</span>), data_onehot[<span class="string">&#x27;value&#x27;</span>], test_size=<span class="number">0.2</span>, random_state=<span class="number">42</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建线性回归模型并拟合训练集</span></span><br><span class="line">model = LinearRegression()</span><br><span class="line">model.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在测试集上进行预测并评估性能</span></span><br><span class="line">y_pred = model.predict(X_test)</span><br><span class="line">score = r2_score(y_test, y_pred)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;R-squared score:&quot;</span>, score)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R-squared score: -<span class="number">0.12562920003687705</span></span><br></pre></td></tr></table></figure><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/Poisson_SHAN/article/details/108894118">数据分析预处理-字符型类别变量（string）</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://cloud.tencent.com/developer/article/1851294">Python下数值型与字符型类别变量独热编码（One-hotEncoding）实现</a><a href="#fnref:2" rev="footnote"> ↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;独热编码(one-hot encoding)
独热编码是通过创建一个新的虚拟特征，虚拟特征的每一列各代表标称数据的一个值。例如，颜色一共有四个取值green、blue、red、black，独热编码是通过四位二进制来表示，如果是green就表示为&lt;code&gt;[1,0,0,0]&lt;/code&gt;，对应的颜色是&lt;code&gt;[green,blue,red,black]&lt;/code&gt;，如果属于哪一种颜色，则取值为1，否则为0。&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>数据分析项目管理形式</title>
    <link href="https://www.sdhlw.top/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BD%A2%E5%BC%8F/"/>
    <id>https://www.sdhlw.top/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BD%A2%E5%BC%8F/</id>
    <published>2024-03-11T10:30:52.000Z</published>
    <updated>2024-03-15T08:16:41.242Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>project</p><ul><li><p>origin_data</p></li><li><p>clean_data</p></li><li><p>process(代码及工程文件)</p></li><li><p>result</p></li></ul><span id="more"></span><h3 id="参考文章">参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;project&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;origin_data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;clean_data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;process(代码及工程文件)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;result&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>博客增加菜单栏页面</title>
    <link href="https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E8%8F%9C%E5%8D%95%E6%A0%8F%E9%A1%B5%E9%9D%A2/"/>
    <id>https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E8%8F%9C%E5%8D%95%E6%A0%8F%E9%A1%B5%E9%9D%A2/</id>
    <published>2024-03-10T15:12:34.000Z</published>
    <updated>2024-03-12T02:54:16.177Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>1、创建页面：<code>hexo n page "菜单名称"</code></p><p>记得在yaml中type写好类别比如： "Python"</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102339614.png" alt="" style="zoom:50%;"  /></p><span id="more"></span><p>2、修改主题配置文件中menu部分：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102331953.png" alt="" style="zoom: 25%;" /></p><p>menu菜单每行的格式为"Key: /link/ ||icon"<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Hexo添加自定义分类菜单项并定制页面布局(简洁版)](https://finisky.github.io/customizecategorybyextension/)">[1]</span></a></sup>。</p><p>选择自己的icon</p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://finisky.github.io/customizecategorybyextension/">Hexo添加自定义分类菜单项并定制页面布局(简洁版)</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;">https://fontawesome.com/<a href="#fnref:2" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://guiblogs.com/hexo30-22/">Day22：如何增加你 Hexo 的选单 Icon？_</a><a href="#fnref:2" rev="footnote"> ↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;1、创建页面：&lt;code&gt;hexo n page &quot;菜单名称&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;记得在yaml中type写好类别比如： &quot;Python&quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102339614.png&quot; alt=&quot;&quot; style=&quot;zoom:50%;&quot;  /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>鸟山明走了</title>
    <link href="https://www.sdhlw.top/%E9%B8%9F%E5%B1%B1%E6%98%8E%E8%B5%B0%E4%BA%86/"/>
    <id>https://www.sdhlw.top/%E9%B8%9F%E5%B1%B1%E6%98%8E%E8%B5%B0%E4%BA%86/</id>
    <published>2024-03-09T13:36:46.000Z</published>
    <updated>2024-03-13T05:41:20.210Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>看着手机上卡卡罗特的图片，心理有一股浅浅莫名的伤感。龙珠都看完了吗？没有，严格意义上来说，其实自己看的并不多，回忆起来也只有卡卡罗特和贝吉塔争强好胜，想赢过对方，各自狠狠努力以及超级赛亚人变身的场景，但是音乐，配色，人物的特点，整体的感觉真的很棒！对于很多人来说，这是一场异常美丽的梦，而他的去世就像宣告梦醒时刻的到来，我入梦并不深，都有一种莫名的伤感，何况那些早就一头扎下去的人们。死亡总是向人们宣告人生的一切就是一场幻梦，不管这个梦有多么的美好，早晚都有梦醒时分，如果一切都是一场终将醒来的梦，人要怎么活呢？唯一的答案就是去造属于自己的“春秋大梦”，大胆一些，勇敢一些，在自己的龙珠里，做自己，那个永不言败强大万分的卡卡罗特，一切终将逝去。</p><span id="more"></span><h3 id="参考文章">参考文章</h3><p>1 小王的碎碎念</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;看着手机上卡卡罗特的图片，心理有一股浅浅莫名的伤感。龙珠都看完了吗？没有，严格意义上来说，其实自己看的并不多，回忆起来也只有卡卡罗特和贝吉塔争强好胜，想赢过对方，各自狠狠努力以及超级赛亚人变身的场景，但是音乐，配色，人物的特点，整体的感觉真的很棒！对于很多人来说，这是一场异常美丽的梦，而他的去世就像宣告梦醒时刻的到来，我入梦并不深，都有一种莫名的伤感，何况那些早就一头扎下去的人们。死亡总是向人们宣告人生的一切就是一场幻梦，不管这个梦有多么的美好，早晚都有梦醒时分，如果一切都是一场终将醒来的梦，人要怎么活呢？唯一的答案就是去造属于自己的“春秋大梦”，大胆一些，勇敢一些，在自己的龙珠里，做自己，那个永不言败强大万分的卡卡罗特，一切终将逝去。&lt;/p&gt;</summary>
    
    
    
    <category term="生活随笔" scheme="https://www.sdhlw.top/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>随机森林填充空值</title>
    <link href="https://www.sdhlw.top/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E5%A1%AB%E5%85%85%E7%A9%BA%E5%80%BC/"/>
    <id>https://www.sdhlw.top/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E5%A1%AB%E5%85%85%E7%A9%BA%E5%80%BC/</id>
    <published>2024-03-09T11:12:14.000Z</published>
    <updated>2024-03-10T15:01:44.998Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>复现这篇文章<ahref="https://cloud.tencent.com/developer/article/1795954">基于随机森林方法的缺失值填充</a></p><p>导入各自包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"># from sklearn.datasets import load_boston  # 新版本无波士顿数据</span><br><span class="line">from sklearn.impute import SimpleImputer  # 填充缺失值的类</span><br><span class="line">from sklearn.ensemble import RandomForestRegressor  # 随机森林回归</span><br><span class="line">from sklearn.model_selection import cross_val_score  # 交叉验证</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="波士顿数据集获取">1 波士顿数据集获取</h3><p>利用犯罪率、是否邻近查尔斯河、公路可达性等信息，来预测 20 世纪 70年代波士顿地区房屋价格的中位数。这个数据集包含 506 个数据点和 13个特征。波士顿房价数据集在scikit-learn1.2版本以后被移除了,通过其他网站获取，该数据已整理成excel,放置于：https://github.com/sdhlw/OA/tree/main/Boston_data</p><p>数据：前12行为特征即x，最后一行为y</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403101534554.png" alt="" style="zoom:33%;" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data_url = &quot;http://lib.stat.cmu.edu/datasets/boston&quot;</span><br><span class="line">raw_df = pd.read_csv(data_url, sep=&quot;\s+&quot;, skiprows=22, header=None)</span><br><span class="line">data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])</span><br><span class="line">target = raw_df.values[1::2, 2] # 归一化和特征构造后都没有变化</span><br><span class="line">print(&quot;Data shape: &#123;&#125;&quot;.format(data.shape))</span><br></pre></td></tr></table></figure><h3 id="设置缺失样本">2 设置缺失样本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rng = np.random.RandomState(<span class="number">0</span>)  <span class="comment"># 确定随机种子</span></span><br><span class="line">missing_rate = <span class="number">0.5</span>   <span class="comment"># 缺失率是50%</span></span><br><span class="line"><span class="comment"># 计算缺失的样本总数；floor是向下取整</span></span><br><span class="line">n_missing_samples = <span class="built_in">int</span>(np.floor(n_samples * n_features * missing_rate))  <span class="comment"># 行乘列乘0.5即取一半缺失值</span></span><br><span class="line"><span class="built_in">print</span>(n_missing_samples)  <span class="comment"># 3289 个数</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># randint(下限,上限,n)：在上限和下限之间随机取出n个整数</span></span><br><span class="line">missing_features = rng.randint(<span class="number">0</span>, n_features, n_missing_samples) <span class="comment"># (0,13,3289)</span></span><br><span class="line">missing_samples = rng.randint(<span class="number">0</span>, n_samples, n_missing_samples) <span class="comment"># (0,506,3289)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X_missing = X_full.copy()</span><br><span class="line">y_missing = y_full.copy()</span><br><span class="line">X_missing[missing_samples,missing_features] = np.nan  <span class="comment"># 指定为nan，代表缺失掉的数据</span></span><br><span class="line"><span class="comment"># y_missing 不变</span></span><br><span class="line">X_missing = pd.D</span><br></pre></td></tr></table></figure><h3 id="数据填充">3 数据填充</h3><h4 id="均值填充">3.1 均值填充</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imp_mean = SimpleImputer(missing_values=np.nan, strategy=<span class="string">&quot;mean&quot;</span>)  <span class="comment"># 指定缺失值是什么和用什么填充</span></span><br><span class="line">X_missing_mean = imp_mean.fit_transform(X_missing)  <span class="comment"># fit + predict----&gt;特殊接口transform</span></span><br><span class="line">pd.DataFrame(X_missing_mean).isnull().<span class="built_in">sum</span>() <span class="comment"># X_missing_mean是一个ndaraay</span></span><br></pre></td></tr></table></figure><h4 id="值填充">3.2 0值填充</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imp_0 = SimpleImputer(missing_values=np.nan, strategy=<span class="string">&quot;constant&quot;</span>, fill_value=<span class="number">0</span>)   <span class="comment"># 用0进行填充</span></span><br><span class="line">X_missing_0 = imp_0.fit_transform(X_missing)</span><br><span class="line">pd.DataFrame(X_missing_0).isnull().<span class="built_in">sum</span>() </span><br></pre></td></tr></table></figure><h4 id="随机森林填充">3.3 随机森林填充</h4><p>假设一个具有<code>n</code>个特征的数据，特征T存在缺失值<strong>（大量缺失更适合）</strong>，把T当做是标签，<strong>其他的n-1个特征和原来的数据看作是新的特征矩阵</strong>，具体数据解释为：</p><table><thead><tr class="header"><th style="text-align: left;">数据</th><th style="text-align: left;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">Xtrain</td><tdstyle="text-align: left;">特征T不缺失的值对应的n-1个特征+原始标签</td></tr><tr class="even"><td style="text-align: left;">ytrain</td><td style="text-align: left;">特征T不缺失的值</td></tr><tr class="odd"><td style="text-align: left;">Xtest</td><td style="text-align: left;">特征T缺失的值对应的n-1个特征+原始标签</td></tr><tr class="even"><td style="text-align: left;">ytest</td><td style="text-align: left;">特征T缺失值（未知）</td></tr></tbody></table><p>注意：如果其他特征也存在缺失值，遍历所有的特征，从缺失值最少的开始。</p><ol type="1"><li>缺失值越少，所需要的准确信息也越少</li><li>填补一个特征，先将其他特征值的缺失值用<code>0</code>代替，这样每次循环一次，有缺失值的特征便会减少一个</li></ol><p>假设数据有n个特征，m行数据：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102005531.png" alt="" style="zoom:33%;" /></p><p>由于是从最少的缺失值特征开始填充，那么需要找出存在缺失值的索引的顺序：<code>argsort</code>函数的使用</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102026911.png" alt="" style="zoom:50%;" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X_missing_reg = X_missing.copy()</span><br><span class="line"><span class="comment"># 找出缺失值从小到大对应的索引值</span></span><br><span class="line">sortindex = np.argsort(pd.DataFrame(X_missing_reg).isnull().<span class="built_in">sum</span>(axis=<span class="number">0</span>)).values</span><br></pre></td></tr></table></figure><p>填充过程：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sortindex:</span><br><span class="line">    <span class="comment"># 构建新的特征矩阵和新标签</span></span><br><span class="line">    df = X_missing_reg   <span class="comment"># 所有的操作都在df上进行，只是最后得到的填充值作用在X_missing_reg上面</span></span><br><span class="line">    fillc = df.iloc[:, i]   <span class="comment"># 某个需要填充的列，索引为i</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 没有被选中填充（!=）的特征与原始标签的连接起来；df就是新特征矩阵</span></span><br><span class="line">    df = pd.concat([df.iloc[:, df.columns != i], pd.DataFrame(y_full)], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 新的特征矩阵df中，对含有缺失值的列，进行0的填补</span></span><br><span class="line">    <span class="comment"># 检查是否有0 pd.DataFrame(df_0).isnull().sum()</span></span><br><span class="line">    df_0 = SimpleImputer(missing_values=np.nan, strategy=<span class="string">&#x27;constant&#x27;</span>, fill_value=<span class="number">0</span>).fit_transform(df)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 找出训练集和测试集</span></span><br><span class="line">    ytrain = fillc[fillc.notnull()]  <span class="comment"># 被选中填充的特征矩阵T中的非空值</span></span><br><span class="line">    ytest = fillc[fillc.isnull()]  <span class="comment"># 被选中填充的特征矩阵T中的空值</span></span><br><span class="line">    Xtrain = df_0[ytrain.index, :]  <span class="comment"># 新特征矩阵上，被选出来要填充的特征的非空值对应的记录</span></span><br><span class="line">    Xtest = df_0[ytest.index, :]   <span class="comment"># 空值对应的记录</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 随机森林填充缺失值</span></span><br><span class="line">    rfc = RandomForestRegressor(n_estimators=<span class="number">100</span>)</span><br><span class="line">    rfc = rfc.fit(Xtrain, ytrain)</span><br><span class="line">    y_predict = rfc.predict(Xtest)  <span class="comment"># predict接口预测得到的结果就是用来填充空值的那些值</span></span><br><span class="line">    <span class="comment"># 将填补好的特征返回到我们的原始特征矩阵中</span></span><br><span class="line">    X_missing_reg.loc[X_missing_reg.iloc[:, i].isnull(), i] = y_predict</span><br></pre></td></tr></table></figure><h3 id="四种数据建模">4 四种数据建模</h3><ul><li>MSE：均方误差；回归树的衡量指标，越小越好。sklearn中使用的是负均方误差neg_mean_squared_error。均方误差本身是种误差loss，通过负数表示</li><li>R2：回归树score返回的真实值是R的平方，不是MSE</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">X = [X_full, X_missing_mean, X_missing_0, X_missing_reg]</span><br><span class="line">mse = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> X:</span><br><span class="line">    estimator = RandomForestRegressor(random_state=<span class="number">0</span>, n_estimators=<span class="number">100</span>)</span><br><span class="line">    scores = cross_val_score(estimator, x, y_full, scoring=<span class="string">&quot;neg_mean_squared_error&quot;</span>, cv=<span class="number">5</span>).mean()</span><br><span class="line">    mse.append(scores * -<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102157302.png" alt="" style="zoom:67%;" /></p><h3 id="绘图">5 绘图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">x_labels = [<span class="string">&quot;Full Data&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Mean Imputation&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Zero Imputation&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Regressor Imputation&quot;</span>]</span><br><span class="line"></span><br><span class="line">colors = [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">6</span>))  <span class="comment"># 生成画布</span></span><br><span class="line">ax = plt.subplot(<span class="number">111</span>)  <span class="comment"># 添加子图</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上面的过程中已经求出了4种不同数据的MSE</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> np.arange(<span class="built_in">len</span>(mse)):  <span class="comment"># arange(4)</span></span><br><span class="line">    ax.barh(i, mse[i], color=colors[i],alpha=<span class="number">0.6</span>,align=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax.set_title(<span class="string">&quot;Imputation Techniques with Boston Data&quot;</span>)  <span class="comment"># 标题</span></span><br><span class="line">ax.set_xlim(left=np.<span class="built_in">min</span>(mse)*<span class="number">0.9</span>,</span><br><span class="line">           right=np.<span class="built_in">max</span>(mse)*<span class="number">1.1</span>)  <span class="comment"># 横轴是mse的取值</span></span><br><span class="line"></span><br><span class="line">ax.set_yticks(np.arange(<span class="built_in">len</span>(mse)))</span><br><span class="line">ax.set_label(<span class="string">&quot;MSE&quot;</span>)</span><br><span class="line">ax.set_yticklabels(x_labels)   <span class="comment"># 用x_labels中的名字作为y轴的命名</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102157852.png" alt="" style="zoom:67%;" /></p><h3 id="参考文章">参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;复现这篇文章&lt;a
href=&quot;https://cloud.tencent.com/developer/article/1795954&quot;&gt;基于随机森林方法的缺失值填充&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;导入各自包：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import numpy as np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pandas as pd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import matplotlib.pyplot as plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# from sklearn.datasets import load_boston  # 新版本无波士顿数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from sklearn.impute import SimpleImputer  # 填充缺失值的类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from sklearn.ensemble import RandomForestRegressor  # 随机森林回归&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from sklearn.model_selection import cross_val_score  # 交叉验证&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="随机森林" scheme="https://www.sdhlw.top/tags/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/"/>
    
  </entry>
  
  <entry>
    <title>博客一篇文章一个文件夹问题</title>
    <link href="https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E9%97%AE%E9%A2%98/"/>
    <id>https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E9%97%AE%E9%A2%98/</id>
    <published>2024-03-09T06:07:22.000Z</published>
    <updated>2024-03-09T08:15:09.738Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>post_asset_folder开启的话，便是这种情况，一篇文章一个文件夹，用来放置图片<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[关于hexo的配置：post_asset_folder 问题](https://github.com/hexojs/hexo/issues/3551)">[1]</span></a></sup>，自己的文章图片都是使用图床，所以无需这个设置，但是开启一次之后再关闭，之前的文章还是一篇文章一个文件夹。</p><span id="more"></span><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://github.com/hexojs/hexo/issues/3551">关于hexo的配置：post_asset_folder问题</a><a href="#fnref:1" rev="footnote"> ↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;post_asset_folder开启的话，便是这种情况，一篇文章一个文件夹，用来放置图片&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[关于hexo的配置：post_asset_folder 问题](https://github.com/hexojs/hexo/issues/3551)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;，自己的文章图片都是使用图床，所以无需这个设置，但是开启一次之后再关闭，之前的文章还是一篇文章一个文件夹。&lt;/p&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>博客访问速度提升（双线部署coding &amp; github）</title>
    <link href="https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E6%8F%90%E5%8D%87%EF%BC%88%E5%8F%8C%E7%BA%BF%E9%83%A8%E7%BD%B2coding-github%EF%BC%89/"/>
    <id>https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E6%8F%90%E5%8D%87%EF%BC%88%E5%8F%8C%E7%BA%BF%E9%83%A8%E7%BD%B2coding-github%EF%BC%89/</id>
    <published>2024-03-08T11:36:13.000Z</published>
    <updated>2024-03-09T05:51:47.294Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>实现大陆访问，使用coding（大家可以理解为中国版的github），国外访问，使用github，以及可以提交百度收录（GitHub禁止了百度的爬取）<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Hexo 双线部署到 Coding 和 GitHub 提升访问速度](https://zhuanlan.zhihu.com/p/111796666)">[1]</span></a></sup></p><p>暂时停止折腾了，coding代码迁移是可以，但是静态网站功能的实现不好搞，coding停掉，需要借助腾讯云搭建。很久之前也尝试过gitee，那段时间直接停掉静态网站的搭建功能，目前不清楚。。。</p><span id="more"></span><h2 id="创建项目">1.创建项目</h2><p>去coding官网，新建账号，并登录，创建项目。</p><h2 id="配置-_config.yml">2.配置 _config.yml</h2><p>去博客根目录，添加coding链接，如果要同时推送到GitHub和Coding，type前面加-：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403082221225.png" alt="image-20240308222139508" style="zoom: 50%;" /></p><h2 id="将代码推送到coding">3.将代码推送到Coding</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><figure><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403082218690.png"alt="image-20240308202731574" /><figcaption aria-hidden="true">image-20240308202731574</figcaption></figure><p>搞了快一个晚上。。。服了，coding验证的用户名是手机号码！！！！，不是个人信息里的用户名，刚注册coding的小伙伴在部署前，先绑定手机号码，再部署。</p><h2 id="开启-coding-pages还未解决">4.开启 Coding Pages（还未解决）</h2><p>项目这里并没有看到静态部署页面，应该是更改了方式，这里也可能是项目创建时没选对模板，但是创建项目时并没有如其他博客<sup id="fnref:3"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[2021使用Coding和Github来实现双线部署](https://cloud.tencent.com/developer/article/1834005)">[3]</span></a></sup>有可选模板选择，也没找到更改项目类型的设置。。。</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403082305099.png" alt="以往" style="zoom:33%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403091231291.png" alt="现在" style="zoom:33%;" /></p><p>查了一下，果然<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[自建静态网站](https://coding.net/help/docs/devops/ci/practice/static-website-paas.html)">[2]</span></a></sup>，代码放coding, 使用任务把代码又转到腾讯云？：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403091230463.png" alt="" style="zoom: 33%;" /></p><p>也就是现在需要从第二步开始跟着操作即可。</p><p>第三步出现问题，现在只有构建计划，没有构建任务选项，进入构建计划时，jenkinsfile无法直接填充，需要提前在代码仓库构建，但是在设置环境变量时卡住了，这里的环境变量在jenkinsfile好像已经指定了。</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403091230342.png" alt="" style="zoom: 33%;" /></p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/111796666">Hexo双线部署到 Coding 和 GitHub提升访问速度</a><a href="#fnref:1" rev="footnote"> ↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://coding.net/help/docs/devops/ci/practice/static-website-paas.html">自建静态网站</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li><li id="fn:3"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://cloud.tencent.com/developer/article/1834005">2021使用Coding和Github来实现双线部署</a><a href="#fnref:3" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;实现大陆访问，使用coding（大家可以理解为中国版的github），国外访问，使用github，以及可以提交百度收录（GitHub
禁止了百度的爬取）&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[Hexo 双线部署到 Coding 和 GitHub 提升访问速度](https://zhuanlan.zhihu.com/p/111796666)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;暂时停止折腾了，coding
代码迁移是可以，但是静态网站功能的实现不好搞，coding停掉，需要借助腾讯云搭建。很久之前也尝试过gitee，那段时间直接停掉静态网站的搭建功能，目前不清楚。。。&lt;/p&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="Coding" scheme="https://www.sdhlw.top/tags/coding/"/>
    
    <category term="Github" scheme="https://www.sdhlw.top/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Python环境的配置</title>
    <link href="https://www.sdhlw.top/python%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.sdhlw.top/python%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE/</id>
    <published>2024-03-08T09:11:11.000Z</published>
    <updated>2024-03-08T12:11:27.351Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>需求：在使用 pycharm 或 vscode 时，对切换 python的版本，以及安装的包的位置等环境问题，比较模糊。</p><p>该文章解决一下问题：</p><ul><li>如何使用 conda 创建环境，如何下载指定版本的包到指定的环境</li><li>下载的包在本地的哪个目录</li><li>pycharm 和 vscode 如何使用 conda 的环境</li></ul><span id="more"></span><p>解决：</p><p>1、环境的配置，使用 conda 软件</p><p>miniconda 官网的下载方式： 命令行执行一下三行命令： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe -o miniconda.exe</span><br><span class="line">start /wait &quot;&quot; miniconda.exe /S</span><br><span class="line">del miniconda.exe</span><br></pre></td></tr></table></figure></p><p>有一个问题，它默认安装位置在 C 盘，而想换安装位置怎么办？</p><p>第一行下载 exe 文件 第二行执行 exe 文件，安装软件 第三行删除 exe文件</p><p>最简单的是执行第一行之后，找到 exe双击，可视化安装即可选择安装位置，可勾选添加到环境变量，没勾选，可手动将三个目录添加到环境目录（目的:任意位置可以调用miniconda）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1）C:\Users\Administrator\Miniconda3；   </span><br><span class="line">2）C:\Users\Administrator\Miniconda3\Scripts；   </span><br><span class="line">3）C:\Users\Administrator\Miniconda3\Library\bin</span><br></pre></td></tr></table></figure><p><code>C:\Users\Administrator\</code> 需要更换为你的安装目录。</p><h3 id="conda-的基本使用">conda 的基本使用：</h3><p>打开 Anaconda Powershell Prompt，执行基本命令，实现相关功能：</p><p><code>conda -V</code> ：获取 conda 版本号 <code>conda env list</code>：列举当前所有环境 <code>conda -n test python=3.10</code> ：创建新的环境(test)，并指定环境中使用的 python 版本，意味着 python 直接通过 conda安装，不需要单纯去 python 官网安装 python。<code>conda activate your_env_name</code> ：激活某个环境</p><p>重命名环境，先克隆，后删除： 把环境 rcnn 重命名成 tf<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create -n tf --clone rcnn</span><br><span class="line">conda remove -n rcnn --all</span><br></pre></td></tr></table></figure></p><p>下载指定的包到指定的环境：使用 conda，激活指定的环境，使用<code>pip install 包名</code> 下载相应的包</p><p>pip 下载指定存在版本的包：1、使用命令查看包（pandas）有哪些版本：<code>pip install pandas==</code>2、使用命令下载指定版本的包：<code>pip install pandas==2.1.1</code></p><p>下载的包的位置就在 miniconda的安装目录中（<code>...\miniconda\envs</code>）</p><p>临时使用指定镜像下载包名：<code>pip install pandas -i https://pypi.tuna.tsinghua.edu.cn/simple</code></p><p>conda 添加镜像源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud//pytorch/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --add channels https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">清华：https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">阿里云：http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/</span><br></pre></td></tr></table></figure><p>去除镜像源，恢复默认配置<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="https://www.cnblogs.com/fireblackman/p/16422750.html">[1]</span></a></sup>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 全部删除  </span><br><span class="line">conda config --remove-key channels </span><br><span class="line"># 指定删除</span><br><span class="line">conda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud//pytorch/</span><br><span class="line">conda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br></pre></td></tr></table></figure><h3 id="pycharm-如何调用-conda-环境">pycharm 如何调用 conda 环境：</h3><p>首先新建工程，打开工程，再进行设置：<code>file--setting--project</code>的 <code>Python Interpreter</code> 的 <code>add Interpreter</code>,然后选择 miniconda 安装目录的 envs 的环境名称目录里的<code>python.exe</code> 即可</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202403081740750.png" /></p><h3 id="vscode-调用相应-conda-环境">vscode 调用相应 conda 环境：</h3><p>vscode 如果已经安装了 python 插件，那么 python插件就可以管理环境了</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202403081740814.png" /></p><p>如果在 vscode 使用了 jupyter notebook 可以选择 conda 环境</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202403081740880.png" /></p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;">https://www.cnblogs.com/fireblackman/p/16422750.html<a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;需求：在使用 pycharm 或 vscode 时，对切换 python
的版本，以及安装的包的位置等环境问题，比较模糊。&lt;/p&gt;
&lt;p&gt;该文章解决一下问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何使用 conda 创建环境，如何下载指定版本的包到指定的环境&lt;/li&gt;
&lt;li&gt;下载的包在本地的哪个目录&lt;/li&gt;
&lt;li&gt;pycharm 和 vscode 如何使用 conda 的环境&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Pycharm" scheme="https://www.sdhlw.top/tags/pycharm/"/>
    
    <category term="Vscode" scheme="https://www.sdhlw.top/tags/vscode/"/>
    
    <category term="Conda" scheme="https://www.sdhlw.top/tags/conda/"/>
    
  </entry>
  
  <entry>
    <title>2中国北方地区小麦覆盖栽培增产效应的荟萃（Meta）分析</title>
    <link href="https://www.sdhlw.top/2%E4%B8%AD%E5%9B%BD%E5%8C%97%E6%96%B9%E5%9C%B0%E5%8C%BA%E5%B0%8F%E9%BA%A6%E8%A6%86%E7%9B%96%E6%A0%BD%E5%9F%B9%E5%A2%9E%E4%BA%A7%E6%95%88%E5%BA%94%E7%9A%84%E8%8D%9F%E8%90%83%EF%BC%88meta%EF%BC%89%E5%88%86%E6%9E%90/"/>
    <id>https://www.sdhlw.top/2%E4%B8%AD%E5%9B%BD%E5%8C%97%E6%96%B9%E5%9C%B0%E5%8C%BA%E5%B0%8F%E9%BA%A6%E8%A6%86%E7%9B%96%E6%A0%BD%E5%9F%B9%E5%A2%9E%E4%BA%A7%E6%95%88%E5%BA%94%E7%9A%84%E8%8D%9F%E8%90%83%EF%BC%88meta%EF%BC%89%E5%88%86%E6%9E%90/</id>
    <published>2024-02-19T02:11:22.000Z</published>
    <updated>2024-02-19T03:52:24.074Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>目的：明确中国北方地区秸秆覆盖和地膜覆盖技术对小麦生产的影响，探索两种覆盖体系的适宜推广区域。</p><p>方法：近 40 年，165篇文献，荟萃分析（Meta-analysis），整体采用随机效应模型，重点揭示覆盖增产效应对不同环境条件（海拔、降水量、气温、日照）及田间管理措施（覆盖周期、种植密度、耕作、施肥）的响应规律。</p><span id="more"></span><p>结果：</p><ul><li>秸秆和地膜覆盖分别使小麦产量显著提高了 19.53%（95%CI =0.55%—38.52%）和 24.91%（95%CI = 3.18%—46.64%）</li><li>不同覆盖方式，产量构成因素对增产的贡献率存在差异：<ul><li>有效穗数＞穗粒数＞千粒重（秸秆覆盖）</li><li>有效穗数＞千粒重＞穗粒数（地膜覆盖）</li></ul></li><li>覆膜的生物量和水分利用效率同样比覆秸秆高出 18.17%和 14.39%。</li><li>随着地势的下降，覆膜的增产效应相对于非覆盖呈现出增长趋势</li><li>塑料薄膜相对于秸秆的增产优势会随着覆盖年限的增加而逐渐缩小，在超过 8年 的试验中，覆盖秸秆的整体增产率反而更高。</li><li>秸秆覆盖产量还受到施肥和耕作措施的影响</li><li>影响两种覆盖体系中土壤含水量的首要因子分别为蒸散量（r =-0.859）以及水分利用效率（r = 0.856）</li></ul><p>图表：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402191037984.png" alt="" style="zoom:30%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402191110331.png" alt="" style="zoom:80%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402191111260.png" alt="" style="zoom:80%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402191038012.png" alt="" style="zoom:50%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402191039020.png" alt="" style="zoom:50%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402191040257.png" alt="" style="zoom: 50%;" /></p><h3 id="参考文章">参考文章</h3><p>秦羽青, 程宏波, 柴雨葳, 马建涛, 李瑞, 李亚伟, 常磊, 柴守玺, 2022.中国北方地区小麦覆盖栽培增产效应的荟萃（Meta）分析. 中国农业科学 55,1095–1109.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;目的：明确中国北方地区秸秆覆盖和地膜覆盖技术对小麦生产的影响，探索两种覆盖体系的适宜推广区域。&lt;/p&gt;
&lt;p&gt;方法：近 40 年，165
篇文献，荟萃分析（Meta-analysis），整体采用随机效应模型，重点揭示覆盖增产效应对不同环境条件（海拔、降水量、气温、日照）及田间管理措施（覆盖周期、种植密度、耕作、施肥）的响应规律。&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    <category term="文献泛读" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E6%96%87%E7%8C%AE%E6%B3%9B%E8%AF%BB/"/>
    
    
    <category term="Meta分析" scheme="https://www.sdhlw.top/tags/meta%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客Next主题添加统计文章阅读量功能</title>
    <link href="https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F/"/>
    <id>https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F/</id>
    <published>2024-02-19T01:48:32.000Z</published>
    <updated>2024-02-19T03:30:06.190Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Next主题支持一个叫LeanCloud的云服务商提供的统计功能<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="Hexo博客Next主题添加统计文章阅读量功能(https://bjtu-hxs.github.io/2018/06/12/leancloud-config/)">[1]</span></a></sup>。</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402191003696.png" alt="" style="zoom: 33%;" /></p><h3 id="注册leancloud帐号">注册LeanCloud帐号</h3><p>首先要注册一个帐号，访问<ahref="https://leancloud.cn/">LeanCloud官网</a>，点击免费试用，或者访问控制台都会进入登录/注册页面，直接注册就好，也可以直接第三方账号登录，不过登录之后还是需要绑定邮箱和手机号。</p><span id="more"></span><h3 id="配置leancloud端">配置LeanCloud端</h3><p>有了帐号了，就是一名可以行使权力的正经用户了，那就开始配置Cloud，来为我们的Blog统计功能创建一个新应用吧。然后需要为统计阅读量创建一个表，然后得到应用的app-id与app-key，用来配置我们的Next实现统计功能。</p><ul><li>进入控制台，点击创建应用</li><li>就命名为test吧，然后选择开发版（免费哒），然后创建</li><li>点进test开发版，为统计阅读量单独创建一个Class，就是在数据库中建一个表，首先点击存储，然后创建Class，Next要求Class名称必须为Counter，所以命名一定要为Counter，为了防止阅读量统计不准确，建议ACL权限设置为无限制，然后点击创建Class。就会像我的数据库一样，除了一些带下划线_的表之外，还有一个Counter表。</li></ul><h3 id="设置网络安全">设置网络安全</h3><p>由于app-id和app-key是完全暴露的，所以防止他人使用，我们可以在应用设置里面面设置Web安全局名，只有添加的域名才能使用该应用，防止有人Hack我们的数据库。点击设置，安全中心，Web域名安全，添加Blog域名，点击保存就OK了。</p><h3 id="配置博客端">配置博客端</h3><p>配置_config.yml文档</p><p>首先需要得到LeanCloud应用的app-id与app-key，在控制台，设置，应用key中就可以找到。</p><p>然后配置就很简单了，只需要修改Next主题的配置文档_config.yml，该文档在blog/themes/next路径下，blog为你的博客文档夹，打开配置文档，找到LeanCloud配置项，修改为可用，添加对应app-id和app-key就行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Show number of visitors to each article.</span><br><span class="line"># You can visit https://leancloud.cn get AppID and AppKey.</span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: # 你的app-id </span><br><span class="line">  app_key: # 你的app-key</span><br></pre></td></tr></table></figure><p>然后使用命令<code>hexo generate</code>重新生成Blog，<code>hexo deploy</code>部署到Github就OK了，</p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;">Hexo博客Next主题添加统计文章阅读量功能(https://bjtu-hxs.github.io/2018/06/12/leancloud-config/)<a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;Next主题支持一个叫LeanCloud的云服务商提供的统计功能&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;Hexo博客Next主题添加统计文章阅读量功能(https://bjtu-hxs.github.io/2018/06/12/leancloud-config/)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402191003696.png&quot; alt=&quot;&quot; style=&quot;zoom: 33%;&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;注册leancloud帐号&quot;&gt;注册LeanCloud帐号&lt;/h3&gt;
&lt;p&gt;首先要注册一个帐号，访问&lt;a
href=&quot;https://leancloud.cn/&quot;&gt;LeanCloud官网&lt;/a&gt;，点击免费试用，或者访问控制台都会进入登录/注册页面，直接注册就好，也可以直接第三方账号登录，不过登录之后还是需要绑定邮箱和手机号。&lt;/p&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>1中国马铃薯地膜覆盖增产效应及其影响因素的Meta分析</title>
    <link href="https://www.sdhlw.top/1%E4%B8%AD%E5%9B%BD%E9%A9%AC%E9%93%83%E8%96%AF%E5%9C%B0%E8%86%9C%E8%A6%86%E7%9B%96%E5%A2%9E%E4%BA%A7%E6%95%88%E5%BA%94%E5%8F%8A%E5%85%B6%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0%E7%9A%84meta%E5%88%86%E6%9E%90/"/>
    <id>https://www.sdhlw.top/1%E4%B8%AD%E5%9B%BD%E9%A9%AC%E9%93%83%E8%96%AF%E5%9C%B0%E8%86%9C%E8%A6%86%E7%9B%96%E5%A2%9E%E4%BA%A7%E6%95%88%E5%BA%94%E5%8F%8A%E5%85%B6%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0%E7%9A%84meta%E5%88%86%E6%9E%90/</id>
    <published>2024-02-18T13:41:07.000Z</published>
    <updated>2024-02-18T14:01:09.474Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>目的：量化地膜对马铃薯的产量和水分利用效率的影响，分析其中的影响因素</p><p>方法：</p><ul><li>1981—2021 年，Web of Science/知网，291篇中国马铃薯地膜覆盖大田试验文献</li><li>用 Meta 分析方法量化影响</li><li>不同区域、不同自然条件等，研究地膜覆盖对马铃薯产量和水分利用效率的影响</li><li>利用 NoteExpress 和 EndNote 进行中英文文献管理；利用 MicrosoftOffice 2010 进行数据收集、数据库建立和一些基础计算；利用 R 语言中的metafor 包进行 Meta 分析；利用GraphPad Prism 作图。</li></ul><span id="more"></span><p>结果：</p><ul><li>地膜覆盖使马铃薯产量和水分利用效率分别提高 24.9%和 28.3%</li><li>不同区域地膜增产与提升水分利用效率的效果不同</li><li>种植密度与栽培方式在各区域的响应一致，即低密度种植与垄作条件下，地膜增产效应最好。</li></ul><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402182139000.png" alt="" style="zoom:45%;" /></p><h3 id="参考文章">参考文章</h3><p>徐菊祯, 张梦璐, 何文清, 隋鹏, 陈源泉, 崔吉晓, 2023.中国马铃薯地膜覆盖增产效应及其影响因素的Meta分析. 中国农业科学 56,2895–2906.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;目的：量化地膜对马铃薯的产量和水分利用效率的影响，分析其中的影响因素&lt;/p&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1981—2021 年，Web of Science/知网，291
篇中国马铃薯地膜覆盖大田试验文献&lt;/li&gt;
&lt;li&gt;用 Meta 分析方法量化影响&lt;/li&gt;
&lt;li&gt;不同区域、不同自然条件等，研究地膜覆盖对马铃薯产量和水分利用效率的影响&lt;/li&gt;
&lt;li&gt;利用 NoteExpress 和 EndNote 进行中英文文献管理；利用 Microsoft
Office 2010 进行数据收集、数据库建立和一些基础计算；利用 R 语言中的
metafor 包进行 Meta 分析；利用GraphPad Prism 作图。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    <category term="文献泛读" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E6%96%87%E7%8C%AE%E6%B3%9B%E8%AF%BB/"/>
    
    
    <category term="Meta分析" scheme="https://www.sdhlw.top/tags/meta%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Mata分析森林图</title>
    <link href="https://www.sdhlw.top/mata%E5%88%86%E6%9E%90%E6%A3%AE%E6%9E%97%E5%9B%BE/"/>
    <id>https://www.sdhlw.top/mata%E5%88%86%E6%9E%90%E6%A3%AE%E6%9E%97%E5%9B%BE/</id>
    <published>2024-02-18T13:40:32.000Z</published>
    <updated>2024-03-08T11:08:25.880Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>森林图是以统计指标和统计分析方法为基础，用数值运算结果绘制出的图型。用以综合展示每个被纳入研究的效应量以及汇总的合并效应量<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[5分钟教您快速解读meta分析的森林图](https://www.bilibili.com/video/BV1wY4y1C7t2/?spm_id_from=333.788&amp;vd_source=9f04b059fdee5024fd04678f53de10ad)">[1]</span></a></sup>。</p><h3 id="连续变量">连续变量</h3><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402182055153.png" alt="" style="zoom:67%;" /></p><span id="more"></span><p>异质性<spanclass="math inline">\(I^2\)</span>,它的数值代表这三篇RCT有没有明显差异，差异越小说明得出综合效应的结果越可靠，小于20%说明异质性小，大于50%说明异质性较大。</p><p>favours代表菱形框往哪边偏倚支持那边就是更好的方法。</p><p>综合效应如果贴到无效线，则无显著差异：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402182134793.png" alt="" style="zoom:23%;" /></p><p>森林图：</p><ul><li>随机效应模型(Random)：随机效应模型是把每一篇RCT的影响力对等，不按它的样本量，把每一篇RCT平均影响综合效应表示出来。</li><li>固定效应模型(Fixed)：固定效应模型是按它的样本量将样本量大的RCT影响权重加大，纳入人群更多的RCT的结果将更影响综合效应。</li></ul><p>一般我们推荐用随机效应模型，因为每一篇RCT都是独立个体，都应均等地影响综合效应，但是一种情况除外那就是其中一个RCT样本量非常大，而其他RCT样本量寥寥无几，那么显然这个样本量大的RCT结果更可靠，更应该权重放大，这就选择固定效应模型。其实不管选择什么模型，做好必要解释就行。</p><h3 id="二分类变量">二分类变量</h3><p>刚刚的图是连续变量，就是用平均值和标准差做比较。而有些结果是通过二分类变量展示的，比如说治愈率，就是总的人数(Tota)和治愈的人数(Events)。软件会自动将Events.定义为不良事件，所以事件发生次数越少，越偏向有利。但是像治愈这种良性事件，我们就需要把下边这个标记换个顺序即可。</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402182125244.png" alt="" style="zoom:50%;" /></p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.bilibili.com/video/BV1wY4y1C7t2/?spm_id_from=333.788&amp;vd_source=9f04b059fdee5024fd04678f53de10ad">5分钟教您快速解读meta分析的森林图</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;森林图是以统计指标和统计分析方法为基础，用数值运算结果绘制出的图型。用以综合展示每个被纳入研究的效应量以及汇总的合并效应量&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[5分钟教您快速解读meta分析的森林图](https://www.bilibili.com/video/BV1wY4y1C7t2/?spm_id_from=333.788&amp;amp;vd_source=9f04b059fdee5024fd04678f53de10ad)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h3 id=&quot;连续变量&quot;&gt;连续变量&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402182055153.png&quot; alt=&quot;&quot; style=&quot;zoom:67%;&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Meta分析" scheme="https://www.sdhlw.top/tags/meta%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>博客文章分类与标签</title>
    <link href="https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%E4%B8%8E%E6%A0%87%E7%AD%BE/"/>
    <id>https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%E4%B8%8E%E6%A0%87%E7%AD%BE/</id>
    <published>2024-02-18T02:15:08.000Z</published>
    <updated>2024-02-18T02:17:47.257Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="categories-应为博客主分类">categories 应为博客主分类</h3><p>我们日常生活中的分类都是树状分类（也可以说是有阶级性的，有“父”与“子”的关系），比如知识的分类、技术的分类、甚至国家公务员和公司的职员的分类。而我们博客写的文章，肯定不能脱离日常生活，故写的文章的分类也逃不了这种树状的分类，也就是categories，因此 categories应为博客的主分类。另外各种文档浏览器主要分类方式也是 categories式的树状分类，而不是 tags 。</p><span id="more"></span><h3 id="用-tags-修复-categories-的-bug">用 tags 修复 categories 的“bug”</h3><p>但是树状分类有个缺陷，比如你的 Windows电脑按文档类型有视频、音乐、文档三个文档夹，但是如果这三个文档夹中各有些你很喜欢的，而你想把它们放到一起咋办，再创建个「我喜欢」文档夹，然后把它们复制到「我喜欢」文档夹？但是这样「我喜欢」文档夹就有视频、音乐、文档三种文档类型了，又乱了……那再在「我喜欢」文档夹创建视频、音乐、文档文档夹？可以，但是如果某天你突然不喜欢了，咋办，你要把这个文档从两个目录都删除。那开始时移动到「我喜欢」文档夹不就行了，而不是复制，但是这样你视频、音乐、文档的所有文档就不在一个目录了。</p><p>为啥会这么麻烦？因为文档类型是一种分类维度，而「我喜欢」是另一种分类维度，在树状分类的Windows文档浏览器中，无法实现不同分类维度的共存，树状分类只能有一种分类维度。</p><p>而 tags 就可以弥补 categories 式的树状分类的缺陷，毕竟 tags是一种并行分类，一个 tag就是一种分类维度，因此可以解决这个问题。在上面的例子中，如果 Windows文档浏览器可以在你喜欢的文档上加上「我喜欢」的 tag ，然后有个” tags浏览器“，就 OK 了。什么？Windows上的文档浏览器没有这个功能？哈哈哈，NexT 就有啊！</p><h3 id="博客文章分类的正确姿势">博客文章分类的正确姿势</h3><p>Linux 安装软件，Linux系统安装好，一些目录就已经存在，然后你安装一个软件，文档就会存放在这些已有的相应目录下。而写博客和Linux中安装软件也是类似的，最好搭建好博客后写文章前就想好博客的分类，然后写一篇文章就“移动”到相应”目录“。写完文章后，再通过加tags 补categories 的 ”bug“<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[文章页的标签在文章的结尾显示了，而不是和时间、分类一起显示](https://github.com/iissnan/hexo-theme-next/issues/1901)">[1]</span></a></sup>。</p><p>目前的文章分类：</p><ul><li>博客运营<ul><li>markdown</li></ul></li><li>科研学习<ul><li>理论知识</li><li>代码相关（含Linux和代码理论知识）</li><li>软件使用</li></ul></li><li>生活随笔</li></ul><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://github.com/iissnan/hexo-theme-next/issues/1901">文章页的标签在文章的结尾显示了，而不是和时间、分类一起显示</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;categories-应为博客主分类&quot;&gt;categories 应为博客主分类&lt;/h3&gt;
&lt;p&gt;我们日常生活中的分类都是树状分类（也可以说是有阶级性的，有“父”与“子”的关系），比如知识的分类、技术的分类、甚至国家公务员和公司的职员的分类。而我们博客写的文章，肯定不能脱离日常生活，故写的文章的分类也逃不了这种树状的分类，也就是
categories，因此 categories
应为博客的主分类。另外各种文档浏览器主要分类方式也是 categories
式的树状分类，而不是 tags 。&lt;/p&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>Next主题添加切换暗黑模式</title>
    <link href="https://www.sdhlw.top/next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%88%87%E6%8D%A2%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.sdhlw.top/next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%88%87%E6%8D%A2%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/</id>
    <published>2024-02-17T14:04:28.000Z</published>
    <updated>2024-02-18T02:06:59.206Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>安装 <code>hexo-next-darkmode</code> <ahref="https://github.com/rqh656418510/hexo-next-darkmode/blob/main/README_CN.md">插件</a><sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Hexo Next 8.x 主题添加可切换的暗黑模式](https://www.techgrow.cn/posts/abf4aee1.html#Next-7-x-%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E5%8F%AF%E5%88%87%E6%8D%A2%E7%9A%84%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F)">[1]</span></a></sup></p><p>windows管理员打开powershell，运行一下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-next-darkmode --save --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="配置-hexo-插件">配置 Hexo 插件</h3><p>在 Next 主题的 <code>_config.yml</code> 配置文档里添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># Darkmode JS</span><br><span class="line"># For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span><br><span class="line">darkmode_js:</span><br><span class="line">  enable: true</span><br><span class="line">  bottom: &#x27;64px&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  right: &#x27;unset&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  left: &#x27;32px&#x27; # default: &#x27;unset&#x27;</span><br><span class="line">  time: &#x27;0.5s&#x27; # default: &#x27;0.3s&#x27;</span><br><span class="line">  mixColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  backgroundColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  buttonColorDark: &#x27;#100f2c&#x27; # default: &#x27;#100f2c&#x27;</span><br><span class="line">  buttonColorLight: &#x27;#fff&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  isActivated: false # default false</span><br><span class="line">  saveInCookies: true # default: true</span><br><span class="line">  label: &#x27;🌓&#x27; # default: &#x27;&#x27;</span><br><span class="line">  autoMatchOsTheme: true # default: true</span><br><span class="line">  libUrl: # Set custom library cdn url for Darkmode.js</span><br></pre></td></tr></table></figure><ul><li><code>isActivated: true</code>：默认激活暗黑 / 夜间模式，请始终与<code>saveInCookies: false</code>、<code>autoMatchOsTheme: false</code>一起使用；同时需要在 NexT 主题的 <code>_config.yml</code> 配置文档里设置<code>pjax: true</code>，即启用 Pjax。</li></ul><h3 id="关闭原生的暗黑模式">关闭原生的暗黑模式</h3><p>确保 Next 原生的 <code>darkmode</code> 选项设置为<code>false</code>，在 Next 的 <code>_config.yml</code>配置文档中更改以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">darkmode: false</span><br></pre></td></tr></table></figure><p>Hexo重新构建生成静态资源文档后，点击页面上的按钮即可切换暗黑模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.techgrow.cn/posts/abf4aee1.html#Next-7-x-%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E5%8F%AF%E5%88%87%E6%8D%A2%E7%9A%84%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F">HexoNext 8.x 主题添加可切换的暗黑模式</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;安装 &lt;code&gt;hexo-next-darkmode&lt;/code&gt; &lt;a
href=&quot;https://github.com/rqh656418510/hexo-next-darkmode/blob/main/README_CN.md&quot;&gt;插件&lt;/a&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[Hexo Next 8.x 主题添加可切换的暗黑模式](https://www.techgrow.cn/posts/abf4aee1.html#Next-7-x-%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E5%8F%AF%E5%88%87%E6%8D%A2%E7%9A%84%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;windows管理员打开powershell，运行一下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-next-darkmode --save --registry=http://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>Meta分析基本知识</title>
    <link href="https://www.sdhlw.top/meta%E5%88%86%E6%9E%90%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/"/>
    <id>https://www.sdhlw.top/meta%E5%88%86%E6%9E%90%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</id>
    <published>2024-02-17T12:13:54.000Z</published>
    <updated>2024-02-18T01:51:24.455Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>"Meta分析是一种对单独的研究结果进行统计分析的方法，对研究结果间差异的来源进行检验，并对具有足够相似性的结果进行定量合成。”<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[零基础完成一篇Meta分析SCI](https://www.bilibili.com/video/BV1Jp4y1C7kc/?spm_id_from=333.337.search-card.all.click&amp;vd_source=9f04b059fdee5024fd04678f53de10ad)">[1]</span></a></sup></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161510111.png" alt="" style="zoom: 25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161511104.png" alt="" style="zoom:25%;" /></p><p>需要掌握的技能： 文献检索、文献管理、数据提取、软件操作、写作成稿</p><span id="more"></span><h3 id="文献检索">1.文献检索</h3><p>检索哪些数据库？ 英文：Medline(Pubmed),Embase,WOS,Cochrane Library...中文：知网、万方、维普、CBM.. 其他：ClinicalTrials.gov、CCTRCINAHL....</p><p>怎么检索？</p><ul><li><p>六步法</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161518053.png" alt="" style="zoom:25%;" /></p></li><li><p>PICOS原则</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161520760.png" alt="" style="zoom:25%;" /></p></li><li><p>主题词+自由词</p></li></ul><p>主题词：通过数据库官方的主题词表，如</p><ul><li>Pubmed:Medical Subject Headings,简称MeSH</li><li>Embase:Emtree</li></ul><p>自由词：</p><p>①使用各学科在国家上通用、文献中出现过的术语：②从专业词典、手册、分类表及期刊中选择检索词或者参考现有的原始文献：③同义词、近义词、上位词、下位词； ④缩略语及英文的不同拼写形式：⑤选用动植物药名的中文、英文和拉丁文；⑥同一概念的几种表达方式对于词根相同者可用截词符解决。</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161524314.png" alt="" style="zoom:25%;" /></p><h3 id="文献管理">2.文献管理</h3><p>筛选文献 阅读笔记 写作编辑</p><p>工具：</p><ul><li>Endnote</li><li>NoteExpress</li><li><a href="http://refer.medlive.cn/">医学文献王</a></li></ul><h3 id="数据提取">3.数据提取</h3><p>提取内容： 1.基本信息：题目、原始研究作者、发表年份等2.纳入研究的合格数据：研究对象特征、干预措施、结局指标、研究设计等3.方法学部分：设计方案、研究期期限、随机方案、盲法、其他偏倚等4.其他信息：资助来源、关键性结论、混杂因素和是否校正</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161531552.png" alt="" style="zoom:80%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161532352.png" alt="" style="zoom:80%;" /></p><p>结局指标数据</p><p>统计常识：Mean,SD,SE,P,Cl,OR,RR,HR,特异度，敏感度等。</p><p>获取方法：</p><ul><li>直接从文献中获取</li><li>数据转换获取：Excel数据换算表、丁香园循证医学版、百度</li><li>提取工具获取：VebPlotDigitizer(WPD),Engauge Digitizer(ED)</li><li>找作者获取：发邮件</li><li>都获取不了：定性分析、剔别除（在文献筛选部分说明原因）</li></ul><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161537979.png" alt="" style="zoom:30%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161537541.png" alt="" style="zoom:30%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161540524.png" alt="" style="zoom:30%;" /></p><h3 id="软件操作">4.软件操作</h3><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161541894.png" alt="" style="zoom:33%;" /></p><p><ahref="https://training.cochrane.org/online-learning/core-software/revman">RevManWeb</a> 也适用于非 Cochrane 的系统评价，而 RevMan 5 只能用于 Cochrane的系统评价<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[手柄手教你meta分析](https://www.bilibili.com/video/BV1A64y1q7gc/?spm_id_from=333.337.search-card.all.click&amp;vd_source=9f04b059fdee5024fd04678f53de10ad)">[2]</span></a></sup>。</p><p>工具：</p><h3 id="写作投稿">5.写作投稿</h3><p>PRISMA声明:27条</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161544010.png" alt="" style="zoom:33%;" /></p><h3 id="如何架构一篇meta分析">如何架构一篇Meta分析</h3><p>PRISMA中文版已放至：<a href="https://github.com/sdhlw/OA"></a></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161548470.png" alt="" style="zoom:23%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161549521.png" alt="" style="zoom:23%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161550132.png" alt="" style="zoom:33%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161551937.png" alt="" style="zoom:33%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161552407.png" alt="" style="zoom:25%;" /></p><h4 id="标题">标题</h4><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402162247254.png" alt="" style="zoom:25%;" /></p><h4 id="摘要">摘要</h4><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402162312052.png" alt="" style="zoom:25%;" /></p><h4 id="前言">前言</h4><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402162321769.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171630916.png" alt="" style="zoom: 28%;" /></p><h4 id="方法">方法</h4><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171628238.png" alt="" style="zoom:33%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171632222.png" alt="" style="zoom:33%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171632175.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171633412.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171634756.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171635266.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171637960.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171639896.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171641901.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171642910.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171642318.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171643847.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171644034.png" alt="" style="zoom:25%;" /></p><h4 id="结果">结果</h4><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171645732.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171646956.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171647726.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171648832.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171649552.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171649219.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171650490.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171651630.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171652055.png" alt="" style="zoom:25%;" /></p><h4 id="讨论">讨论</h4><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171653693.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171654795.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171654670.png" alt="" style="zoom:25%;" /></p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171655427.png" alt="" style="zoom:25%;" /></p><h4 id="资金支持">资金支持</h4><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402171657125.png" alt="" style="zoom:25%;" /></p><h4 id="stata实例演示制作森林图">Stata实例演示制作森林图</h4><p>此部分略</p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.bilibili.com/video/BV1Jp4y1C7kc/?spm_id_from=333.337.search-card.all.click&amp;vd_source=9f04b059fdee5024fd04678f53de10ad">零基础完成一篇Meta分析SCI</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.bilibili.com/video/BV1A64y1q7gc/?spm_id_from=333.337.search-card.all.click&amp;vd_source=9f04b059fdee5024fd04678f53de10ad">手柄手教你meta分析</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;&quot;Meta分析是一种对单独的研究结果进行统计分析的方法，对研究结果间差异的来源进行检验，并对具有足够相似性的结果进行定量合成。”&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[零基础完成一篇Meta分析SCI](https://www.bilibili.com/video/BV1Jp4y1C7kc/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=9f04b059fdee5024fd04678f53de10ad)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161510111.png&quot; alt=&quot;&quot; style=&quot;zoom: 25%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402161511104.png&quot; alt=&quot;&quot; style=&quot;zoom:25%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;需要掌握的技能： 文献检索、文献管理、数据提取、软件操作、写作成稿&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Meta分析" scheme="https://www.sdhlw.top/tags/meta%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Markdown超链接</title>
    <link href="https://www.sdhlw.top/markdown%E8%B6%85%E9%93%BE%E6%8E%A5/"/>
    <id>https://www.sdhlw.top/markdown%E8%B6%85%E9%93%BE%E6%8E%A5/</id>
    <published>2024-02-16T15:36:21.000Z</published>
    <updated>2024-02-18T01:50:06.394Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>行内形式<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Markdown超链接](https://m.imooc.com/wiki/markdownlesson-markdownlink)">[1]</span></a></sup>：<code>[百度](https://www.baidu.com/)</code></p><p>全局形式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[百度][b]</span><br><span class="line">[b]:https://www.baidu.com/</span><br></pre></td></tr></table></figure><p>当一个超链接在文章中反复出现时，可以使用全局声明的形式，减少文章编写的工作量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[天坛][tiantan]公园，是明清两代皇帝每年祭天和祈祷五谷丰收的地方。[天坛][tiantan]以严谨的建筑布局、奇特的建筑构造和瑰丽的建筑装饰着称于世。</span><br><span class="line">[tiantan]: http://www.tiantanpark.com</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://m.imooc.com/wiki/markdownlesson-markdownlink">Markdown超链接</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;行内形式&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[Markdown超链接](https://m.imooc.com/wiki/markdownlesson-markdownlink)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;：&lt;code&gt;[百度](https://www.baidu.com/)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;全局形式：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[百度][b]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[b]:https://www.baidu.com/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当一个超链接在文章中反复出现时，可以使用全局声明的形式，减少文章编写的工作量。&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[天坛][tiantan]公园，是明清两代皇帝每年祭天和祈祷五谷丰收的地方。[天坛][tiantan]以严谨的建筑布局、奇特的建筑构造和瑰丽的建筑装饰着称于世。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[tiantan]: http://www.tiantanpark.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="markdown" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/markdown/"/>
    
    
  </entry>
  
  <entry>
    <title>投稿期刊推荐</title>
    <link href="https://www.sdhlw.top/%E6%8A%95%E7%A8%BF%E6%9C%9F%E5%88%8A%E6%8E%A8%E8%8D%90/"/>
    <id>https://www.sdhlw.top/%E6%8A%95%E7%A8%BF%E6%9C%9F%E5%88%8A%E6%8E%A8%E8%8D%90/</id>
    <published>2024-02-15T13:48:50.000Z</published>
    <updated>2024-02-18T01:49:38.925Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>1、查看自己参考文献的期刊</p><p>2、专业定点期刊，比如做生信，就可以投<em>Bioinformatics</em>、<em>Briefingsin Bioinformatics</em>、<em>BMC Bioinformatics</em>，也可以直接谷歌生信相关期刊。</p><span id="more"></span><p>3、使用专业网站选刊<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[5 个网站帮你精准选到 SCI 投稿期刊！（附好用的期刊查找网址）](https://zhuanlan.zhihu.com/p/382157070)">[1]</span></a></sup></p><p>Journal Finder：出版商开发的选刊工具</p><ul><li><ahref="https://journalfinder.wiley.com/search?type=match">wiley</a></li><li><a href="https://journalfinder.elsevier.com/">elsevier</a></li></ul><p>Journal Suggester：出版商开发的选刊工具</p><ul><li><p><ahref="https://journalsuggester.springer.com/">springer</a>：已经无法使用</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202402152157438.png" alt="image-20240215215728650" style="zoom:33%;" /></p></li></ul><p>其他网址：<ahref="https://www.journalguide.com/">journalguide</a></p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/382157070">5个网站帮你精准选到 SCI投稿期刊！（附好用的期刊查找网址）</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;1、查看自己参考文献的期刊&lt;/p&gt;
&lt;p&gt;2、专业定点期刊，比如做生信，就可以投&lt;em&gt;Bioinformatics&lt;/em&gt;、&lt;em&gt;Briefings
in Bioinformatics&lt;/em&gt;、&lt;em&gt;BMC Bioinformatics&lt;/em&gt;
，也可以直接谷歌生信相关期刊。&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="论文投稿" scheme="https://www.sdhlw.top/tags/%E8%AE%BA%E6%96%87%E6%8A%95%E7%A8%BF/"/>
    
  </entry>
  
  <entry>
    <title>图片版权</title>
    <link href="https://www.sdhlw.top/%E5%9B%BE%E7%89%87%E7%89%88%E6%9D%83/"/>
    <id>https://www.sdhlw.top/%E5%9B%BE%E7%89%87%E7%89%88%E6%9D%83/</id>
    <published>2024-02-15T13:10:04.000Z</published>
    <updated>2024-02-18T01:49:17.796Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>谷歌图片：</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202401212051986.png" alt="" style="zoom:80%;" /></p><span id="more"></span><p>创用CC授权：</p><p>知识共享许可协议（英语：Creative Commonslicense，或创用CC授权）是一种公共版权授权条款，其允许按照多种需求分发受版权保护的作品<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[知识共享许可协议--维基百科](https://zh.wikipedia.org/wiki/%E7%9F%A5%E8%AF%86%E5%85%B1%E4%BA%AB%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE)">[1]</span></a></sup>。</p><p>四项权利</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202401212059253.png" alt="image-20240121205712056" style="zoom: 67%;" /></p><p>4种基本权利的组合有16种，即每项权利是否授权，即有$2=16 $种权利，4种组合是同时包括“<strong>ND</strong>”和“<strong>SA</strong>”的条款，相互排斥，无法使用；还有一种没有包括任何条款（即4种权利都不授权），因此有5个组合无效。11种有效组合中，因为98%的特许人要求署名，五种缺乏“<strong>BY</strong>”的条款不再使用。</p><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202401212201746.png" alt="" style="zoom:67%;" /></p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/wiki/%E7%9F%A5%E8%AF%86%E5%85%B1%E4%BA%AB%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE">知识共享许可协议--维基百科</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;谷歌图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202305/202401212051986.png&quot; alt=&quot;&quot; style=&quot;zoom:80%;&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="论文投稿" scheme="https://www.sdhlw.top/tags/%E8%AE%BA%E6%96%87%E6%8A%95%E7%A8%BF/"/>
    
  </entry>
  
</feed>

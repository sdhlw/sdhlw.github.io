<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jay&#39;s Blog</title>
  
  
  <link href="https://www.sdhlw.top/atom.xml" rel="self"/>
  
  <link href="https://www.sdhlw.top/"/>
  <updated>2024-04-26T06:26:33.444Z</updated>
  <id>https://www.sdhlw.top/</id>
  
  <author>
    <name>Jay Chou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>期刊周期是否是月刊？</title>
    <link href="https://www.sdhlw.top/%E6%9C%9F%E5%88%8A%E6%98%AF%E5%90%A6%E6%98%AF%E6%9C%88%E5%88%8A%EF%BC%9F/"/>
    <id>https://www.sdhlw.top/%E6%9C%9F%E5%88%8A%E6%98%AF%E5%90%A6%E6%98%AF%E6%9C%88%E5%88%8A%EF%BC%9F/</id>
    <published>2024-04-26T06:03:23.000Z</published>
    <updated>2024-04-26T06:26:33.444Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>期刊周期决定着文章发行的时间，期刊周期有月刊、年刊、半月刊、双月刊等<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[期刊双月刊和月刊有区别？ ](https://zhuanlan.zhihu.com/p/439359413)">[1]</span></a></sup>。</p><ul><li>期刊周期为月刊的意思就是说，这本刊物每一个月安排一次出版发行，只是安排排版的时间，具体审核周期还是要根据实际情况来看的。</li><li>期刊周期为双月刊意思就是这本刊物每两个月一次出版发行，双月刊要比月刊出版时间久些，如果是着急发表论文的作者，尤其是需要评职称的，可能周期为双月刊的刊物比较影响。</li></ul><span id="more"></span><p>某个期刊1984年创刊，到2011年为第28年，那么2011年12期，就是第28卷12期。28就是卷号，12就是期号，一卷12期就说明刊物为月刊。卷号是从创刊那一年开始算起的，期号是从一年的第一个月算起。如果某期刊是双月刊，那么它一年就只有6期，也就是说一卷6期，12月出来的是第6期。即这里“期”为1个年度中依时间顺序发行的期数的编号;而“卷”是此刊物从创刊年度开始按年度顺序逐年累加的编年号<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[期刊卷号期号怎么查 ](https://www.sohu.com/a/128460286_448629)">[2]</span></a></sup>。</p><p>有的期刊没有卷号只有期号，是以其出版年作为卷号。在引用时不写卷号，只标注期号，比如《焊接技术》2016年9月出版的期刊的卷号是2016年，期号是9，引用时称作2016年第9期。</p><p>弄明白了期刊的卷号期号是怎么回事，就容易查询了。简单来说，卷跟年份有关系，期跟月份、出版周期有关系。如果一份期刊有卷号，需要知道该期刊的创刊时间和出版时间，将出版年份减去创刊年份加一，即是卷号。算期号，需要知道该期刊出版周期和出版月份，比如双月刊，一年应该有6期，单月出版的话，一年的出版时间应该是1月、3月、5月、7月、9月、11月，5月出版的就是第3期。双月出版的话一年的出版时间是2月、4月、6月、8月、10月、12月，8月出版的就是第4期。以此类推，其他出版周期也是这么算的。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/439359413">期刊双月刊和月刊有区别？ </a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.sohu.com/a/128460286_448629">期刊卷号期号怎么查 </a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;期刊周期决定着文章发行的时间，期刊周期有月刊、年刊、半月刊、双月刊等&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;[期刊双月刊和月刊有区别？ ](https://zhuanlan.zhihu.com/p/439359413)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;期刊周期为月刊的意思就是说，这本刊物每一个月安排一次出版发行，只是安排排版的时间，具体审核周期还是要根据实际情况来看的。&lt;/li&gt;
&lt;li&gt;期刊周期为双月刊意思就是这本刊物每两个月一次出版发行，双月刊要比月刊出版时间久些，如果是着急发表论文的作者，尤其是需要评职称的，可能周期为双月刊的刊物比较影响。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>origin保存模板/主题</title>
    <link href="https://www.sdhlw.top/origin%E4%BF%9D%E5%AD%98%E6%A8%A1%E6%9D%BF-%E4%B8%BB%E9%A2%98/"/>
    <id>https://www.sdhlw.top/origin%E4%BF%9D%E5%AD%98%E6%A8%A1%E6%9D%BF-%E4%B8%BB%E9%A2%98/</id>
    <published>2024-04-23T01:38:38.000Z</published>
    <updated>2024-04-23T01:43:41.776Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>模板和主题差别，具体还不清楚。保存主题的话，在图片上右键即可看到保存主题。</p><p>模板保存：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404230940336.png" alt="" style="zoom:67%;" /><span id="more"></span><p>模板使用：选中数据，点击上方绘图：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404230942830.png" alt="" style="zoom:67%;" /><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;模板和主题差别，具体还不清楚。保存主题的话，在图片上右键即可看到保存主题。&lt;/p&gt;
&lt;p&gt;模板保存：&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404230940336.png&quot; alt=&quot;&quot; style=&quot;zoom:67%;&quot; /&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="软件使用" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="origin" scheme="https://www.sdhlw.top/tags/origin/"/>
    
  </entry>
  
  <entry>
    <title>word设置章节序号（域）</title>
    <link href="https://www.sdhlw.top/word%E8%AE%BE%E7%BD%AE%E7%AB%A0%E8%8A%82%E5%BA%8F%E5%8F%B7%EF%BC%88%E5%9F%9F%EF%BC%89/"/>
    <id>https://www.sdhlw.top/word%E8%AE%BE%E7%BD%AE%E7%AB%A0%E8%8A%82%E5%BA%8F%E5%8F%B7%EF%BC%88%E5%9F%9F%EF%BC%89/</id>
    <published>2024-04-21T11:51:14.000Z</published>
    <updated>2024-04-26T07:29:43.091Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>首先通常会将标题样式与序号做关联，设置时要记住在系统标题样式上进行修改，而不是自己新建样式，否则会出现问题（插入题注时，上一个图片的域出现问题）。</p><p>步骤 ：</p><p>1、对标题应用样式</p><p>2、定义新的多级列表</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404211957143.png" alt="" style="zoom:80%;" /><p>3、对标题样式进行适当修改即可<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[【word标题自动编号】从原理上帮你分析，3分钟永久学会](https://www.bilibili.com/video/BV1cv411h7Pj/?share_source=copy_web&vd_source=7f2a81e814313c699f856c2ec72be7d9)">[1]</span></a></sup></p><span id="more"></span><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.bilibili.com/video/BV1cv411h7Pj/?share_source=copy_web&amp;vd_source=7f2a81e814313c699f856c2ec72be7d9">【word标题自动编号】从原理上帮你分析，3分钟永久学会</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;首先通常会将标题样式与序号做关联，设置时要记住在系统标题样式上进行修改，而不是自己新建样式，否则会出现问题（插入题注时，上一个图片的域出现问题）。&lt;/p&gt;
&lt;p&gt;步骤 ：&lt;/p&gt;
&lt;p&gt;1、对标题应用样式&lt;/p&gt;
&lt;p&gt;2、定义新的多级列表&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404211957143.png&quot; alt=&quot;&quot; style=&quot;zoom:80%;&quot; /&gt;

&lt;p&gt;3、对标题样式进行适当修改即可&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;[【word标题自动编号】从原理上帮你分析，3分钟永久学会](https://www.bilibili.com/video/BV1cv411h7Pj/?share_source=copy_web&amp;vd_source=7f2a81e814313c699f856c2ec72be7d9)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="软件使用" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>同比，环比</title>
    <link href="https://www.sdhlw.top/%E5%90%8C%E6%AF%94%EF%BC%8C%E7%8E%AF%E6%AF%94/"/>
    <id>https://www.sdhlw.top/%E5%90%8C%E6%AF%94%EF%BC%8C%E7%8E%AF%E6%AF%94/</id>
    <published>2024-04-20T07:39:10.000Z</published>
    <updated>2024-04-20T10:43:55.609Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>一、同比基本概念</strong></p><p>同比是以上年同期为基期相比较，即本期某一时间段与上年某一时间段相比， 可以理解为今年第 n 月与去年第 n 月的比较。如，2019 年 12 月份与 2018 年 12 月份相比较，2019 年上半年与 2018 年上半年相比较就是同比。同比增长率是指本期和上一年同期相比较的增长率，计算公式为：同比增长率＝（本期数－同期数）／同期数×100%。例如，某公司 2019 年上半年利润 3000 万元，为本期数， 同期数就是 2018 年上半年的利润 2000 万元，同比增长率为（3000 － 2000）／ 2000×100% ＝ 50%，即某公司 2019 年上半年利润同比增长 50%。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[同比与环比有何不同？](https://www.stats.gov.cn/zs/tjws/tjbk/202301/t20230101_1912960.html)">[1]</span></a></sup></p><p><strong>二、环比基本概念</strong></p><p>环比是与上一个相邻统计周期相比较，表明统计指标逐期的发展变化 , 可以理解为第 n 月与第 n-1 月的比较。如，2019 年 12 月份与 2019 年 11 月份相比较，2019 年 1 月份与 2018 年 12 月份相比较就是环比。环比增长率是指本期和上期相比较的增长率，计算公式为：环比增长率 &#x3D;（本期数－上期数）／上期数 ×100%。例如，某公司 2019 年 6 月份营业额为 100 万元，为本期数，上期数就是 2019 年 5 月份营业额 80 万元，环比增长率为（100 － 80）／ 80×100% ＝25%，即某公司 2019 年 6 月份营业额环比增长 25%。</p><span id="more"></span><p><strong>三、同比和环比的应用</strong></p><p>环比侧重反映数据的<strong>短期变化</strong>。用环比增长速度反映指标变化时，时效性强， 比较灵敏。比如，对居民消费价格指数（CPI）的环比涨跌幅进行分析，可以判断短期内物价变化的方向（上升或下降）。环比的不足之处是，对一些随着季节变化而波动的指标，将当期的数据直接与上期相比时，容易受到季节因素的干扰， 使得用其反映的增长速度波动往往较大。比如，由于“双十一”促销影响，11 月份网上零售额相比 10 月份增加较多，而 12 月份网上零售额相比 11 月份会减少较多，相应地，11 月份的环比增长速度会比较高，而 12 月份的环比增长速度就可能是负的，但这并不能说明网上零售额发生了趋势性变化。所以进行环比计算之前一般需要先把经济指标变动中的季节性因素剔除掉，即进行季节调整后，再计算环比增长速度。</p><p>同比相对于环比，侧重反映<strong>长期趋势</strong>，能够一定程度上克服季节性波动的影响。比如，同样是“双十一”促销，使用同比增长速度，10 月、11 月、12 月的波动不会像环比波动那样大，主要由于上年与今年11 月“双十一”促销因素均存在。但另一方面，同比增长速度的缺点是易于受基期因素影响，比如，上年基期受灾害影响，数据波动大，而今年同期未受灾害影响，则同比增长速度会表现出波动变化。</p><p>总之，同比和环比所反映的虽然都是变化速度，但由于对比基期不同，反映的内涵完全不同。一般来说，环比可以与环比相比较，而不能拿同比与环比相比较。但是，对于同一个领域，当既要考虑历史发展趋势，又要考虑短期变化时，则应把同比与环比放在一起进行对照分析。</p><p>同比并不局限于去年<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[增长问题之同比和环比](https://www.bilibili.com/video/BV1Wv411W7yp/?share_source=copy_web&vd_source=7f2a81e814313c699f856c2ec72be7d9)">[2]</span></a></sup>：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404201628748.png" alt="" style="zoom: 23%;" /><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.stats.gov.cn/zs/tjws/tjbk/202301/t20230101_1912960.html">同比与环比有何不同？</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.bilibili.com/video/BV1Wv411W7yp/?share_source=copy_web&amp;vd_source=7f2a81e814313c699f856c2ec72be7d9">增长问题之同比和环比</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;一、同比基本概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同比是以上年同期为基期相比较，即本期某一时间段与上年某一时间段相比， 可以理解为今年第 n 月与去年第 n 月的比较。如，2019 年 12 月份与 2018 年 12 月份相比较，2019 年上半年与 2018 年上半年相比较就是同比。同比增长率是指本期和上一年同期相比较的增长率，计算公式为：同比增长率＝（本期数－同期数）／同期数×100%。例如，某公司 2019 年上半年利润 3000 万元，为本期数， 同期数就是 2018 年上半年的利润 2000 万元，同比增长率为（3000 － 2000）／ 2000×100% ＝ 50%，即某公司 2019 年上半年利润同比增长 50%。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;[同比与环比有何不同？](https://www.stats.gov.cn/zs/tjws/tjbk/202301/t20230101_1912960.html)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、环比基本概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;环比是与上一个相邻统计周期相比较，表明统计指标逐期的发展变化 , 可以理解为第 n 月与第 n-1 月的比较。如，2019 年 12 月份与 2019 年 11 月份相比较，2019 年 1 月份与 2018 年 12 月份相比较就是环比。环比增长率是指本期和上期相比较的增长率，计算公式为：环比增长率 &amp;#x3D;（本期数－上期数）／上期数 ×100%。例如，某公司 2019 年 6 月份营业额为 100 万元，为本期数，上期数就是 2019 年 5 月份营业额 80 万元，环比增长率为（100 － 80）／ 80×100% ＝25%，即某公司 2019 年 6 月份营业额环比增长 25%。&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>origin修改默认保存目录</title>
    <link href="https://www.sdhlw.top/origin%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E4%BF%9D%E5%AD%98%E7%9B%AE%E5%BD%95/"/>
    <id>https://www.sdhlw.top/origin%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E4%BF%9D%E5%AD%98%E7%9B%AE%E5%BD%95/</id>
    <published>2024-04-19T13:31:34.000Z</published>
    <updated>2024-04-19T13:46:00.436Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404192143309.png" alt="" style="zoom:67%;" /><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404192145112.png" alt="" style="zoom:67%;" /><span id="more"></span><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404192143309.png&quot; alt=&quot;&quot; style=&quot;zoom:67%;&quot; /&gt;

&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404192145112.png&quot; alt=&quot;&quot; style=&quot;zoom:67%;&quot; /&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="软件使用" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="origin" scheme="https://www.sdhlw.top/tags/origin/"/>
    
  </entry>
  
  <entry>
    <title>shap可解释性</title>
    <link href="https://www.sdhlw.top/shap%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/"/>
    <id>https://www.sdhlw.top/shap%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/</id>
    <published>2024-04-15T14:30:33.000Z</published>
    <updated>2024-04-15T14:30:49.337Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>论文公式自动编号</title>
    <link href="https://www.sdhlw.top/%E8%AE%BA%E6%96%87%E5%85%AC%E5%BC%8F%E8%87%AA%E5%8A%A8%E7%BC%96%E5%8F%B7/"/>
    <id>https://www.sdhlw.top/%E8%AE%BA%E6%96%87%E5%85%AC%E5%BC%8F%E8%87%AA%E5%8A%A8%E7%BC%96%E5%8F%B7/</id>
    <published>2024-04-12T08:48:23.000Z</published>
    <updated>2024-04-12T11:29:45.117Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>章节标题后面：alt + F9 或者手动插入域：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404121726396.png" alt="" style="zoom:50%;" /><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404121652753.png" alt="" style="zoom:33%;" /><p>公式框内：插入一下内容，<code>&#123;&#125;</code>为域的内容</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404121703377.png" alt="" style="zoom:33%;" /><p>更新域：windows可以使用打印，或者在域代码附近，右键，选择更新域</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404121708075.png" alt="" style="zoom: 50%;" /><span id="more"></span><p>ctrl + f9 会导致zotero引用乱码，需要重新点一下</p><p>公式不多，不使用域，直接</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;章节标题后面：alt + F9 或者手动插入域：&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404121726396.png&quot; alt=&quot;&quot; style=&quot;zoom:50%;&quot; /&gt;

&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404121652753.png&quot; alt=&quot;&quot; style=&quot;zoom:33%;&quot; /&gt;

&lt;p&gt;公式框内：插入一下内容，&lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;为域的内容&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404121703377.png&quot; alt=&quot;&quot; style=&quot;zoom:33%;&quot; /&gt;

&lt;p&gt;更新域：windows可以使用打印，或者在域代码附近，右键，选择更新域&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404121708075.png&quot; alt=&quot;&quot; style=&quot;zoom: 50%;&quot; /&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="软件使用" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="word" scheme="https://www.sdhlw.top/tags/word/"/>
    
  </entry>
  
  <entry>
    <title>保存训练好的机器学习模型(转载)</title>
    <link href="https://www.sdhlw.top/%E4%BF%9D%E5%AD%98%E8%AE%AD%E7%BB%83%E5%A5%BD%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/"/>
    <id>https://www.sdhlw.top/%E4%BF%9D%E5%AD%98%E8%AE%AD%E7%BB%83%E5%A5%BD%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/</id>
    <published>2024-04-05T03:52:40.000Z</published>
    <updated>2024-04-05T06:49:49.634Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://blog.csdn.net/u012328159/article/details/79255805">保存训练好的机器学习模型</a><br>        当我们训练好一个model后，下次如果还想用这个model，我们就需要把这个model保存下来，下次直接导入就好了，不然每次都跑一遍，训练时间短还好，要是一次跑好几天的那怕是要天荒地老了。</p><span id="more"></span><p>sklearn官网提供了两种保存model的方法：</p><p>1.使用python自带的pickle</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法一:python自带的pickle</span></span><br><span class="line">(X,y) = datasets.load_iris(return_X_y=<span class="literal">True</span>)</span><br><span class="line">rfc = RandomForestClassifier(n_estimators=<span class="number">100</span>,max_depth=<span class="number">100</span>)</span><br><span class="line">rfc.fit(X,y)</span><br><span class="line"><span class="built_in">print</span>(rfc.predict(X[<span class="number">0</span>:<span class="number">1</span>,:]))</span><br><span class="line"><span class="comment">#save model</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;saved_model/rfc.pickle&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">pickle.dump(rfc,f)</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment">#load model</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;saved_model/rfc.pickle&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">rfc1 = pickle.load(f)</span><br><span class="line">f.close()</span><br><span class="line"><span class="built_in">print</span>(rfc1.predict(X[<span class="number">0</span>:<span class="number">1</span>,:]))</span><br></pre></td></tr></table></figure><p>2.使用sklearn中的模块joblib<br>使用joblib模块更加的简单了，内核代码就两行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.externals <span class="keyword">import</span> joblib</span><br><span class="line"><span class="comment">#方法二：使用sklearn中的模块joblib</span></span><br><span class="line">(X,y) = datasets.load_iris(return_X_y=<span class="literal">True</span>)</span><br><span class="line">rfc = RandomForestClassifier(n_estimators=<span class="number">100</span>,max_depth=<span class="number">100</span>)</span><br><span class="line">rfc.fit(X,y)</span><br><span class="line"><span class="built_in">print</span>(rfc.predict(X[<span class="number">0</span>:<span class="number">1</span>,:]))</span><br><span class="line"><span class="comment">#save model</span></span><br><span class="line">joblib.dump(rfc, <span class="string">&#x27;saved_model/rfc.pkl&#x27;</span>)</span><br><span class="line"><span class="comment">#load model</span></span><br><span class="line">rfc2 = joblib.load(<span class="string">&#x27;saved_model/rfc.pkl&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(rfc2.predict(X[<span class="number">0</span>:<span class="number">1</span>,:]))</span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u012328159/article/details/79255805&quot;&gt;保存训练好的机器学习模型&lt;/a&gt;&lt;br&gt;        当我们训练好一个model后，下次如果还想用这个model，我们就需要把这个model保存下来，下次直接导入就好了，不然每次都跑一遍，训练时间短还好，要是一次跑好几天的那怕是要天荒地老了。&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>毕业论文（GB/T 7714-2015）引用网页文章</title>
    <link href="https://www.sdhlw.top/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87%EF%BC%88gb-t-7714-2015%EF%BC%89%E5%BC%95%E7%94%A8%E7%BD%91%E9%A1%B5%E6%96%87%E7%AB%A0/"/>
    <id>https://www.sdhlw.top/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87%EF%BC%88gb-t-7714-2015%EF%BC%89%E5%BC%95%E7%94%A8%E7%BD%91%E9%A1%B5%E6%96%87%E7%AB%A0/</id>
    <published>2024-03-28T09:55:54.000Z</published>
    <updated>2024-04-08T08:02:02.663Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一共需要7项信息<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[论文中引用网页内容在文中怎么标注？]( https://www.zhihu.com/question/457765989/answer/1869692237)">[1]</span></a></sup>：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404081601932.png" alt="" style="zoom:33%;" /><p>①<strong>主要责任者</strong>：作者名字或责任机构，比如央视网、XXX研究所、XXX局等；</p><p>②<strong>题名</strong>：这一项一般没有什么异议，直接复制粘贴就好；</p><p>③<strong>文献类型标志</strong>：在GB2015附录B的表B.1中，可以找到电子公告的文献类型标识代码是EB；</p><p>④<strong>文献载体类型</strong>：在GB2015附录B的表B.2中，可以找到联机网络的载体类型标识代码是OL；</p><p>⑤<strong>更新或修改日期</strong>：资源的发布日期；</p><p>⑥<strong>引用日期</strong>：在着手写论文到提交论文之间都可以；</p><p>⑦<strong>获取和访问路径</strong>：网址。</p><span id="more"></span><p>如果是使用zotero的GB2015的csl的，使用浏览器插件添加进zotero的话，只要注意更正一下标题和作者就可以了，默认没添加作者，标题格式有些乱。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.zhihu.com/question/457765989/answer/1869692237">论文中引用网页内容在文中怎么标注？</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;一共需要7项信息&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;[论文中引用网页内容在文中怎么标注？]( https://www.zhihu.com/question/457765989/answer/1869692237)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202404081601932.png&quot; alt=&quot;&quot; style=&quot;zoom:33%;&quot; /&gt;

&lt;p&gt;①&lt;strong&gt;主要责任者&lt;/strong&gt;：作者名字或责任机构，比如央视网、XXX研究所、XXX局等；&lt;/p&gt;
&lt;p&gt;②&lt;strong&gt;题名&lt;/strong&gt;：这一项一般没有什么异议，直接复制粘贴就好；&lt;/p&gt;
&lt;p&gt;③&lt;strong&gt;文献类型标志&lt;/strong&gt;：在GB2015附录B的表B.1中，可以找到电子公告的文献类型标识代码是EB；&lt;/p&gt;
&lt;p&gt;④&lt;strong&gt;文献载体类型&lt;/strong&gt;：在GB2015附录B的表B.2中，可以找到联机网络的载体类型标识代码是OL；&lt;/p&gt;
&lt;p&gt;⑤&lt;strong&gt;更新或修改日期&lt;/strong&gt;：资源的发布日期；&lt;/p&gt;
&lt;p&gt;⑥&lt;strong&gt;引用日期&lt;/strong&gt;：在着手写论文到提交论文之间都可以；&lt;/p&gt;
&lt;p&gt;⑦&lt;strong&gt;获取和访问路径&lt;/strong&gt;：网址。&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="理论知识" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>Word Tips</title>
    <link href="https://www.sdhlw.top/word-tips/"/>
    <id>https://www.sdhlw.top/word-tips/</id>
    <published>2024-03-24T07:51:58.000Z</published>
    <updated>2024-03-24T07:54:09.625Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>快捷键：</p><ul><li>alt  +&#x3D; ：插入公式</li></ul><span id="more"></span><p>b</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;快捷键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;alt  +&amp;#x3D; ：插入公式&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="软件使用" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="Word" scheme="https://www.sdhlw.top/tags/word/"/>
    
  </entry>
  
  <entry>
    <title>独立测试与交叉测试</title>
    <link href="https://www.sdhlw.top/%E7%8B%AC%E7%AB%8B%E6%B5%8B%E8%AF%95%E4%B8%8E%E4%BA%A4%E5%8F%89%E6%B5%8B%E8%AF%95/"/>
    <id>https://www.sdhlw.top/%E7%8B%AC%E7%AB%8B%E6%B5%8B%E8%AF%95%E4%B8%8E%E4%BA%A4%E5%8F%89%E6%B5%8B%E8%AF%95/</id>
    <published>2024-03-20T06:48:59.000Z</published>
    <updated>2024-03-20T08:16:22.511Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>独立测试与交叉测试的区别在于数据的划分，不在于是否寻优。</p><p>算法：比如随机森林</p><p>模型：比如使用随机森林，进行参数寻优，在一组特定数据中训练得到最优参数的算法（模型只接触过训练集）</p><p>评价模型：使用测试集评价，有独立测试、交叉测试。</p><span id="more"></span><ul><li><p>独立测试：将数据集单次划分为训练集和测试集，训练集用于训练，测试集用于测试最后模型好坏结果。一般，训练集0.75，测试集0.25。</p></li><li><p>交叉测试（Cross-Validation）：也就是交叉验证，比如常见的 k 折交叉验证，将数据集先划分为 K 份，比较常见的为 5 或 10 份，一份数据作为测试集，另外几份作为训练集，循环五次，即每一份数据都作为过测试集，也就是会得到五个模型精度，取均值作为该算法的评价。五折交叉中训练集比例为 4&#x2F;5，即 0.8，交叉测试训练集比例高于独立测试，所以交叉测试结果会比独立测试结果好。</p></li></ul><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403201613164.png" alt="" style="zoom:30%;" /><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403201504416.png" alt="" style="zoom:80%;" /><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;独立测试与交叉测试的区别在于数据的划分，不在于是否寻优。&lt;/p&gt;
&lt;p&gt;算法：比如随机森林&lt;/p&gt;
&lt;p&gt;模型：比如使用随机森林，进行参数寻优，在一组特定数据中训练得到最优参数的算法（模型只接触过训练集）&lt;/p&gt;
&lt;p&gt;评价模型：使用测试集评价，有独立测试、交叉测试。&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>交叉验证法</title>
    <link href="https://www.sdhlw.top/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81%E6%B3%95/"/>
    <id>https://www.sdhlw.top/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81%E6%B3%95/</id>
    <published>2024-03-15T11:18:11.000Z</published>
    <updated>2024-03-20T13:49:41.078Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>交叉验证（cross-validation）是一种评估泛化性能（新数据能否正确预测）的统计学方法，它比单次划分训练集和测试集的方法更加稳定、全面。如果只划分一次训练集和测试集，可能难以分类的样本都在测试集中，那么精度会低的离谱，相反，如果容易分类的样本都在测试集中，精度则会高的离谱，所以会导致模型并不能反映数据的真实情况。</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403152007648.png" alt="" style="zoom:40%;" /><span id="more"></span><h3 id="k-折交叉验证"><a href="#k-折交叉验证" class="headerlink" title="k 折交叉验证"></a>k 折交叉验证</h3><p>最常用的交叉验证是 k 折交叉验证（k-fold cross-validation），其中 k 是由用户指定的数字，通常取5 或10。在执行5 折交叉验证时，首先将数据划分为（大致）相等的5 部分，每一部分叫作折（fold）<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="安德里亚斯·穆勒, 莎拉·吉多. Python机器学习基础教程[M/OL]. 张亮, 译. 人民邮电出版社">[1]</span></a></sup>。交叉验证通常会和寻优一起，即在不同的数据划分情况下，不同的参数情况下，模型的表现如何，对参数寻优，在最优参数下，模型对整个数据（不同数据划分）的表现如何就是交叉验证也称交叉测试。</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151929998.png" alt="" style="zoom:80%;" /><p>使用第1 折作为测试集、其他折（2~5）作为训练集来训练第一个模型，并算出精度。共构建五个模型，最后对精度取平均值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line">iris =  load_iris()</span><br><span class="line">Logreg = LogisticRegression()</span><br><span class="line">scores = cross_val_score(Logreg,iris.data,iris.target,cv=<span class="number">5</span>) <span class="comment"># 模型，x,y,折数; 默认给出每个模型精度，自己需平均</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Average cross-validation score:&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(scores.mean())) </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line">scores = cross_val_score(Logreg,iris.data,iris.target,cv=<span class="number">5</span>) <span class="comment"># 模型，x,y,折数; 默认给出每个模型精度，自己需平均</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Average cross-validation score:&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(scores.mean())) </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">安德里亚斯·穆勒, 莎拉·吉多. Python机器学习基础教程[M/OL]. 张亮, 译. 人民邮电出版社<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;交叉验证（cross-validation）是一种评估泛化性能（新数据能否正确预测）的统计学方法，它比单次划分训练集和测试集的方法更加稳定、全面。如果只划分一次训练集和测试集，可能难以分类的样本都在测试集中，那么精度会低的离谱，相反，如果容易分类的样本都在测试集中，精度则会高的离谱，所以会导致模型并不能反映数据的真实情况。&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403152007648.png&quot; alt=&quot;&quot; style=&quot;zoom:40%;&quot; /&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="机器学习" scheme="https://www.sdhlw.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>参考文献中英文混排-等与 et al 问题</title>
    <link href="https://www.sdhlw.top/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E7%AD%89%E4%B8%8Eetal%E9%97%AE%E9%A2%98/"/>
    <id>https://www.sdhlw.top/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E7%AD%89%E4%B8%8Eetal%E9%97%AE%E9%A2%98/</id>
    <published>2024-03-15T01:59:38.000Z</published>
    <updated>2024-03-15T02:56:19.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>问题：zotero 使用 <a href="https://github.com/sdhlw/Chinese-STD-GB-T-7714-related-csl">GB 格式</a>插入英文文献时，英文文献为等</p><p>解决：</p><p>1、安装可以同时生成等和 et al 的csl格式，已放于OA 仓库：<a href="https://github.com/sdhlw/OA/tree/main">china-national-standard-gb-t-7714-2015-numeric-BiLan.csl</a></p><p>打开word：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151007465.png" alt="" style="zoom:23%;" /><span id="more"></span><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151017925.png" alt="" style="zoom:33%;" /><p>2、在zotero中，将显示为等的英文文献的语言修改为“en”<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[[Zotero修改版]终于可以原生支持同时生成“et al”和“等”了](https://zhuanlan.zhihu.com/p/314928204)">[1]</span></a></sup></p><p>按照图片的内容修改，可解决英文文献引用过程中 et al. 变为 等 的问题<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Zotero 插件之 Jasminum（茉莉花）的使用教程](https://blog.csdn.net/m0_67394827/article/details/134389267)">[2]</span></a></sup>，如果有一些论文的语言没有自动识别出来，或者是安装茉莉花插件之前的旧文献，我们可以手动进行操作 找到自己需要设置语言的论文，点击右键-设置语言，之后，根据论文的语言设置为中文或者英文即可<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Zotero修改GB/T 7714参考文献格式-实现中英文混排](https://zhuanlan.zhihu.com/p/663341103)">[3]</span></a></sup>。</p><p>茉莉花插件批量修改条目为 en :</p><p>zotero：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151047433.png" alt="" style="zoom:40%;" /><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151048903.png" alt="" style="zoom:33%;" /><p>2、选中所有英文文献条目，右键：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151050754.png" alt="" style="zoom:25%;" /><p>3、点击 word 中 zotero 中的 refresh 即可</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/314928204">[Zotero修改版]终于可以原生支持同时生成“et al”和“等”了</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/m0_67394827/article/details/134389267">Zotero 插件之 Jasminum（茉莉花）的使用教程</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/663341103">Zotero修改GB/T 7714参考文献格式-实现中英文混排</a><a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;问题：zotero 使用 &lt;a href=&quot;https://github.com/sdhlw/Chinese-STD-GB-T-7714-related-csl&quot;&gt;GB 格式&lt;/a&gt;插入英文文献时，英文文献为等&lt;/p&gt;
&lt;p&gt;解决：&lt;/p&gt;
&lt;p&gt;1、安装可以同时生成等和 et al 的csl格式，已放于OA 仓库：&lt;a href=&quot;https://github.com/sdhlw/OA/tree/main&quot;&gt;china-national-standard-gb-t-7714-2015-numeric-BiLan.csl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开word：&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403151007465.png&quot; alt=&quot;&quot; style=&quot;zoom:23%;&quot; /&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="软件使用" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="Zotero" scheme="https://www.sdhlw.top/tags/zotero/"/>
    
  </entry>
  
  <entry>
    <title>独热编码（one-hot）</title>
    <link href="https://www.sdhlw.top/%E7%8B%AC%E7%83%AD%E7%BC%96%E7%A0%81%EF%BC%88one-hot%EF%BC%89/"/>
    <id>https://www.sdhlw.top/%E7%8B%AC%E7%83%AD%E7%BC%96%E7%A0%81%EF%BC%88one-hot%EF%BC%89/</id>
    <published>2024-03-11T10:37:55.000Z</published>
    <updated>2024-03-13T01:42:15.485Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>独热编码(one-hot encoding)<br>独热编码是通过创建一个新的虚拟特征，虚拟特征的每一列各代表标称数据的一个值。例如，颜色一共有四个取值green、blue、red、black，独热编码是通过四位二进制来表示，如果是green就表示为<code>[1,0,0,0]</code>，对应的颜色是<code>[green,blue,red,black]</code>，如果属于哪一种颜色，则取值为1，否则为0。</p><span id="more"></span><h3 id="实现的两种方式"><a href="#实现的两种方式" class="headerlink" title="实现的两种方式"></a>实现的两种方式</h3><p>1、OneHotEncoder<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[数据分析预处理 -字符型类别变量（string）](https://blog.csdn.net/Poisson_SHAN/article/details/108894118)">[1]</span></a></sup>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sklearn.preprocessing <span class="keyword">as</span> pre_processing</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">label=pre_processing.LabelEncoder()</span><br><span class="line">labels=label.fit_transform([<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;美国&#x27;</span>,<span class="string">&#x27;法国&#x27;</span>,<span class="string">&#x27;德国&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(labels)</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># [0 3 2 1]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">labels=np.array(labels).reshape(<span class="built_in">len</span>(labels),<span class="number">1</span>) <span class="comment">#先将X组织成（sample，feature）的格式</span></span><br><span class="line"> </span><br><span class="line">onehot=pre_processing.OneHotEncoder()</span><br><span class="line">onehot_label=onehot.fit_transform(labels)</span><br><span class="line"><span class="built_in">print</span>(onehot_label.toarray())   <span class="comment">#这里一定要进行toarray()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># out：</span></span><br><span class="line"><span class="comment"># [[1. 0. 0. 0.]</span></span><br><span class="line"><span class="comment">#  [0. 0. 0. 1.]</span></span><br><span class="line"><span class="comment">#  [0. 0. 1. 0.]</span></span><br><span class="line"><span class="comment">#  [0. 1. 0. 0.]]</span></span><br></pre></td></tr></table></figure><p>2、pd.get_dummies<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Python下数值型与字符型类别变量独热编码（One-hot Encoding）实现](https://cloud.tencent.com/developer/article/1851294)">[2]</span></a></sup></p><p>在<code>get_dummies()</code>函数中，默认情况下<a href="https://www.zhihu.com/search?q=%E7%8B%AC%E7%83%AD%E7%BC%96%E7%A0%81&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:3246378958%7D">独热编码</a>生成的是bool类型的True和False。如果你希望将其转换为数值型的0和1，你可以使用参数<code>dtype</code>来指定数据类型为<a href="https://www.zhihu.com/search?q=%E6%95%B4%E6%95%B0%E5%9E%8B&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:3246378958%7D">整数型</a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onedata = pd.get_dummies(data,columns=[<span class="string">&#x27;SoilType&#x27;</span>],dtype=<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>首先我们的数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建颜色数据</span></span><br><span class="line">colors = [<span class="string">&#x27;红色&#x27;</span>, <span class="string">&#x27;蓝色&#x27;</span>, <span class="string">&#x27;绿色&#x27;</span>]</span><br><span class="line">color_data = np.random.choice(colors, size=<span class="number">100</span>, p=[<span class="number">0.4</span>, <span class="number">0.4</span>, <span class="number">0.2</span>])</span><br><span class="line"><span class="comment"># 创建目标变量数据</span></span><br><span class="line">value_data = np.random.randn(<span class="number">100</span>) * <span class="number">10</span> + <span class="number">50</span></span><br><span class="line"><span class="comment"># 将数据合并为数据集</span></span><br><span class="line">data = pd.DataFrame(&#123;<span class="string">&#x27;color&#x27;</span>: color_data, <span class="string">&#x27;value&#x27;</span>: value_data&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;data:&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(data))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">data:   color      value</span><br><span class="line"><span class="number">0</span>     蓝色  <span class="number">64.725733</span></span><br><span class="line"><span class="number">1</span>     蓝色  <span class="number">34.763842</span></span><br><span class="line"><span class="number">2</span>     红色  <span class="number">43.883487</span></span><br><span class="line"><span class="number">3</span>     红色  <span class="number">42.106679</span></span><br><span class="line"><span class="number">4</span>     红色  <span class="number">48.876011</span></span><br><span class="line">..   ...        ...</span><br><span class="line"><span class="number">95</span>    蓝色  <span class="number">64.521983</span></span><br><span class="line"><span class="number">96</span>    蓝色  <span class="number">57.808631</span></span><br><span class="line"><span class="number">97</span>    绿色  <span class="number">44.561463</span></span><br><span class="line"><span class="number">98</span>    蓝色  <span class="number">61.872843</span></span><br><span class="line"><span class="number">99</span>    蓝色  <span class="number">49.776371</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">2</span> columns]</span><br></pre></td></tr></table></figure><p>进行独热编码后的数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用pandas的get_dummies方法进行one-hot编码</span></span><br><span class="line">onehot = pd.get_dummies(data[<span class="string">&#x27;color&#x27;</span>], prefix=<span class="string">&#x27;color&#x27;</span>) <span class="comment"># 取出这列，并对这列进行独热编码</span></span><br><span class="line"><span class="comment"># 将编码后的特征与目标变量合并</span></span><br><span class="line">data_onehot = pd.concat([data[<span class="string">&#x27;value&#x27;</span>], onehot], axis=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;onehot之后的数据：\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(data_onehot))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">onehot之后的数据：</span><br><span class="line">        value  color_红色  color_绿色  color_蓝色</span><br><span class="line"><span class="number">0</span>   <span class="number">64.725733</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">1</span>   <span class="number">34.763842</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">2</span>   <span class="number">43.883487</span>         <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line"><span class="number">3</span>   <span class="number">42.106679</span>         <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line"><span class="number">4</span>   <span class="number">48.876011</span>         <span class="number">1</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">..        ...       ...       ...       ...</span><br><span class="line"><span class="number">95</span>  <span class="number">64.521983</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">96</span>  <span class="number">57.808631</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">97</span>  <span class="number">44.561463</span>         <span class="number">0</span>         <span class="number">1</span>         <span class="number">0</span></span><br><span class="line"><span class="number">98</span>  <span class="number">61.872843</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"><span class="number">99</span>  <span class="number">49.776371</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">4</span> columns]</span><br></pre></td></tr></table></figure><p>划分训练集和测试集：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将数据集划分为训练集和测试集</span></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(data_onehot.drop(<span class="string">&#x27;value&#x27;</span>, axis=<span class="number">1</span>), data_onehot[<span class="string">&#x27;value&#x27;</span>], test_size=<span class="number">0.2</span>, random_state=<span class="number">42</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建线性回归模型并拟合训练集</span></span><br><span class="line">model = LinearRegression()</span><br><span class="line">model.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在测试集上进行预测并评估性能</span></span><br><span class="line">y_pred = model.predict(X_test)</span><br><span class="line">score = r2_score(y_test, y_pred)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;R-squared score:&quot;</span>, score)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R-squared score: -<span class="number">0.12562920003687705</span></span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/Poisson_SHAN/article/details/108894118">数据分析预处理 -字符型类别变量（string）</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://cloud.tencent.com/developer/article/1851294">Python下数值型与字符型类别变量独热编码（One-hot Encoding）实现</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;独热编码(one-hot encoding)&lt;br&gt;独热编码是通过创建一个新的虚拟特征，虚拟特征的每一列各代表标称数据的一个值。例如，颜色一共有四个取值green、blue、red、black，独热编码是通过四位二进制来表示，如果是green就表示为&lt;code&gt;[1,0,0,0]&lt;/code&gt;，对应的颜色是&lt;code&gt;[green,blue,red,black]&lt;/code&gt;，如果属于哪一种颜色，则取值为1，否则为0。&lt;/p&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>数据分析项目管理形式</title>
    <link href="https://www.sdhlw.top/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BD%A2%E5%BC%8F/"/>
    <id>https://www.sdhlw.top/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BD%A2%E5%BC%8F/</id>
    <published>2024-03-11T10:30:52.000Z</published>
    <updated>2024-03-15T08:16:41.242Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>project</p><ul><li><p>origin_data</p></li><li><p>clean_data</p></li><li><p>process(代码及工程文件)</p></li><li><p>result</p></li></ul><span id="more"></span><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;project&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;origin_data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;clean_data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;process(代码及工程文件)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;result&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>博客增加菜单栏页面</title>
    <link href="https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E8%8F%9C%E5%8D%95%E6%A0%8F%E9%A1%B5%E9%9D%A2/"/>
    <id>https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E8%8F%9C%E5%8D%95%E6%A0%8F%E9%A1%B5%E9%9D%A2/</id>
    <published>2024-03-10T15:12:34.000Z</published>
    <updated>2024-03-12T02:54:16.177Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>1、创建页面：<code>hexo n page &quot;菜单名称&quot;</code></p><p>记得在yaml中type写好类别比如： “Python”</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102339614.png" alt="" style="zoom:50%;"  /><span id="more"></span><p>2、修改主题配置文件中menu部分：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102331953.png" alt="" style="zoom: 25%;" /><p>menu菜单每行的格式为”Key: &#x2F;link&#x2F; || icon”<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Hexo添加自定义分类菜单项并定制页面布局(简洁版)](https://finisky.github.io/customizecategorybyextension/)">[1]</span></a></sup>。</p><p>选择自己的icon</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://finisky.github.io/customizecategorybyextension/">Hexo添加自定义分类菜单项并定制页面布局(简洁版)</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://fontawesome.com/<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://guiblogs.com/hexo30-22/">Day 22：如何增加你 Hexo 的选单 Icon？ _</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;1、创建页面：&lt;code&gt;hexo n page &amp;quot;菜单名称&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;记得在yaml中type写好类别比如： “Python”&lt;/p&gt;
&lt;img src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102339614.png&quot; alt=&quot;&quot; style=&quot;zoom:50%;&quot;  /&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>鸟山明走了</title>
    <link href="https://www.sdhlw.top/%E9%B8%9F%E5%B1%B1%E6%98%8E%E8%B5%B0%E4%BA%86/"/>
    <id>https://www.sdhlw.top/%E9%B8%9F%E5%B1%B1%E6%98%8E%E8%B5%B0%E4%BA%86/</id>
    <published>2024-03-09T13:36:46.000Z</published>
    <updated>2024-03-13T05:41:20.210Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>看着手机上卡卡罗特的图片，心理有一股浅浅莫名的伤感。龙珠都看完了吗？没有，严格意义上来说，其实自己看的并不多，回忆起来也只有卡卡罗特和贝吉塔争强好胜，想赢过对方，各自狠狠努力以及超级赛亚人变身的场景，但是音乐，配色，人物的特点，整体的感觉真的很棒！对于很多人来说，这是一场异常美丽的梦，而他的去世就像宣告梦醒时刻的到来，我入梦并不深，都有一种莫名的伤感，何况那些早就一头扎下去的人们。死亡总是向人们宣告人生的一切就是一场幻梦，不管这个梦有多么的美好，早晚都有梦醒时分，如果一切都是一场终将醒来的梦，人要怎么活呢？唯一的答案就是去造属于自己的“春秋大梦”，大胆一些，勇敢一些，在自己的龙珠里，做自己，那个永不言败强大万分的卡卡罗特，一切终将逝去。</p><span id="more"></span><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1 小王的碎碎念</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;看着手机上卡卡罗特的图片，心理有一股浅浅莫名的伤感。龙珠都看完了吗？没有，严格意义上来说，其实自己看的并不多，回忆起来也只有卡卡罗特和贝吉塔争强好胜，想赢过对方，各自狠狠努力以及超级赛亚人变身的场景，但是音乐，配色，人物的特点，整体的感觉真的很棒！对于很多人来说，这是一场异常美丽的梦，而他的去世就像宣告梦醒时刻的到来，我入梦并不深，都有一种莫名的伤感，何况那些早就一头扎下去的人们。死亡总是向人们宣告人生的一切就是一场幻梦，不管这个梦有多么的美好，早晚都有梦醒时分，如果一切都是一场终将醒来的梦，人要怎么活呢？唯一的答案就是去造属于自己的“春秋大梦”，大胆一些，勇敢一些，在自己的龙珠里，做自己，那个永不言败强大万分的卡卡罗特，一切终将逝去。&lt;/p&gt;</summary>
    
    
    
    <category term="生活随笔" scheme="https://www.sdhlw.top/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>随机森林填充空值</title>
    <link href="https://www.sdhlw.top/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E5%A1%AB%E5%85%85%E7%A9%BA%E5%80%BC/"/>
    <id>https://www.sdhlw.top/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E5%A1%AB%E5%85%85%E7%A9%BA%E5%80%BC/</id>
    <published>2024-03-09T11:12:14.000Z</published>
    <updated>2024-03-10T15:01:44.998Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>复现这篇文章<a href="https://cloud.tencent.com/developer/article/1795954">基于随机森林方法的缺失值填充</a></p><p>导入各自包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"># from sklearn.datasets import load_boston  # 新版本无波士顿数据</span><br><span class="line">from sklearn.impute import SimpleImputer  # 填充缺失值的类</span><br><span class="line">from sklearn.ensemble import RandomForestRegressor  # 随机森林回归</span><br><span class="line">from sklearn.model_selection import cross_val_score  # 交叉验证</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="1-波士顿数据集获取"><a href="#1-波士顿数据集获取" class="headerlink" title="1 波士顿数据集获取"></a>1 波士顿数据集获取</h3><p>利用犯罪率、是否邻近查尔斯河、公路可达性等信息，来预测 20 世纪 70 年代波士顿地区房屋价格的中位数。这个数据集包含 506 个数据点和 13 个特征。波士顿房价数据集在scikit-learn1.2版本以后被移除了,通过其他网站获取，该数据已整理成excel,放置于：<a href="https://github.com/sdhlw/OA/tree/main/Boston_data">https://github.com/sdhlw/OA/tree/main/Boston_data</a></p><p>数据：前12行为特征即x，最后一行为y</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403101534554.png" alt="" style="zoom:33%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data_url = &quot;http://lib.stat.cmu.edu/datasets/boston&quot;</span><br><span class="line">raw_df = pd.read_csv(data_url, sep=&quot;\s+&quot;, skiprows=22, header=None)</span><br><span class="line">data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])</span><br><span class="line">target = raw_df.values[1::2, 2] # 归一化和特征构造后都没有变化</span><br><span class="line">print(&quot;Data shape: &#123;&#125;&quot;.format(data.shape))</span><br></pre></td></tr></table></figure><h3 id="2-设置缺失样本"><a href="#2-设置缺失样本" class="headerlink" title="2 设置缺失样本"></a>2 设置缺失样本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rng = np.random.RandomState(<span class="number">0</span>)  <span class="comment"># 确定随机种子</span></span><br><span class="line">missing_rate = <span class="number">0.5</span>   <span class="comment"># 缺失率是50%</span></span><br><span class="line"><span class="comment"># 计算缺失的样本总数；floor是向下取整</span></span><br><span class="line">n_missing_samples = <span class="built_in">int</span>(np.floor(n_samples * n_features * missing_rate))  <span class="comment"># 行乘列乘0.5即取一半缺失值</span></span><br><span class="line"><span class="built_in">print</span>(n_missing_samples)  <span class="comment"># 3289 个数</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># randint(下限,上限,n)：在上限和下限之间随机取出n个整数</span></span><br><span class="line">missing_features = rng.randint(<span class="number">0</span>, n_features, n_missing_samples) <span class="comment"># (0,13,3289)</span></span><br><span class="line">missing_samples = rng.randint(<span class="number">0</span>, n_samples, n_missing_samples) <span class="comment"># (0,506,3289)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X_missing = X_full.copy()</span><br><span class="line">y_missing = y_full.copy()</span><br><span class="line">X_missing[missing_samples,missing_features] = np.nan  <span class="comment"># 指定为nan，代表缺失掉的数据</span></span><br><span class="line"><span class="comment"># y_missing 不变</span></span><br><span class="line">X_missing = pd.D</span><br></pre></td></tr></table></figure><h3 id="3-数据填充"><a href="#3-数据填充" class="headerlink" title="3 数据填充"></a>3 数据填充</h3><h4 id="3-1-均值填充"><a href="#3-1-均值填充" class="headerlink" title="3.1 均值填充"></a>3.1 均值填充</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imp_mean = SimpleImputer(missing_values=np.nan, strategy=<span class="string">&quot;mean&quot;</span>)  <span class="comment"># 指定缺失值是什么和用什么填充</span></span><br><span class="line">X_missing_mean = imp_mean.fit_transform(X_missing)  <span class="comment"># fit + predict----&gt;特殊接口transform</span></span><br><span class="line">pd.DataFrame(X_missing_mean).isnull().<span class="built_in">sum</span>() <span class="comment"># X_missing_mean是一个ndaraay</span></span><br></pre></td></tr></table></figure><h4 id="3-2-0值填充"><a href="#3-2-0值填充" class="headerlink" title="3.2 0值填充"></a>3.2 0值填充</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imp_0 = SimpleImputer(missing_values=np.nan, strategy=<span class="string">&quot;constant&quot;</span>, fill_value=<span class="number">0</span>)   <span class="comment"># 用0进行填充</span></span><br><span class="line">X_missing_0 = imp_0.fit_transform(X_missing)</span><br><span class="line">pd.DataFrame(X_missing_0).isnull().<span class="built_in">sum</span>() </span><br></pre></td></tr></table></figure><h4 id="3-3-随机森林填充"><a href="#3-3-随机森林填充" class="headerlink" title="3.3 随机森林填充"></a>3.3 随机森林填充</h4><p>假设一个具有<code>n</code>个特征的数据，特征T存在缺失值<strong>（大量缺失更适合）</strong>，把T当做是标签，<strong>其他的n-1个特征和原来的数据看作是新的特征矩阵</strong>，具体数据解释为：</p><table><thead><tr><th align="left">数据</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Xtrain</td><td align="left">特征T不缺失的值对应的n-1个特征+原始标签</td></tr><tr><td align="left">ytrain</td><td align="left">特征T不缺失的值</td></tr><tr><td align="left">Xtest</td><td align="left">特征T缺失的值对应的n-1个特征+原始标签</td></tr><tr><td align="left">ytest</td><td align="left">特征T缺失值（未知）</td></tr></tbody></table><p>注意： 如果其他特征也存在缺失值，遍历所有的特征，从缺失值最少的开始。</p><ol><li>缺失值越少，所需要的准确信息也越少</li><li>填补一个特征，先将其他特征值的缺失值用<code>0</code>代替，这样每次循环一次，有缺失值的特征便会减少一个</li></ol><p>假设数据有n个特征，m行数据：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102005531.png" alt="" style="zoom:33%;" /><p> 由于是从最少的缺失值特征开始填充，那么需要找出存在缺失值的索引的顺序：<code>argsort</code>函数的使用</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102026911.png" alt="" style="zoom:50%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X_missing_reg = X_missing.copy()</span><br><span class="line"><span class="comment"># 找出缺失值从小到大对应的索引值</span></span><br><span class="line">sortindex = np.argsort(pd.DataFrame(X_missing_reg).isnull().<span class="built_in">sum</span>(axis=<span class="number">0</span>)).values</span><br></pre></td></tr></table></figure><p>填充过程：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sortindex:</span><br><span class="line">    <span class="comment"># 构建新的特征矩阵和新标签</span></span><br><span class="line">    df = X_missing_reg   <span class="comment"># 所有的操作都在df上进行，只是最后得到的填充值作用在X_missing_reg上面</span></span><br><span class="line">    fillc = df.iloc[:, i]   <span class="comment"># 某个需要填充的列，索引为i</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 没有被选中填充（!=）的特征与原始标签的连接起来；df就是新特征矩阵</span></span><br><span class="line">    df = pd.concat([df.iloc[:, df.columns != i], pd.DataFrame(y_full)], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 新的特征矩阵df中，对含有缺失值的列，进行0的填补</span></span><br><span class="line">    <span class="comment"># 检查是否有0 pd.DataFrame(df_0).isnull().sum()</span></span><br><span class="line">    df_0 = SimpleImputer(missing_values=np.nan, strategy=<span class="string">&#x27;constant&#x27;</span>, fill_value=<span class="number">0</span>).fit_transform(df)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 找出训练集和测试集</span></span><br><span class="line">    ytrain = fillc[fillc.notnull()]  <span class="comment"># 被选中填充的特征矩阵T中的非空值</span></span><br><span class="line">    ytest = fillc[fillc.isnull()]  <span class="comment"># 被选中填充的特征矩阵T中的空值</span></span><br><span class="line">    Xtrain = df_0[ytrain.index, :]  <span class="comment"># 新特征矩阵上，被选出来要填充的特征的非空值对应的记录</span></span><br><span class="line">    Xtest = df_0[ytest.index, :]   <span class="comment"># 空值对应的记录</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 随机森林填充缺失值</span></span><br><span class="line">    rfc = RandomForestRegressor(n_estimators=<span class="number">100</span>)</span><br><span class="line">    rfc = rfc.fit(Xtrain, ytrain)</span><br><span class="line">    y_predict = rfc.predict(Xtest)  <span class="comment"># predict接口预测得到的结果就是用来填充空值的那些值</span></span><br><span class="line">    <span class="comment"># 将填补好的特征返回到我们的原始特征矩阵中</span></span><br><span class="line">    X_missing_reg.loc[X_missing_reg.iloc[:, i].isnull(), i] = y_predict</span><br></pre></td></tr></table></figure><h3 id="4-四种数据建模"><a href="#4-四种数据建模" class="headerlink" title="4 四种数据建模"></a>4 四种数据建模</h3><ul><li>MSE：均方误差；回归树的衡量指标，越小越好。sklearn中使用的是负均方误差neg_mean_squared_error。均方误差本身是种误差loss，通过负数表示</li><li>R2：回归树score返回的真实值是R的平方，不是MSE</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">X = [X_full, X_missing_mean, X_missing_0, X_missing_reg]</span><br><span class="line">mse = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> X:</span><br><span class="line">    estimator = RandomForestRegressor(random_state=<span class="number">0</span>, n_estimators=<span class="number">100</span>)</span><br><span class="line">    scores = cross_val_score(estimator, x, y_full, scoring=<span class="string">&quot;neg_mean_squared_error&quot;</span>, cv=<span class="number">5</span>).mean()</span><br><span class="line">    mse.append(scores * -<span class="number">1</span>)</span><br></pre></td></tr></table></figure><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102157302.png" alt="" style="zoom:67%;" /><h3 id="5-绘图"><a href="#5-绘图" class="headerlink" title="5 绘图"></a>5 绘图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">x_labels = [<span class="string">&quot;Full Data&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Mean Imputation&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Zero Imputation&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Regressor Imputation&quot;</span>]</span><br><span class="line"></span><br><span class="line">colors = [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">6</span>))  <span class="comment"># 生成画布</span></span><br><span class="line">ax = plt.subplot(<span class="number">111</span>)  <span class="comment"># 添加子图</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上面的过程中已经求出了4种不同数据的MSE</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> np.arange(<span class="built_in">len</span>(mse)):  <span class="comment"># arange(4)</span></span><br><span class="line">    ax.barh(i, mse[i], color=colors[i],alpha=<span class="number">0.6</span>,align=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax.set_title(<span class="string">&quot;Imputation Techniques with Boston Data&quot;</span>)  <span class="comment"># 标题</span></span><br><span class="line">ax.set_xlim(left=np.<span class="built_in">min</span>(mse)*<span class="number">0.9</span>,</span><br><span class="line">           right=np.<span class="built_in">max</span>(mse)*<span class="number">1.1</span>)  <span class="comment"># 横轴是mse的取值</span></span><br><span class="line"></span><br><span class="line">ax.set_yticks(np.arange(<span class="built_in">len</span>(mse)))</span><br><span class="line">ax.set_label(<span class="string">&quot;MSE&quot;</span>)</span><br><span class="line">ax.set_yticklabels(x_labels)   <span class="comment"># 用x_labels中的名字作为y轴的命名</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403102157852.png" alt="" style="zoom:67%;" /><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>无</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;复现这篇文章&lt;a href=&quot;https://cloud.tencent.com/developer/article/1795954&quot;&gt;基于随机森林方法的缺失值填充&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;导入各自包：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import numpy as np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pandas as pd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import matplotlib.pyplot as plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# from sklearn.datasets import load_boston  # 新版本无波士顿数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from sklearn.impute import SimpleImputer  # 填充缺失值的类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from sklearn.ensemble import RandomForestRegressor  # 随机森林回归&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from sklearn.model_selection import cross_val_score  # 交叉验证&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="科研学习" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="代码相关" scheme="https://www.sdhlw.top/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="随机森林" scheme="https://www.sdhlw.top/tags/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/"/>
    
  </entry>
  
  <entry>
    <title>博客一篇文章一个文件夹问题</title>
    <link href="https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E9%97%AE%E9%A2%98/"/>
    <id>https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E9%97%AE%E9%A2%98/</id>
    <published>2024-03-09T06:07:22.000Z</published>
    <updated>2024-03-09T08:15:09.738Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>post_asset_folder开启的话，便是这种情况，一篇文章一个文件夹，用来放置图片<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[关于hexo的配置：post_asset_folder 问题](https://github.com/hexojs/hexo/issues/3551)">[1]</span></a></sup>，自己的文章图片都是使用图床，所以无需这个设置，但是开启一次之后再关闭，之前的文章还是一篇文章一个文件夹。</p><span id="more"></span><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://github.com/hexojs/hexo/issues/3551">关于hexo的配置：post_asset_folder 问题</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;post_asset_folder开启的话，便是这种情况，一篇文章一个文件夹，用来放置图片&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;[关于hexo的配置：post_asset_folder 问题](https://github.com/hexojs/hexo/issues/3551)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;，自己的文章图片都是使用图床，所以无需这个设置，但是开启一次之后再关闭，之前的文章还是一篇文章一个文件夹。&lt;/p&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>博客访问速度提升（双线部署coding &amp; github）</title>
    <link href="https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E6%8F%90%E5%8D%87%EF%BC%88%E5%8F%8C%E7%BA%BF%E9%83%A8%E7%BD%B2coding-github%EF%BC%89/"/>
    <id>https://www.sdhlw.top/%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E6%8F%90%E5%8D%87%EF%BC%88%E5%8F%8C%E7%BA%BF%E9%83%A8%E7%BD%B2coding-github%EF%BC%89/</id>
    <published>2024-03-08T11:36:13.000Z</published>
    <updated>2024-03-09T05:51:47.294Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>实现大陆访问，使用coding（大家可以理解为中国版的github），国外访问，使用github，以及可以提交百度收录（GitHub 禁止了百度的爬取）<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Hexo 双线部署到 Coding 和 GitHub 提升访问速度](https://zhuanlan.zhihu.com/p/111796666)">[1]</span></a></sup></p><p>暂时停止折腾了，coding 代码迁移是可以，但是静态网站功能的实现不好搞，coding停掉，需要借助腾讯云搭建。很久之前也尝试过gitee，那段时间直接停掉静态网站的搭建功能，目前不清楚。。。</p><span id="more"></span><h2 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1.创建项目"></a>1.创建项目</h2><p>去coding官网，新建账号，并登录，创建项目。</p><h2 id="2-配置-config-yml"><a href="#2-配置-config-yml" class="headerlink" title="2.配置 _config.yml"></a>2.配置 _config.yml</h2><p>去博客根目录，添加coding链接，如果要同时推送到GitHub和Coding，type前面加 -：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403082221225.png" alt="image-20240308222139508" style="zoom: 50%;" /><h2 id="3-将代码推送到Coding"><a href="#3-将代码推送到Coding" class="headerlink" title="3.将代码推送到Coding"></a>3.将代码推送到Coding</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403082218690.png" alt="image-20240308202731574"></p><p>搞了快一个晚上。。。服了，coding验证的用户名是手机号码！！！！，不是个人信息里的用户名，刚注册coding的小伙伴在部署前，先绑定手机号码，再部署。</p><h2 id="4-开启-Coding-Pages（还未解决）"><a href="#4-开启-Coding-Pages（还未解决）" class="headerlink" title="4.开启 Coding Pages（还未解决）"></a>4.开启 Coding Pages（还未解决）</h2><p>项目这里并没有看到静态部署页面，应该是更改了方式，这里也可能是项目创建时没选对模板，但是创建项目时并没有如其他博客<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[2021使用Coding和Github来实现双线部署](https://cloud.tencent.com/developer/article/1834005)">[3]</span></a></sup>有可选模板选择，也没找到更改项目类型的设置。。。</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403082305099.png" alt="以往" style="zoom:33%;" /><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403091231291.png" alt="现在" style="zoom:33%;" /><p>查了一下，果然<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[自建静态网站](https://coding.net/help/docs/devops/ci/practice/static-website-paas.html)">[2]</span></a></sup>，代码放coding, 使用任务把代码又转到腾讯云？：</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403091230463.png" alt="" style="zoom: 33%;" /><p>也就是现在需要从第二步开始跟着操作即可。</p><p>第三步出现问题，现在只有构建计划，没有构建任务选项，进入构建计划时，jenkinsfile无法直接填充，需要提前在代码仓库构建，但是在设置环境变量时卡住了，这里的环境变量在jenkinsfile好像已经指定了。</p><img src="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img2024/03202403091230342.png" alt="" style="zoom: 33%;" /><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/111796666">Hexo 双线部署到 Coding 和 GitHub 提升访问速度</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://coding.net/help/docs/devops/ci/practice/static-website-paas.html">自建静态网站</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://cloud.tencent.com/developer/article/1834005">2021使用Coding和Github来实现双线部署</a><a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;实现大陆访问，使用coding（大家可以理解为中国版的github），国外访问，使用github，以及可以提交百度收录（GitHub 禁止了百度的爬取）&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;[Hexo 双线部署到 Coding 和 GitHub 提升访问速度](https://zhuanlan.zhihu.com/p/111796666)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;暂时停止折腾了，coding 代码迁移是可以，但是静态网站功能的实现不好搞，coding停掉，需要借助腾讯云搭建。很久之前也尝试过gitee，那段时间直接停掉静态网站的搭建功能，目前不清楚。。。&lt;/p&gt;</summary>
    
    
    
    <category term="博客运营" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/"/>
    
    <category term="其它" scheme="https://www.sdhlw.top/categories/%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%90%A5/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="Coding" scheme="https://www.sdhlw.top/tags/coding/"/>
    
    <category term="Github" scheme="https://www.sdhlw.top/tags/github/"/>
    
  </entry>
  
</feed>

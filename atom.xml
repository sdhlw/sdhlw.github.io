<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jay&#39;s Blog</title>
  
  
  <link href="https://www.sdhlw.top/atom.xml" rel="self"/>
  
  <link href="https://www.sdhlw.top/"/>
  <updated>2023-04-15T08:07:06.682Z</updated>
  <id>https://www.sdhlw.top/</id>
  
  <author>
    <name>Jay Chou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小提琴图和箱线图</title>
    <link href="https://www.sdhlw.top/%E5%B0%8F%E6%8F%90%E7%90%B4%E5%9B%BE%E5%92%8C%E7%AE%B1%E7%BA%BF%E5%9B%BE/"/>
    <id>https://www.sdhlw.top/%E5%B0%8F%E6%8F%90%E7%90%B4%E5%9B%BE%E5%92%8C%E7%AE%B1%E7%BA%BF%E5%9B%BE/</id>
    <published>2023-04-15T08:02:58.000Z</published>
    <updated>2023-04-15T08:07:06.682Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>小提琴图（violinplot）是一种用于可视化数据分布的图表。它结合了箱线图和核密度图的优点，可以更直观地展示数据的分布情况和中位数、四分位数等统计量的位置。</p><p>小提琴图通常由两部分组成：中间的白点表示中位数，黑色的厚线表示四分位数范围，而外部的形状则是核密度估计的结果，类似于概率密度函数。不同小提琴之间的比较可以更好地呈现数据之间的差异和相似性。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="ChatGPT">[1]</span></a></sup></p><span id="more"></span><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202304/202304151452788.png" /></p><p>outside points：离群点 Upper Adjacent Value：上边界值 ThirdQuartile：第三四分位数 Median：中位数，第二四分位数 First Quartile：第一四分位数 Lower Adjacent Value：下边界值 *** 第一四分位数（Q1）：又称较小四分位数，等于该样本中所有数值由小到大排列后第25%的数字。第二四分位数（Q2）：又称中位数，等于该样本中所有数值由小到大排列后第50%的数字。第三四分位数（Q3）：又称较大四分位数，等于该样本中所有数值由小到大排列后第75%的数字。</p><p>第三四分位数与第一四分位数的差距又称四分位距（InterQuartile Range,IQR）<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[四分位数-维基百科](https://zh.wikipedia.org/zh-hans/%E5%9B%9B%E5%88%86%E4%BD%8D%E6%95%B0) ">[2]</span></a></sup></p><p>当有数值与第1与第3四分位数的范围差距1.5×IQR以上时，该值为离群值（outlier）。 数值位于范围外1.5×IQR 到3×IQR范围的数值，称作适度离群值（mild outlier）。 数值位于范围外3×IQR以上的数值，称作极端离群值（extreme outlier）。</p><p>小提琴图除了显示上述的统计数据外，它还显示了数据的整体分布。</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202304/202304151452814.png" /></p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202304/202304151452831.png" /></p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202304/202304151452846.png" /></p><p>如果数据的四分位数保持不变，箱形图就不会改变。那么，我们可以对数据进行修改，使四分位数不发生变化，但分布的形状会发生很大的变化。下面的GIF 图说明了这一点。</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202304/202304151455052.webp" /></p><ul><li>在直方图中，我们看到分布的对称形状</li><li>我们可以在箱形图和小提琴图中看到前面提到的指标（中位数、IQR）。</li><li>用于创建小提琴图的核密度图与添加在直方图上的核密度图是一样的。小提琴图中较宽的部分代表观测值取值的概率较高，较窄的部分则对应于较低的概率。<sup id="fnref:3"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[如何通俗的理解小提琴图 - jinzhao 的文章 - 知乎](https://zhuanlan.zhihu.com/p/376055263 )">[3]</span></a></sup></li></ul><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;">ChatGPT<a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/zh-hans/%E5%9B%9B%E5%88%86%E4%BD%8D%E6%95%B0">四分位数-维基百科</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li><li id="fn:3"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/376055263">如何通俗的理解小提琴图- jinzhao 的文章 - 知乎</a><a href="#fnref:3" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;小提琴图（violin
plot）是一种用于可视化数据分布的图表。它结合了箱线图和核密度图的优点，可以更直观地展示数据的分布情况和中位数、四分位数等统计量的位置。&lt;/p&gt;
&lt;p&gt;小提琴图通常由两部分组成：中间的白点表示中位数，黑色的厚线表示四分位数范围，而外部的形状则是核密度估计的结果，类似于概率密度函数。不同小提琴之间的比较可以更好地呈现数据之间的差异和相似性。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;ChatGPT
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="箱线图" scheme="https://www.sdhlw.top/tags/%E7%AE%B1%E7%BA%BF%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Zotero插件之Jasminum（茉莉花）</title>
    <link href="https://www.sdhlw.top/zotero%E6%8F%92%E4%BB%B6%E4%B9%8Bjasminum%EF%BC%88%E8%8C%89%E8%8E%89%E8%8A%B1%EF%BC%89/"/>
    <id>https://www.sdhlw.top/zotero%E6%8F%92%E4%BB%B6%E4%B9%8Bjasminum%EF%BC%88%E8%8C%89%E8%8E%89%E8%8A%B1%EF%BC%89/</id>
    <published>2023-02-25T06:37:37.000Z</published>
    <updated>2023-02-25T07:15:42.365Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>需求：根据中文pdf，自动抓取条目信息</p><p>实现：</p><p><ahref="https://github.com/l0o0/jasminum">官网</a>下载xpi，打开附加组件，文件拖拽到组件页面安装即可</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302251511232.png" /></p><p>右键pdf即可抓取中文文献条目信息：</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302251511409.png" /></p><span id="more"></span><p>也可添加pdf时自动抓取条目信息：</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302251511533.png" /></p><p>插件目前支持的功能：</p><ul><li>拆分或合并 Zotero 中条目作者姓和名</li><li>根据知网上下载的文献文件来抓取引用信息（就是根据文件名）</li><li>添加中文PDF/CAJ时，自动拉取知网数据，该功能默认关闭。需要到设置中开启，注意添加的文件名需要含有中文，全英文没有效果（还是根据文件名）</li><li>为知网的学位论文 PDF 添加书签</li><li>更新中文 translators</li><li>拉取文献引用次数，是否核心期刊</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;需求：根据中文pdf，自动抓取条目信息&lt;/p&gt;
&lt;p&gt;实现：&lt;/p&gt;
&lt;p&gt;&lt;a
href=&quot;https://github.com/l0o0/jasminum&quot;&gt;官网&lt;/a&gt;下载xpi，打开附加组件，文件拖拽到组件页面安装即可&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302251511232.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;右键pdf即可抓取中文文献条目信息：&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302251511409.png&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Tool Software" scheme="https://www.sdhlw.top/categories/tool-software/"/>
    
    
    <category term="Zotero" scheme="https://www.sdhlw.top/tags/zotero/"/>
    
  </entry>
  
  <entry>
    <title>Zotero搭配Sci-Hub</title>
    <link href="https://www.sdhlw.top/zotero%E6%90%AD%E9%85%8Dsci-hub/"/>
    <id>https://www.sdhlw.top/zotero%E6%90%AD%E9%85%8Dsci-hub/</id>
    <published>2023-02-25T01:10:20.000Z</published>
    <updated>2023-02-25T07:03:45.581Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="实现功能">实现功能</h3><p>Zotero右键条目实现自动下载pdf</p><h3 id="设置sci-hub作为pdf解析器">设置Sci-Hub作为PDF解析器</h3><p>打开Zotero的首选项，进入<code>Advanced--&gt;Config Editor</code></p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302250911205.png" /></p><p>搜索<code>extensions.zotero.findPDFs.resolvers</code></p><p>双击<code>extensions.zotero.findPDFs.resolvers</code>，默认情况下是只有一对<code>[]</code>。</p><p>删除<code>[]</code>，并将以下代码粘贴进去。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[更新版｜Zotero搭配Sci-Hub，真香！](https://mp.weixin.qq.com/s/QMSG24tgn4z8ShfE9pVYMg)">[1]</span></a></sup></p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line"><span class="string">&quot;name&quot;</span>:<span class="string">&quot;Sci-Hub&quot;</span>,  </span><br><span class="line"><span class="string">&quot;method&quot;</span>:<span class="string">&quot;GET&quot;</span>,  </span><br><span class="line"><span class="string">&quot;url&quot;</span>:<span class="string">&quot;https://sci-hub.se/&#123;doi&#125;&quot;</span>,  </span><br><span class="line"><span class="string">&quot;mode&quot;</span>:<span class="string">&quot;html&quot;</span>,  </span><br><span class="line"><span class="string">&quot;selector&quot;</span>:<span class="string">&quot;#pdf&quot;</span>,  </span><br><span class="line"><span class="string">&quot;attribute&quot;</span>:<span class="string">&quot;src&quot;</span>,  </span><br><span class="line"><span class="string">&quot;automatic&quot;</span>:true  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到此就成功将Sci-Hub配置为PDF解析器了，也就是说替代了默认的Unpaywall。</p><p>现在即可右键条目下载pdf了（前提是条目包含doi）</p><p>查找文件doi：https://github.com/bwiernik/zotero-shortdoi/releases</p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://mp.weixin.qq.com/s/QMSG24tgn4z8ShfE9pVYMg">更新版｜Zotero搭配Sci-Hub，真香！</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;实现功能&quot;&gt;实现功能&lt;/h3&gt;
&lt;p&gt;Zotero右键条目实现自动下载pdf&lt;/p&gt;
&lt;h3 id=&quot;设置sci-hub作为pdf解析器&quot;&gt;设置Sci-Hub作为PDF解析器&lt;/h3&gt;
&lt;p&gt;打开Zotero的首选项，进入&lt;code&gt;Advanced--&amp;gt;Config Editor&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302250911205.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;搜索&lt;code&gt;extensions.zotero.findPDFs.resolvers&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;双击&lt;code&gt;extensions.zotero.findPDFs.resolvers&lt;/code&gt;，默认情况下是只有一对
&lt;code&gt;[]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;删除&lt;code&gt;[]&lt;/code&gt;，并将以下代码粘贴进去。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[更新版｜Zotero搭配Sci-Hub，真香！](https://mp.weixin.qq.com/s/QMSG24tgn4z8ShfE9pVYMg)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Tool Software" scheme="https://www.sdhlw.top/categories/tool-software/"/>
    
    
    <category term="Zotero" scheme="https://www.sdhlw.top/tags/zotero/"/>
    
  </entry>
  
  <entry>
    <title>期刊、出版社、索引数据库</title>
    <link href="https://www.sdhlw.top/%E6%9C%9F%E5%88%8A%E3%80%81%E5%87%BA%E7%89%88%E7%A4%BE%E3%80%81%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://www.sdhlw.top/%E6%9C%9F%E5%88%8A%E3%80%81%E5%87%BA%E7%89%88%E7%A4%BE%E3%80%81%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2023-02-23T07:32:42.000Z</published>
    <updated>2023-02-25T01:29:37.838Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302222118363.png" /></p><ul><li><p>研究人员向期刊或者会议投稿，交注册费和相应的审稿费等相关费用<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[会议期刊、出版社、索引工具之间的关系](https://cactusii.github.io/post/ke-yan-xiao-bai/)">[1]</span></a></sup>；</p></li><li><p>会议组织者和期刊联系出版社，交出版费用；</p></li><li><p>出版社将论文更新到自己的数据库中，然后将数据库卖给全世界各大高校或企业；</p></li><li><p>其他开源数据库抓取出版社数据库的论文题目、摘要、参考文献等信息。</p></li></ul><p>1、<strong>会议组织者</strong>：一般由某个学校、组织，为了学术/利益举办会议，负责征集科研工作者的论文并决定是否录用，然后联系出版社进行出版发表，因此要征收科研工作者相应的费用，同时需要向出版社交相应的出版费用。</p><p>2、<strong>期刊</strong>：期刊论文是科研工作者针对某学术期刊投稿，审稿专家审稿并返回修改意见，最终由期刊编辑部决定是否录用。</p><p>3、<strong>出版社</strong>：一般具有一定声望，像IEEE、Springer、ACM，它们旗下有一些会议、期刊，向会议期刊收取出版费，拿取版权，扩充自己的数据库，向其他企业、高校出售来盈利。其实有的出版社即组织学术会议，也出版学术期刊，比如IEEE。</p><span id="more"></span><p>四大出版社（publisher）：</p><ul><li>Springer nature：nature及其子刊</li><li>Elsevier（爱思唯尔）：Cell，柳叶刀期刊</li><li>Wiley：Advanced Materials</li><li>Taylor &amp; Francis</li></ul><p>学术协会团体：IEEE（电气和电子工程师协会）、ACS（美国化学会）、RSC（英国皇家化学学会）、AIP（美国物理协会）、AAAS（美国科学促进会：Science属于它）、NAS（美国国家科学院：PANS属于它）、AMA（美国医学会）<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[全球重要的学术期刊出版社和学术协会介绍](https://zhuanlan.zhihu.com/p/394099449)">[2]</span></a></sup></p><p>4、<strong>出版社数据库</strong>：出版社通常维护自己的数据库，比如IEEE的IEEEXplore就是查询该出版社数据库的入口，这些数据库都是可以下载到原文章的。</p><p>IEEE：https://ieeexplore.ieee.org/</p><p>Springer：https://link.springer.com/</p><p>Elsevier：https://www.elsevier.com/solutions/sciencedirect</p><p>Taylor &amp; Francis：https://www.tandfonline.com/。</p><p>5、<strong>索引数据库</strong>：像<strong>SCI、EI、CPCI-S</strong>等这些数据库其实没有论文的版权，与其说数据库不如说是一个检索工具，类似google/googlescholar，可以综合检索到各大出版社的数据库中的文献，但只能在这上面检索到论文的题目，摘要，参考文献等，和它们自己可以会有一个分类，添加一些附加信息，比如影响因子等。比如<strong>SCI只收录一些高质量的文章</strong>，而EI可能就收录的会多一些。</p><p>SCI科学引文索引(web of science)：http://webofknowledge.com</p><p>EI工程索引：https://www.engineeringvillage.com</p><p>ISTP科技会议录索引：http://webofknowledge.com</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302222118840.png" /></p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302222118931.png" /></p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://cactusii.github.io/post/ke-yan-xiao-bai/">会议期刊、出版社、索引工具之间的关系</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/394099449">全球重要的学术期刊出版社和学术协会介绍</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302222118363.png&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;研究人员向期刊或者会议投稿，交注册费和相应的审稿费等相关费用&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[会议期刊、出版社、索引工具之间的关系](https://cactusii.github.io/post/ke-yan-xiao-bai/)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;会议组织者和期刊联系出版社，交出版费用；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;出版社将论文更新到自己的数据库中，然后将数据库卖给全世界各大高校或企业；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他开源数据库抓取出版社数据库的论文题目、摘要、参考文献等信息。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1、&lt;strong&gt;会议组织者&lt;/strong&gt;：一般由某个学校、组织，为了学术/利益举办会议，负责征集科研工作者的论文并决定是否录用，然后联系出版社进行出版发表，因此要征收科研工作者相应的费用，同时需要向出版社交相应的出版费用。&lt;/p&gt;
&lt;p&gt;2、&lt;strong&gt;期刊&lt;/strong&gt;：期刊论文是科研工作者针对某学术期刊投稿，审稿专家审稿并返回修改意见，最终由期刊编辑部决定是否录用。&lt;/p&gt;
&lt;p&gt;3、&lt;strong&gt;出版社&lt;/strong&gt;：一般具有一定声望，像IEEE、Springer、ACM，它们旗下有一些会议、期刊，向会议期刊收取出版费，拿取版权，扩充自己的数据库，向其他企业、高校出售来盈利。其实有的出版社即组织学术会议，也出版学术期刊，比如IEEE。&lt;/p&gt;</summary>
    
    
    
    <category term="Other" scheme="https://www.sdhlw.top/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>Obsidian插件之Dataview</title>
    <link href="https://www.sdhlw.top/obsidian%E6%8F%92%E4%BB%B6%E4%B9%8Bdataview/"/>
    <id>https://www.sdhlw.top/obsidian%E6%8F%92%E4%BB%B6%E4%B9%8Bdataview/</id>
    <published>2023-02-21T11:49:09.000Z</published>
    <updated>2023-02-21T12:16:42.191Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>1、下载并启用插件2、写相应代码块<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Obsidian 插件之 Dataview](https://sspai.com/post/68183)">[1]</span></a></sup></p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302211102135.png" /></p><ul><li>list：展现形式。创建列表，还有 table、task 可以选择</li><li>from：检索范围。从哪个文件夹（写在双引号里面），或者标签（写在#后面）</li><li>where：</li><li></li><li>聚合条件。contains(file.name,"Dataview") 就是匹配文件名为 “Dataview”的文件</li><li>sort：排序，根据什么做排序。 sort file.ctime就是根据文件的创建时间正序</li></ul><span id="more"></span><p>一些自带的元数据：</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302211102234.png" /></p><p>yml标记语言：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">author:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>title、author、tags这里都是yml语言的key，key可以自定义，也可支持中英文，dataview也是可以识别使用的；</p><p>例子：</p><p>前后加三个 ` ，前面的三个 ` 记得加上dataview，中间加入一下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">table Title, Status</span><br><span class="line">from #test</span><br><span class="line">where</span><br><span class="line">contains(file.name,&quot;aa&quot;)</span><br><span class="line">sort file.ctime</span><br></pre></td></tr></table></figure><p>创建一个tab，文章从test标签中查找，且文件名含有aa的文章，表格表头为file,Title, Status。</p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://sspai.com/post/68183">Obsidian插件之 Dataview</a><a href="#fnref:1" rev="footnote"> ↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;1、下载并启用插件
2、写相应代码块&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[Obsidian 插件之 Dataview](https://sspai.com/post/68183)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302211102135.png&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;list：展现形式。创建列表，还有 table、task 可以选择&lt;/li&gt;
&lt;li&gt;from：检索范围。从哪个文件夹（写在双引号里面），或者标签（写在#后面）&lt;/li&gt;
&lt;li&gt;where：&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;聚合条件。contains(file.name,&quot;Dataview&quot;) 就是匹配文件名为 “Dataview”
的文件&lt;/li&gt;
&lt;li&gt;sort：排序，根据什么做排序。 sort file.ctime
就是根据文件的创建时间正序&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Obsidian插件" scheme="https://www.sdhlw.top/tags/obsidian%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>皮尔森（逊）相关系数（Pearson Correlation Coefficient, PCC）</title>
    <link href="https://www.sdhlw.top/%E7%9A%AE%E5%B0%94%E6%A3%AE%EF%BC%88%E9%80%8A%EF%BC%89%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0%EF%BC%88pearson-correlation-coefficient-pcc%EF%BC%89/"/>
    <id>https://www.sdhlw.top/%E7%9A%AE%E5%B0%94%E6%A3%AE%EF%BC%88%E9%80%8A%EF%BC%89%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0%EF%BC%88pearson-correlation-coefficient-pcc%EF%BC%89/</id>
    <published>2023-02-16T13:56:53.000Z</published>
    <updated>2023-02-22T03:11:18.920Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="介绍">介绍</h3><h4 id="皮尔森相关系数">皮尔森相关系数</h4><p>皮尔森相关系数也称皮尔森积矩相关系数(Pearson product-momentcorrelation coefficient)，是一种线性相关系数，是最常用的一种相关系数。记为r，用来反映变量X和变量Y的线性相关程度，r值介于-1到1之间，绝对值越大表明相关性越强。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[python 皮尔森相关系数（Pearson）](https://blog.csdn.net/small__roc/article/details/123519616)">[1]</span></a></sup></p><p>适用连续变量。</p><p>相关系数 与相关程度一般划分为 - 0.8 - 1.0 极强相关 - 0.6 - 0.8 强相关- 0.4 - 0.6 中等程度相关 - 0.2 - 0.4 弱相关 - 0.0 - 0.2极弱相关或无相关</p><p>原假设：两者不存在相关性P值小，即我们观察的样本（不存在相关性）发生的概率小，存在相关性的概率大，如果原假设成立即不存在相关性，那么我们这个样本就很极端很显著。</p><p><strong>相关系数绝对值越大，越相关，P值越小越相关。</strong></p><span id="more"></span><h4 id="线性回归的r平方">线性回归的R平方</h4><p>线性回归后得到的r平方和使用皮尔森相关求得的r再平方数值上面是一样的。<sup id="fnref:3"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[请问皮尔逊相关系数和r方是一种东西吗？](http://zhidao.baidu.com/question/493668152452206612/answer/2899388201)">[3]</span></a></sup></p><p>R平方：决定系数，反应因变量的全部变异能通过回归关系被自变量解释的比例。<spanclass="math inline">\(R^2\)</span>值越接近1，吻合程度越高，越接近0，则吻合程度越低。<spanclass="math inline">\(R^2\)</span> 作为相关系数，一般机器默认的是<spanclass="math inline">\(R^2\)</span>&gt;0.99，这样才具有可行度和线性关系。<sup id="fnref:4"><a href="#fn:4" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[线性回归r2代表什么](https://worktile.com/kb/ask/6156.html)">[4]</span></a></sup></p><h3 id="使用">使用</h3><p><code>scipy.stats.pearsonr(x, y, *, alternative='two-sided')</code></p><p><strong>Parameters</strong></p><ul><li>x(N,) array_like Inputarray.<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[scipy.stats.pearsonr](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.pearsonr.html)">[2]</span></a></sup></li><li>y(N,) array_like Input array.</li><li>alternative {‘two-sided’, ‘greater’, ‘less’}, optional</li></ul><p>Defines the alternative hypothesis. Default is ‘two-sided’. Thefollowing options are available:</p><ul><li>‘two-sided’: the correlation(相关) is nonzero</li><li>‘less’: the correlation is negative (less than zero)</li><li>‘greater’: the correlation is positive (greater than zero)</li></ul><p><strong>Attributes</strong></p><ul><li><code>statistic</code> ：float，Pearson product-moment<strong>correlation coefficient</strong>.</li><li><code>pvalue</code> ：float，The p-value associated with the chosenalternative.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python实现</span></span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> pearsonr</span><br><span class="line"></span><br><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">y = [<span class="number">1.2</span>,<span class="number">2.2</span>,<span class="number">3.1</span>,<span class="number">4.1</span>]</span><br><span class="line">result = pearsonr(x,y)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;pearson相关系数: &#123;:.6f&#125;&quot;</span>.<span class="built_in">format</span>(result.statistic))  <span class="comment"># result[0]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;P-Value: &#123;:.6f&#125;&quot;</span>.<span class="built_in">format</span>(result.pvalue))  <span class="comment"># result[1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># pearson相关系数: 0.999783</span></span><br><span class="line"><span class="comment"># P-Value: 0.000217</span></span><br></pre></td></tr></table></figure><p><code>numpy.corrcoef(x, y=None, rowvar=True, bias=&lt;no value&gt;, ddof=&lt;no value&gt;, *, dtype=None)</code></p><p>Return Pearson product-moment correlationcoefficients.<sup id="fnref:5"><a href="#fn:5" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[numpy.corrcoef](https://numpy.org/doc/stable/reference/generated/numpy.corrcoef.html)">[5]</span></a></sup></p><p>这里计算的是特征与特征（行与行/列与列）的相关系数。</p><p><strong>Parameters</strong></p><ul><li><code>x</code>：array_like，A 1-D or 2-D array containing multiplevariables and observations.</li><li><code>y</code>：array_like, optional，An additional set of variablesand observations. y has the same shape as x.</li><li><code>rowvar</code>：bool, optional，If rowvar is True (default),then <strong>each row represents a variable, with observations in thecolumns</strong>. Otherwise, the relationship is transposed: each columnrepresents a variable, while the rows contain observations.默认行为特征，列为样本；</li><li><code>dtype</code>：data-type, optional，Data-type of the result. Bydefault, the return data-type will have at least numpy.float64precision.</li></ul><p>Returns: R：ndarray，The correlation coefficient matrix of thevariables.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = pd.Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>])</span><br><span class="line">b = pd.Series([<span class="number">2</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">0</span>])</span><br><span class="line">c = pd.Series([<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">2</span>])</span><br><span class="line">x = np.vstack((a,b,c))</span><br><span class="line">r = np.corrcoef(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(x))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;r:\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(r))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># x:</span></span><br><span class="line"><span class="comment"># [[ 1  2  3  4  5  6  7  8  9 10]</span></span><br><span class="line"><span class="comment">#  [ 2  4  1  5  1  3  6  2  7  0]</span></span><br><span class="line"><span class="comment">#  [ 0  3  2  1  4  7  1  9  6  2]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># r:</span></span><br><span class="line"><span class="comment"># [[1.         0.10233683 0.47840854]</span></span><br><span class="line"><span class="comment">#  [0.10233683 1.         0.0242104 ]</span></span><br><span class="line"><span class="comment">#  [0.47840854 0.0242104  1.        ]]</span></span><br></pre></td></tr></table></figure><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302221100116.png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">b = np.array([[<span class="number">11</span>, <span class="number">25</span>, <span class="number">346</span>], [<span class="number">734</span>, <span class="number">48</span>, <span class="number">49</span>]])</span><br><span class="line">r = np.corrcoef(a,b)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;r:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(r))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># a:</span></span><br><span class="line"><span class="comment"># [[1 2 3]</span></span><br><span class="line"><span class="comment">#  [4 5 6]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># b:</span></span><br><span class="line"><span class="comment"># [[ 11  25 346]</span></span><br><span class="line"><span class="comment">#  [734  48  49]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># r:</span></span><br><span class="line"><span class="comment"># [[ 1.          1.          0.88390399 -0.86539304]</span></span><br><span class="line"><span class="comment">#  [ 1.          1.          0.88390399 -0.86539304]</span></span><br><span class="line"><span class="comment">#  [ 0.88390399  0.88390399  1.         -0.53057867]</span></span><br><span class="line"><span class="comment">#  [-0.86539304 -0.86539304 -0.53057867  1.        ]]</span></span><br></pre></td></tr></table></figure><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302221100313.png" /></p><h3 id="参考文献">参考文献</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/small__roc/article/details/123519616">python皮尔森相关系数（Pearson）</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.pearsonr.html">scipy.stats.pearsonr</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li><li id="fn:3"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="http://zhidao.baidu.com/question/493668152452206612/answer/2899388201">请问皮尔逊相关系数和r方是一种东西吗？</a><a href="#fnref:3" rev="footnote">↩︎</a></span></li><li id="fn:4"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://worktile.com/kb/ask/6156.html">线性回归r2代表什么</a><a href="#fnref:4" rev="footnote">↩︎</a></span></li><li id="fn:5"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">5.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://numpy.org/doc/stable/reference/generated/numpy.corrcoef.html">numpy.corrcoef</a><a href="#fnref:5" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;介绍&lt;/h3&gt;
&lt;h4 id=&quot;皮尔森相关系数&quot;&gt;皮尔森相关系数&lt;/h4&gt;
&lt;p&gt;皮尔森相关系数也称皮尔森积矩相关系数(Pearson product-moment
correlation coefficient)
，是一种线性相关系数，是最常用的一种相关系数。记为r，用来反映变量X和变量Y的线性相关程度，r
值介于-1到1之间，绝对值越大表明相关性越强。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[python 皮尔森相关系数（Pearson）](https://blog.csdn.net/small__roc/article/details/123519616)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;适用连续变量。&lt;/p&gt;
&lt;p&gt;相关系数 与相关程度一般划分为 - 0.8 - 1.0 极强相关 - 0.6 - 0.8 强相关
- 0.4 - 0.6 中等程度相关 - 0.2 - 0.4 弱相关 - 0.0 - 0.2
极弱相关或无相关&lt;/p&gt;
&lt;p&gt;原假设：两者不存在相关性
P值小，即我们观察的样本（不存在相关性）发生的概率小，存在相关性的概率大，如果原假设成立即不存在相关性，那么我们这个样本就很极端很显著。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;相关系数绝对值越大，越相关，P值越小越相关。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
    <category term="Statistics" scheme="https://www.sdhlw.top/tags/statistics/"/>
    
  </entry>
  
  <entry>
    <title>简谈 Python yield</title>
    <link href="https://www.sdhlw.top/%E7%AE%80%E8%B0%88-python-yield/"/>
    <id>https://www.sdhlw.top/%E7%AE%80%E8%B0%88-python-yield/</id>
    <published>2023-02-16T01:36:24.000Z</published>
    <updated>2023-02-16T01:38:12.036Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>带yield的函数是一个生成器（generator），而不是一个函数了，这个生成器有一个函数就是next函数，next就相当于“下一步”生成哪个数，这一次的next开始的地方是接着上一次的next停止的地方执行的。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[python中yield的用法详解——最简单，最清晰的解释](https://blog.csdn.net/mieleizhi0522/article/details/82142856)">[1]</span></a></sup></p><p>先把yield看做“<strong>return</strong>”，在程序中返回某个值，返回之后程序就不再往下运行了。</p><p>程序执行遇到yield关键字，yield返回后面的值之后，程序暂停，直到再次调用next方法或send方法。</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;starting...&quot;</span>)  <span class="comment"># 输出starting...</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = <span class="keyword">yield</span> <span class="number">4</span>     <span class="comment"># 返回4，停止运行,不赋值，res为none.</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;res:&quot;</span>,res) <span class="comment"># 输出res值</span></span><br><span class="line">g = foo()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(g))  <span class="comment"># 从yield返回值，并停止</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*&quot;</span>*<span class="number">20</span>)   <span class="comment"># 输出20个星号</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(g))  <span class="comment"># 从上次停止的地方开始运行，直到遇到yield返回停止</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># starting...</span></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line"><span class="comment"># ********************</span></span><br><span class="line"><span class="comment"># res: None</span></span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;starting...&quot;</span>)   <span class="comment"># 输出starting...</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = <span class="keyword">yield</span> <span class="number">4</span>      <span class="comment"># 返回4，停止运行,不赋值，res为none.</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;res:&quot;</span>,res)  <span class="comment"># 输出res值</span></span><br><span class="line">g = foo()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(g))   <span class="comment"># 从yield返回值，并停止</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*&quot;</span>*<span class="number">20</span>)    <span class="comment"># 输出20个星号</span></span><br><span class="line"><span class="built_in">print</span>(g.send(<span class="number">7</span>)) <span class="comment"># 从上次停止的地方开始运行，并将7赋值给res,直到遇到yield返回停止</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># starting...</span></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line"><span class="comment"># ********************</span></span><br><span class="line"><span class="comment"># res: 7</span></span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/mieleizhi0522/article/details/82142856">python中yield的用法详解——最简单，最清晰的解释</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;带yield的函数是一个生成器（generator），而不是一个函数了，这个生成器有一个函数就是next函数，next就相当于“下一步”生成哪个数，这一次的next开始的地方是接着上一次的next停止的地方执行的。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[python中yield的用法详解——最简单，最清晰的解释](https://blog.csdn.net/mieleizhi0522/article/details/82142856)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;先把yield看做“&lt;strong&gt;return&lt;/strong&gt;”，在程序中返回某个值，返回之后程序就不再往下运行了。&lt;/p&gt;
&lt;p&gt;程序执行遇到yield关键字，yield返回后面的值之后，程序暂停，直到再次调用next方法或send方法。&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>简谈array,reshape,dataframe</title>
    <link href="https://www.sdhlw.top/%E7%AE%80%E8%B0%88array-reshape-dataframe/"/>
    <id>https://www.sdhlw.top/%E7%AE%80%E8%B0%88array-reshape-dataframe/</id>
    <published>2023-02-15T08:18:19.000Z</published>
    <updated>2023-02-17T09:20:09.212Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="array">array</h3><p>Numpy的数据结构是n维的数组对象，叫做ndarray。NumPy数组一般是同质的（但有一种特殊的数组类型例外，它是异质的），即数组中的所有元素类型必须是一致的。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[NumPy中的ndarray与Pandas的Series和DataFrame之间的区别与转换](https://zhuanlan.zhihu.com/p/83660582)">[1]</span></a></sup></p><p>优点：</p><ul><li>内存块风格：ndarray中的所有元素的类型都是相同的，存储元素时内存可以连续，在科学计算中，Numpy的ndarray就可以省掉很多循环语句，代码使用方面比Python原生list简单的多。</li><li>ndarray支持并行化运算（向量化运算）</li><li>Numpy底层使用C语言编写，内部解除了GIL（全局解释器锁），其对数组的操作速度不受Python解释器的限制，效率远高于纯Python代码。</li></ul><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.array([ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>])  <span class="comment"># 16行，没有列</span></span><br><span class="line"></span><br><span class="line">y = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">8</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>]])  <span class="comment"># 2行4列</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x行:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(x.shape[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x维度:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(x.shape))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;y行:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(y.shape[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;y列:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(y.shape[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># x行:16</span></span><br><span class="line"><span class="comment"># x维度:(16,)</span></span><br><span class="line"><span class="comment"># y行:2</span></span><br><span class="line"><span class="comment"># y列:4</span></span><br></pre></td></tr></table></figure><h4 id="reshape">reshape（）</h4><p><ahref="https://numpy.org/doc/stable/reference/generated/numpy.reshape.html">官方文档</a></p><p><code>numpy.reshape(a, newshape, order='C')[source]</code></p><ul><li>a：数组--需要处理的数据<sup id="fnref:3"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[python基础之numpy.reshape详解](https://www.jianshu.com/p/fc2fe026f002)">[3]</span></a></sup></li><li>newshape：新的格式--整数或整数数组，如(2,3)表示2行3列，新的形状应该与原来的形状兼容，即行数和列数相乘后等于a中元素的数量</li><li>order : 可选范围为{‘C’, ‘F’,‘A’}。使用索引顺序读取a的元素，并按照索引顺序将元素放到变换后的的数组中。如果不进行order参数的设置，默认参数为C。</li></ul><p>（1）“C”指的是用类C写的读/索引顺序的元素，最后一个维度变化最快，第一个维度变化最慢。以二维数组为例，简单来讲就是<strong>横着读，横着写，优先读/写一行</strong>。</p><p>（2）“F”是指用FORTRAN类索引顺序读/写元素，最后一个维度变化最慢，第一个维度变化最快。<strong>竖着读，竖着写，优先读/写一列</strong>。注意，“C”和“F”选项不考虑底层数组的内存布局，只引用索引的顺序。</p><p>（3）“A”选项所生成的数组的效果与原数组a的数据存储方式有关，如果数据是按照FORTRAN存储的话，它的生成效果与”F“相同，否则与“C”相同。这里可能听起来有点模糊，下面会给出示例。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">82</span>,<span class="number">63</span>,<span class="number">91</span>,<span class="number">52</span>],[<span class="number">121</span>,<span class="number">345</span>,<span class="number">567</span>,<span class="number">987</span>]])</span><br><span class="line"></span><br><span class="line">x1 = x.reshape((<span class="number">2</span>,<span class="number">6</span>),order=<span class="string">&#x27;C&#x27;</span>)  <span class="comment"># 横着读，横着写，优先读/写一行</span></span><br><span class="line">x2 = x.reshape((<span class="number">2</span>,<span class="number">6</span>),order=<span class="string">&#x27;F&#x27;</span>)  <span class="comment"># 竖着读，竖着写，优先读/写一列</span></span><br><span class="line">x3 = x.reshape((<span class="number">2</span>,<span class="number">6</span>),order=<span class="string">&#x27;A&#x27;</span>)  <span class="comment"># 原数组FORTRAN存储，则竖着读，竖着写，优先读/写一列，否则横着读，横着写，优先读/写一行</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(x))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x1:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(x1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x2:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(x2))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x3:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(x3))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># x:</span></span><br><span class="line"><span class="comment"># [[  1   2   3   4]</span></span><br><span class="line"><span class="comment">#  [ 82  63  91  52]</span></span><br><span class="line"><span class="comment">#  [121 345 567 987]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x1:</span></span><br><span class="line"><span class="comment"># [[  1   2   3   4  82  63]</span></span><br><span class="line"><span class="comment">#  [ 91  52 121 345 567 987]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x2:</span></span><br><span class="line"><span class="comment"># [[  1 121  63   3 567  52]</span></span><br><span class="line"><span class="comment">#  [ 82   2 345  91   4 987]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x3:</span></span><br><span class="line"><span class="comment"># [[  1   2   3   4  82  63]</span></span><br><span class="line"><span class="comment">#  [ 91  52 121 345 567 987]]</span></span><br></pre></td></tr></table></figure><p>出现-1的话，有两种情况 -<code>reshape(-1)</code>：原本数组有n个元素，返回一个n行无列的数组 -<code>reshape(-1,n)</code>n为任意数字，n为列数，-1会根据列数，自动计算出新数组的行数，再根据这个新的维度重新组合数组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">x = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">82</span>,<span class="number">63</span>,<span class="number">91</span>,<span class="number">52</span>],[<span class="number">121</span>,<span class="number">345</span>,<span class="number">567</span>,<span class="number">987</span>]])</span><br><span class="line">y = x.reshape(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(x))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;y:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(y))  </span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># x:</span></span><br><span class="line"><span class="comment"># [[  1   2   3   4]</span></span><br><span class="line"><span class="comment">#  [ 82  63  91  52]</span></span><br><span class="line"><span class="comment">#  [121 345 567 987]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># y:</span></span><br><span class="line"><span class="comment"># [  1   2   3   4  82  63  91  52 121 345 567 987]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">x = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">82</span>,<span class="number">63</span>,<span class="number">91</span>,<span class="number">52</span>],[<span class="number">121</span>,<span class="number">345</span>,<span class="number">567</span>,<span class="number">987</span>]])</span><br><span class="line">y = x.reshape(-<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(x))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;y:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(y))  </span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># x:</span></span><br><span class="line"><span class="comment"># [[  1   2   3   4]</span></span><br><span class="line"><span class="comment">#  [ 82  63  91  52]</span></span><br><span class="line"><span class="comment">#  [121 345 567 987]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># y:</span></span><br><span class="line"><span class="comment"># [[  1   2]</span></span><br><span class="line"><span class="comment">#  [  3   4]</span></span><br><span class="line"><span class="comment">#  [ 82  63]</span></span><br><span class="line"><span class="comment">#  [ 91  52]</span></span><br><span class="line"><span class="comment">#  [121 345]</span></span><br><span class="line"><span class="comment">#  [567 987]]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是二维数据，6行1列，表示（6,1） </span></span><br><span class="line">[[ <span class="number">0.08540663</span>]</span><br><span class="line"> [ <span class="number">1.85038409</span>]</span><br><span class="line"> [-<span class="number">2.41396732</span>]</span><br><span class="line"> [ <span class="number">1.39196365</span>]</span><br><span class="line"> [-<span class="number">0.35908504</span>]</span><br><span class="line"> [ <span class="number">0.64526911</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是一维数据，6行无列（6，）</span></span><br><span class="line">[ <span class="number">0.08540663</span>  <span class="number">1.85038409</span> -<span class="number">2.41396732</span>  <span class="number">1.39196365</span> -<span class="number">0.35908504</span>  <span class="number">0.64526911</span>]</span><br></pre></td></tr></table></figure><p>上面二维变一维：reshape(-1) 一维变二维：reshape(-1,1)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[ <span class="number">0.08540663</span>],[ <span class="number">1.85038409</span>],[-<span class="number">2.41396732</span>],[ <span class="number">1.39196365</span>],[-<span class="number">0.35908504</span>],[ <span class="number">0.64526911</span>]]) <span class="comment"># a是二维数据</span></span><br><span class="line">b = a.reshape(-<span class="number">1</span>)  <span class="comment"># b是一维数据</span></span><br><span class="line">c = b.reshape(-<span class="number">1</span>,<span class="number">1</span>) <span class="comment"># c是二维数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a的维度：&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(a.shape))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b的维度：&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(b.shape))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(c))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c的维度：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(c.shape))</span><br><span class="line"></span><br><span class="line"><span class="comment"># a的维度：(6, 1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># b：[ 0.08540663  1.85038409 -2.41396732  1.39196365 -0.35908504  0.64526911]</span></span><br><span class="line"><span class="comment"># b的维度：(6,)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># c：[[ 0.08540663]</span></span><br><span class="line"><span class="comment">#  [ 1.85038409]</span></span><br><span class="line"><span class="comment">#  [-2.41396732]</span></span><br><span class="line"><span class="comment">#  [ 1.39196365]</span></span><br><span class="line"><span class="comment">#  [-0.35908504]</span></span><br><span class="line"><span class="comment">#  [ 0.64526911]]</span></span><br><span class="line"><span class="comment"># c的维度：(6, 1)</span></span><br></pre></td></tr></table></figure><h3 id="dataframe">dataframe</h3><p>Pandas有两个主要的数据结构，Series和DataFrame，记住大小写区分。<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[numpy 和 pandas 的区别详解](https://benpaodewoniu.github.io/2018/12/17/python39/)">[2]</span></a></sup></p><p>Series类似于一维数组，和Numpy的array接近，由一组数据和数据标签组成。数据标签有索引的作用。</p><p>Series是一维的数据结构，DataFrame是一个表格型的数据结构，它含有不同的列，每列都是不同的数据类型。我们可以把DataFrame看作Series组成的字典，它既有行索引也有列索引。</p><h3 id="dataframe转化成array">dataframe转化成array:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df=df.values</span><br></pre></td></tr></table></figure><h3 id="array转化成dataframe">array转化成dataframe</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.DataFrame(df)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">2</span>]])</span><br><span class="line">b = pd.DataFrame(a)</span><br><span class="line">c = b.values</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(c))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># &lt;class &#x27;numpy.ndarray&#x27;&gt;</span></span><br><span class="line"><span class="comment"># &lt;class &#x27;pandas.core.frame.DataFrame&#x27;&gt;</span></span><br><span class="line"><span class="comment"># &lt;class &#x27;numpy.ndarray&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zhuanlan.zhihu.com/p/83660582">NumPy中的ndarray与Pandas的Series和DataFrame之间的区别与转换</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://benpaodewoniu.github.io/2018/12/17/python39/">numpy和 pandas 的区别详解</a><a href="#fnref:2" rev="footnote"> ↩︎</a></span></li><li id="fn:3"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.jianshu.com/p/fc2fe026f002">python基础之numpy.reshape详解</a><a href="#fnref:3" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;array&quot;&gt;array&lt;/h3&gt;
&lt;p&gt;Numpy的数据结构是n维的数组对象，叫做ndarray。
NumPy数组一般是同质的（但有一种特殊的数组类型例外，它是异质的），即数组中的所有元素类型必须是一致的。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[NumPy中的ndarray与Pandas的Series和DataFrame之间的区别与转换](https://zhuanlan.zhihu.com/p/83660582)&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内存块风格：ndarray中的所有元素的类型都是相同的，存储元素时内存可以连续，在科学计算中，Numpy的ndarray就可以省掉很多循环语句，代码使用方面比Python原生list简单的多。&lt;/li&gt;
&lt;li&gt;ndarray支持并行化运算（向量化运算）&lt;/li&gt;
&lt;li&gt;Numpy底层使用C语言编写，内部解除了GIL（全局解释器锁），其对数组的操作速度不受Python解释器的限制，效率远高于纯Python代码。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python (matplotlib)保存矢量图</title>
    <link href="https://www.sdhlw.top/python-matplotlib-%E4%BF%9D%E5%AD%98%E7%9F%A2%E9%87%8F%E5%9B%BE/"/>
    <id>https://www.sdhlw.top/python-matplotlib-%E4%BF%9D%E5%AD%98%E7%9F%A2%E9%87%8F%E5%9B%BE/</id>
    <published>2023-02-10T19:54:42.000Z</published>
    <updated>2023-02-10T20:07:44.093Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="保存矢量图">保存矢量图</h3><p>语法<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Python中Matplotlib Savefig()不同参数的使用](https://blog.csdn.net/wilbeok/article/details/111194473)">[1]</span></a></sup>：</p><p><code>savefig(fname, dpi=None, facecolor=’w’, edgecolor=’w’, orientation=’portrait’, papertype=None, format=None, transparent=False, bbox_inches=None, pad_inches=0.1, frameon=None, metadata=None)</code></p><p>简单使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.savefig(<span class="string">&#x27;C:\\Users\\Lenovo\\Pictures\\test03.svg&#x27;</span>, <span class="built_in">format</span>=<span class="string">&#x27;svg&#x27;</span>,dpi = <span class="number">600</span>,transparent=<span class="literal">False</span>,bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li>fname即<code>test03.svg</code>，<code>format='svg'</code>，<code>dpi = 600</code>为导出矢量图的三个参数</li><li><code>transparent=False</code> ：照片背景不要透明</li><li><code>bbox_inches='tight'</code>：使未保存到图中的图例（或其他部分）包含进来，避免图片保存下来不全。bbox_inches的作用是调整图的bbox,即boundingbox(边界框)<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Python_matplotlib图例放在外侧保存时显示不完整问题解决](https://blog.csdn.net/Poul_henry/article/details/88311964)">[2]</span></a></sup></li></ul><span id="more"></span><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/wilbeok/article/details/111194473">Python中MatplotlibSavefig()不同参数的使用</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/Poul_henry/article/details/88311964">Python_matplotlib图例放在外侧保存时显示不完整问题解决</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;保存矢量图&quot;&gt;保存矢量图&lt;/h3&gt;
&lt;p&gt;语法&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[Python中Matplotlib Savefig()不同参数的使用](https://blog.csdn.net/wilbeok/article/details/111194473)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;savefig(fname, dpi=None, facecolor=’w’, edgecolor=’w’, orientation=’portrait’, papertype=None, format=None, transparent=False, bbox_inches=None, pad_inches=0.1, frameon=None, metadata=None)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单使用：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;plt.savefig(&lt;span class=&quot;string&quot;&gt;&amp;#x27;C:\\Users\\Lenovo\\Pictures\\test03.svg&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#x27;svg&amp;#x27;&lt;/span&gt;,dpi = &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;,transparent=&lt;span class=&quot;literal&quot;&gt;False&lt;/span&gt;,bbox_inches=&lt;span class=&quot;string&quot;&gt;&amp;#x27;tight&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;fname即
&lt;code&gt;test03.svg&lt;/code&gt;，&lt;code&gt;format=&#39;svg&#39;&lt;/code&gt;，&lt;code&gt;dpi = 600&lt;/code&gt;
为导出矢量图的三个参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transparent=False&lt;/code&gt; ：照片背景不要透明&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bbox_inches=&#39;tight&#39;&lt;/code&gt;
：使未保存到图中的图例（或其他部分）包含进来，避免图片保存下来不全。bbox_inches的作用是调整图的bbox,
即bounding
box(边界框)&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[Python_matplotlib图例放在外侧保存时显示不完整问题解决](https://blog.csdn.net/Poul_henry/article/details/88311964)
&quot;&gt;[2]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
    <category term="Matplotlib" scheme="https://www.sdhlw.top/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>Python(matplotlib) 改变画布背景</title>
    <link href="https://www.sdhlw.top/python-matplotlib-%E6%94%B9%E5%8F%98%E7%94%BB%E5%B8%83%E8%83%8C%E6%99%AF/"/>
    <id>https://www.sdhlw.top/python-matplotlib-%E6%94%B9%E5%8F%98%E7%94%BB%E5%B8%83%E8%83%8C%E6%99%AF/</id>
    <published>2023-02-10T19:31:23.000Z</published>
    <updated>2023-02-12T09:05:22.094Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>起因：为了设置画布不透明效果</p><p>对象形式：<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[How to set opacity of background colour of graph with Matplotlib](https://stackoverflow.com/questions/4581504/how-to-set-opacity-of-background-colour-of-graph-with-matplotlib)">[1]</span></a></sup></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">fig = plt.figure()</span><br><span class="line">fig.patch.set_facecolor(<span class="string">&#x27;white&#x27;</span>)  <span class="comment"># 设置画布白色不透明（坐标轴外），再画图</span></span><br><span class="line">fig.patch.set_alpha(<span class="number">1</span>)</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)  <span class="comment"># 创建1*1的网格，并添加第一个网格</span></span><br><span class="line">ax.patch.set_facecolor(<span class="string">&#x27;white&#x27;</span>) <span class="comment"># 设置白色不透明（坐标轴内）</span></span><br><span class="line">ax.patch.set_alpha(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ax.plot(<span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># If we don&#x27;t specify the edgecolor and facecolor for the figure when</span></span><br><span class="line"><span class="comment"># saving with savefig, it will override the value we set earlier!</span></span><br><span class="line">fig.savefig(<span class="string">&#x27;test01.png&#x27;</span>, facecolor=fig.get_facecolor(), edgecolor=<span class="string">&#x27;none&#x27;</span>)  <span class="comment"># 一定要加这俩个参数，否则保存后会被改掉参数</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302110342899.png" /></p><span id="more"></span><p>形式<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[python绘图背景透明_如何在 Matplotlib 中更改绘图背景](https://blog.csdn.net/weixin_39568889/article/details/113313559?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22113313559%22%2C%22source%22%3A%22unlogin%22%7D)">[2]</span></a></sup></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams.update(&#123;</span><br><span class="line">    <span class="string">&quot;figure.facecolor&quot;</span>:  (<span class="string">&#x27;#FFFFFF&#x27;</span>),  <span class="comment"># 白色 坐标轴外</span></span><br><span class="line">    <span class="string">&quot;axes.facecolor&quot;</span>:    (<span class="string">&#x27;#FFFFFF&#x27;</span>),  <span class="comment"># 白色 坐标轴内</span></span><br><span class="line">    <span class="string">&quot;savefig.facecolor&quot;</span>: (<span class="string">&#x27;#FFFFFF&#x27;</span>),  <span class="comment"># 白色 保存图片时</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">plt.plot(<span class="built_in">range</span>(<span class="number">1000</span>))</span><br><span class="line"></span><br><span class="line">plt.savefig(<span class="string">&#x27;test02.svg&#x27;</span>, facecolor=fig.get_facecolor(), edgecolor=<span class="string">&#x27;none&#x27;</span>,<span class="built_in">format</span>=<span class="string">&#x27;svg&#x27;</span>,dpi = <span class="number">600</span>, bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><ul><li><code>bbox_inches='tight'</code> :解决导出图片时，坐标轴外内容过多没保存下来<sup id="fnref:3"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Python_matplotlib图例放在外侧保存时显示不完整问题解决](https://blog.csdn.net/Poul_henry/article/details/88311964)">[3]</span></a></sup></li><li>fname即<code>test02.svg</code>，<code>format='svg'</code>，<code>dpi = 600</code>为导出矢量图的三个参数</li></ul><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302110342978.svg" /></p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://stackoverflow.com/questions/4581504/how-to-set-opacity-of-background-colour-of-graph-with-matplotlib">Howto set opacity of background colour of graph withMatplotlib</a><a href="#fnref:1" rev="footnote"> ↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/weixin_39568889/article/details/113313559?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22113313559%22%2C%22source%22%3A%22unlogin%22%7D">python绘图背景透明_如何在Matplotlib 中更改绘图背景</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li><li id="fn:3"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/Poul_henry/article/details/88311964">Python_matplotlib图例放在外侧保存时显示不完整问题解决</a><a href="#fnref:3" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;起因：为了设置画布不透明效果&lt;/p&gt;
&lt;p&gt;对象形式：&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[How to set opacity of background colour of graph with Matplotlib](https://stackoverflow.com/questions/4581504/how-to-set-opacity-of-background-colour-of-graph-with-matplotlib)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fig = plt.figure()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fig.patch.set_facecolor(&lt;span class=&quot;string&quot;&gt;&amp;#x27;white&amp;#x27;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;# 设置画布白色不透明（坐标轴外），再画图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fig.patch.set_alpha(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax = fig.add_subplot(&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;# 创建1*1的网格，并添加第一个网格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.patch.set_facecolor(&lt;span class=&quot;string&quot;&gt;&amp;#x27;white&amp;#x27;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;# 设置白色不透明（坐标轴内）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.patch.set_alpha(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ax.plot(&lt;span class=&quot;built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# If we don&amp;#x27;t specify the edgecolor and facecolor for the figure when&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# saving with savefig, it will override the value we set earlier!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fig.savefig(&lt;span class=&quot;string&quot;&gt;&amp;#x27;test01.png&amp;#x27;&lt;/span&gt;, facecolor=fig.get_facecolor(), edgecolor=&lt;span class=&quot;string&quot;&gt;&amp;#x27;none&amp;#x27;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;# 一定要加这俩个参数，否则保存后会被改掉参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302110342899.png&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
    <category term="plt" scheme="https://www.sdhlw.top/tags/plt/"/>
    
  </entry>
  
  <entry>
    <title>解决npm下载慢问题</title>
    <link href="https://www.sdhlw.top/%E8%A7%A3%E5%86%B3npm%E4%B8%8B%E8%BD%BD%E6%85%A2%E9%97%AE%E9%A2%98/"/>
    <id>https://www.sdhlw.top/%E8%A7%A3%E5%86%B3npm%E4%B8%8B%E8%BD%BD%E6%85%A2%E9%97%AE%E9%A2%98/</id>
    <published>2023-02-07T14:57:33.000Z</published>
    <updated>2023-02-07T15:14:52.640Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h5 id="npm镜像">npm镜像：</h5><p>淘宝：<code>http://registry.npm.taobao.org</code></p><p>腾讯云：<code>http://mirrors.cloud.tencent.com/npm/</code></p><p>华为云：<code>https://mirrors.huaweicloud.com/repository/npm/</code></p><span id="more"></span><h5 id="下载时临时使用淘宝镜像">下载时临时使用淘宝镜像</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install xxx --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><hr /><h5 id="永久更改镜像">永久更改镜像</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>再执行 <code>npm config get registry</code> 返回<code>http://registry.npm.taobao.org</code> 则设置成功</p><hr /><h5 id="通过使用淘宝定制的cnpm安装">通过使用淘宝定制的cnpm安装：</h5><ul><li>安装cnpm</li></ul><p><code>npm install -g cnpm --registry=https://registry.npmmirror.com</code></p><ul><li>使用cnpm</li></ul><p><code>cnpm install xxx</code></p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;npm镜像&quot;&gt;npm镜像：&lt;/h5&gt;
&lt;p&gt;淘宝：&lt;code&gt;http://registry.npm.taobao.org&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;腾讯云：&lt;code&gt;http://mirrors.cloud.tencent.com/npm/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;华为云：&lt;code&gt;https://mirrors.huaweicloud.com/repository/npm/&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="NPM" scheme="https://www.sdhlw.top/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>设置 Next 主题支持 Latex 渲染</title>
    <link href="https://www.sdhlw.top/%E8%AE%BE%E7%BD%AE-next-%E4%B8%BB%E9%A2%98%E6%94%AF%E6%8C%81-latex-%E6%B8%B2%E6%9F%93/"/>
    <id>https://www.sdhlw.top/%E8%AE%BE%E7%BD%AE-next-%E4%B8%BB%E9%A2%98%E6%94%AF%E6%8C%81-latex-%E6%B8%B2%E6%9F%93/</id>
    <published>2023-02-07T14:57:07.000Z</published>
    <updated>2023-02-07T15:15:58.219Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>需求：让 hexo 的 next 主题支持渲染 LaTeX 语法的数学公式。</p><p>环境： <code>hexo version</code>即可查看hexo版本； <imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237479.png"alt="img" /></p><p>查看<code>theme/next/package.json</code>即可查看next版本； <imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237584.png"alt="img" /></p><span id="more"></span><p>步骤：</p><p>1、Powershell :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-rendered-marked</span><br><span class="line">npm install hexo-<span class="built_in">filter</span>-mathjax --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>2、修改next主题配置文件，搜索math，找到mathjax，修改为true；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><p>3、在文章的 front-matter 中添加 <code>mathjax: true</code>，该文章即可渲染[<ahref="app://obsidian.md/index.html#fn-1-66fd1567c623a948">1]</a>；建议将<code>mathjax: true</code> 写入 <code>\scaffolds</code> 的 post.md文件中的 front-matter，以后每篇文章都会自动添加，自动渲染。</p><h3 id="参考文章">参考文章</h3><hr /><ol type="1"><li><ahref="https://roro4ever.github.io/2019/12/01/hexo-Next主题渲染-latex-公式的配置方法/hexo-next主题渲染-latex-公式的配置方法/">HexoNext主题渲染 Latex 公式的配置方法</a><ahref="app://obsidian.md/index.html#fnref-1-66fd1567c623a948">↩︎</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;需求：让 hexo 的 next 主题支持渲染 LaTeX 语法的数学公式。&lt;/p&gt;
&lt;p&gt;环境： &lt;code&gt;hexo version&lt;/code&gt;即可查看hexo版本； &lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237479.png&quot;
alt=&quot;img&quot; /&gt;&lt;/p&gt;
&lt;p&gt;查看&lt;code&gt;theme/next/package.json&lt;/code&gt;即可查看next版本； &lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237584.png&quot;
alt=&quot;img&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Hexo" scheme="https://www.sdhlw.top/tags/hexo/"/>
    
    <category term="Latex" scheme="https://www.sdhlw.top/tags/latex/"/>
    
  </entry>
  
  <entry>
    <title>波士顿房价数据集的处理</title>
    <link href="https://www.sdhlw.top/%E6%B3%A2%E5%A3%AB%E9%A1%BF%E6%88%BF%E4%BB%B7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E5%A4%84%E7%90%86/"/>
    <id>https://www.sdhlw.top/%E6%B3%A2%E5%A3%AB%E9%A1%BF%E6%88%BF%E4%BB%B7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E5%A4%84%E7%90%86/</id>
    <published>2023-02-07T06:33:34.000Z</published>
    <updated>2023-02-08T04:33:20.464Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="需求">需求</h3><p>波士顿房价数据集在scikit-learn1.2版本以后被移除了。目前自己用的刚好是1.2版本，但是需要复现书中的一些代码（Python机器学习基础教程），所以需要从其他途径获取波士顿房价数据集，主要是获得data(506,104)和相关的target。</p><span id="more"></span><h3 id="实现">实现</h3><p>1、获得data(506,104)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data_url = <span class="string">&quot;http://lib.stat.cmu.edu/datasets/boston&quot;</span></span><br><span class="line">raw_df = pd.read_csv(data_url, sep=<span class="string">&quot;\s+&quot;</span>, skiprows=<span class="number">22</span>, header=<span class="literal">None</span>)</span><br><span class="line">data = np.hstack([raw_df.values[::<span class="number">2</span>, :], raw_df.values[<span class="number">1</span>::<span class="number">2</span>, :<span class="number">2</span>]])</span><br><span class="line">target = raw_df.values[<span class="number">1</span>::<span class="number">2</span>, <span class="number">2</span>] <span class="comment"># 归一化和特征构造后都没有变化</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Data shape: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(data.shape))</span><br><span class="line"></span><br><span class="line">X = MinMaxScaler().fit_transform(data)</span><br><span class="line">X = PolynomialFeatures(degree=<span class="number">2</span>, include_bias=<span class="literal">False</span>).fit_transform(X) <span class="comment"># X即为最后的data(506,104)</span></span><br><span class="line"><span class="built_in">print</span>(X.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># Data shape: (506, 13)  </span></span><br><span class="line"><span class="comment"># X shape: (506, 104)</span></span><br></pre></td></tr></table></figure><p>2、获取target：</p><p>对数据进行归一化和多项式构造，并没有改变行的布局，只是列发生变化，所以shape变化的前后，target不变。</p><h3 id="理解">理解</h3><h4 id="特征的由少变多">特征的由少变多</h4><p>最初的 13 个特征加上这 13 个特征两两组合（有放回）得到的 91个特征，一共有 104 个特征。</p><p>两两组合计算： 思路1：</p><blockquote><p>共13个特征，第一次抽取1这个特征，再放回1，也就是1可以和13个特征组合，也就是允许1和1组合。</p><p>第二次抽取2这个特征，再放回2，2也可以和13个特征组合，但是第一次抽取时1和2已经组合过了，所以需要去除这个1和2组合，即2只能和12个特征组合。</p><p>第三次抽取3这个特征，再放回3，3也可以和13个特征组合，但是第一次3和1已经组合过了，第二次3和2已经组合过了，即3只能和11个特征组合。</p><p>第 1 个特征可以与 13 个特征相乘，第 2 个可以与 12 个特征相乘（除了第1 个），第 3 个可以与 11 个特征相乘……依次相加，13 + 12 + 11 + … + 1 =91。</p></blockquote><p>思路2：当成两部分计算，之前自己算成78，就是忽略了有放回这个条件即忽略了绿色部分；</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302071417095.png" /></p><h4 id="minmaxscaler">MinMaxScaler()</h4><p>Featurescaling，常见的提法有“特征归一化”、“标准化”，是数据预处理中的重要技术。<sup id="fnref:3"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[为什么要做特征归一化/标准化？](https://blog.csdn.net/blogshinelee/article/details/102875044)">[3]</span></a></sup>本文将Featurescaling叫作特征标准化，归一化指代min-max normalization。</p><p>常用feature scaling（标准化）方法：</p><ul><li>Rescaling (min-max normalization、range scaling) / 归一化</li><li>Mean normalization</li><li>Standardization (Z-score Normalization)</li><li>Scaling to unit length</li></ul><p>上述4种featurescaling方式，前3种为逐行操作，最后1种为逐列操作。本文只讨论min-maxnormalization这个方式。</p><p>当数据(x)按照最小值中心化后，再按极差（最大值 -最小值）缩放，数据移动了最小值个单位，并且会被收敛到 <code>[0,1]</code>之间(默认)，而这个过程，就叫做数据归一化(Normalization，又称Min-MaxScaling)<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[preprocessing.MinMaxScaler用法](https://hg95.github.io/sklearn-notes/Chapter3/preprocessing.MinMaxScaler%E7%94%A8%E6%B3%95.html)">[1]</span></a></sup>。</p><p>归一化其实就是标准化的一种方式，只不过归一化是将数据映射到了<code>[0,1]</code>这个区间中。<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[使用sklearn进行对数据标准化、归一化以及将数据还原](https://blog.csdn.net/FrankieHello/article/details/79659111)">[2]</span></a></sup></p><p>归一化之后的数据服从正态分布，公式如下： <spanclass="math display">\[X^* = \frac{x-min(x)}{max(x)-min(x)}\]</span></p><figure><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302071417617.png"alt="归一化过程" /><figcaption aria-hidden="true">归一化过程</figcaption></figure><p><ahref="https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html?highlight=minmaxscaler#sklearn.preprocessing.MinMaxScaler">preprocessing.MinMaxScaler官方文档</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">sklearn</span>.preprocessing.MinMaxScaler(feature_range=(<span class="number">0</span>, <span class="number">1</span>), *, copy=<span class="literal">True</span>, clip=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>默认数据归一到 <code>[ 0，1 ]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line">data = np.array([<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]).reshape(-<span class="number">1</span>, <span class="number">1</span>) </span><br><span class="line">mm = MinMaxScaler()   <span class="comment"># 实例化</span></span><br><span class="line">mm_data = mm.fit_transform(data)  <span class="comment">#与下面注释的两行一样</span></span><br><span class="line"><span class="comment"># mm = mm.fit(data)  # fit，在这里本质是生成min(x)和max(x)</span></span><br><span class="line"><span class="comment"># mm_data = mm.transform(data) # 通过接口导出结果</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;data：\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(data))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;归一化的data：\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(mm_data))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out：</span></span><br><span class="line"><span class="comment"># data：</span></span><br><span class="line"><span class="comment"># [[3]</span></span><br><span class="line"><span class="comment">#  [4]</span></span><br><span class="line"><span class="comment">#  [5]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 归一化的data：</span></span><br><span class="line"><span class="comment"># [[0. ]</span></span><br><span class="line"><span class="comment">#  [0.5]</span></span><br><span class="line"><span class="comment">#  [1. ]]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">data = np.array([[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">1</span>,<span class="number">78</span>,<span class="number">3</span>],[<span class="number">60</span>,<span class="number">56</span>,<span class="number">32</span>],[<span class="number">97</span>,<span class="number">43</span>,<span class="number">12</span>]])</span><br><span class="line">mm = MinMaxScaler()  </span><br><span class="line">mm_data = mm.fit_transform(data)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;data：\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(data))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;归一化的data：\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(mm_data))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;data的shape:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(data.shape))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最大值：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(mm.data_max_))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最小值：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(mm.data_min_))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># data：</span></span><br><span class="line"><span class="comment"># [[ 3  4  5]</span></span><br><span class="line"><span class="comment">#  [ 1 78  3]</span></span><br><span class="line"><span class="comment">#  [60 56 32]</span></span><br><span class="line"><span class="comment">#  [97 43 12]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 归一化的data：</span></span><br><span class="line"><span class="comment"># [[0.02083333 0.         0.06896552]</span></span><br><span class="line"><span class="comment">#  [0.         1.         0.        ]</span></span><br><span class="line"><span class="comment">#  [0.61458333 0.7027027  1.        ]</span></span><br><span class="line"><span class="comment">#  [1.         0.52702703 0.31034483]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># data的shape:(4, 3)</span></span><br><span class="line"><span class="comment"># 最大值：[97. 78. 32.]</span></span><br><span class="line"><span class="comment"># 最小值：[1. 4. 3.]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>列是特征，行是样本，所以这里的归一化都是以列为单位；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler, PolynomialFeatures</span><br><span class="line"></span><br><span class="line">np.set_printoptions(threshold = np.inf) <span class="comment"># 不使用省略号表示</span></span><br><span class="line">np.set_printoptions(suppress = <span class="literal">True</span>) <span class="comment"># 不使用科学计数显示</span></span><br><span class="line"></span><br><span class="line">data_url = <span class="string">&quot;http://lib.stat.cmu.edu/datasets/boston&quot;</span></span><br><span class="line">raw_df = pd.read_csv(data_url, sep=<span class="string">&quot;\s+&quot;</span>, skiprows=<span class="number">22</span>, header=<span class="literal">None</span>)</span><br><span class="line">data = np.hstack([raw_df.values[::<span class="number">2</span>, :], raw_df.values[<span class="number">1</span>::<span class="number">2</span>, :<span class="number">2</span>]])</span><br><span class="line">target = raw_df.values[<span class="number">1</span>::<span class="number">2</span>, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">mm = MinMaxScaler()  <span class="comment"># 实例化</span></span><br><span class="line">mm = mm.fit(data)   <span class="comment"># 得出最大值，最小值</span></span><br><span class="line">data_g = mm.transform(data) <span class="comment"># 导出归一化结果</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;data shape: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(data.shape))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X shape: &#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(data_g.shape)) <span class="comment"># 只做了归一化，前后特征维度没变</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;data前3行：\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(data[<span class="number">0</span>:<span class="number">3</span>,]))  <span class="comment"># 验证按列进行归一化</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;归一化后的data_g:\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(data_g[<span class="number">0</span>:<span class="number">3</span>,]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最小值：&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(mm.data_min_))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最大值：&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(mm.data_max_))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># data shape: (506, 13)</span></span><br><span class="line"><span class="comment"># X shape: (506, 13)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># data前3行：</span></span><br><span class="line"><span class="comment"># [[  0.00632  18.        2.31      0.        0.538     6.575    65.2</span></span><br><span class="line"><span class="comment">#     4.09      1.      296.       15.3     396.9       4.98   ]</span></span><br><span class="line"><span class="comment">#  [  0.02731   0.        7.07      0.        0.469     6.421    78.9</span></span><br><span class="line"><span class="comment">#     4.9671    2.      242.       17.8     396.9       9.14   ]</span></span><br><span class="line"><span class="comment">#  [  0.02729   0.        7.07      0.        0.469     7.185    61.1</span></span><br><span class="line"><span class="comment">#     4.9671    2.      242.       17.8     392.83      4.03   ]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 归一化后的data_g:</span></span><br><span class="line"><span class="comment"># [[0.         0.18       0.06781525 0.         0.31481481 0.57750527</span></span><br><span class="line"><span class="comment">#   0.64160659 0.26920314 0.         0.20801527 0.28723404 1.</span></span><br><span class="line"><span class="comment">#   0.08967991]</span></span><br><span class="line"><span class="comment">#  [0.00023592 0.         0.24230205 0.         0.17283951 0.5479977</span></span><br><span class="line"><span class="comment">#   0.78269825 0.34896198 0.04347826 0.10496183 0.55319149 1.</span></span><br><span class="line"><span class="comment">#   0.2044702 ]</span></span><br><span class="line"><span class="comment">#  [0.0002357  0.         0.24230205 0.         0.17283951 0.6943859</span></span><br><span class="line"><span class="comment">#   0.59938208 0.34896198 0.04347826 0.10496183 0.55319149 0.98973725</span></span><br><span class="line"><span class="comment">#   0.06346578]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最小值：[  0.00632   0.        0.46      0.        0.385     3.561     2.9</span></span><br><span class="line"><span class="comment">#    1.1296    1.      187.       12.6       0.32      1.73   ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最大值：[ 88.9762 100.      27.74     1.       0.871    8.78   100.      12.1265</span></span><br><span class="line"><span class="comment">#   24.     711.      22.     396.9     37.97  ]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>((<span class="number">0.00632</span>-<span class="number">0.00632</span>)/(<span class="number">88.9762</span>-<span class="number">0.00632</span>))</span><br><span class="line"><span class="built_in">print</span>((<span class="number">0.02731</span>-<span class="number">0.00632</span>)/(<span class="number">88.9762</span>-<span class="number">0.00632</span>))</span><br><span class="line"><span class="built_in">print</span>((<span class="number">0.02729</span>-<span class="number">0.00632</span>)/(<span class="number">88.9762</span>-<span class="number">0.00632</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="comment"># 0.0</span></span><br><span class="line"><span class="comment"># 0.00023592253917842758</span></span><br><span class="line"><span class="comment"># 0.00023569774400055386</span></span><br></pre></td></tr></table></figure><h4 id="polynomialfeatures">PolynomialFeatures()</h4><p>再对波士顿数据进行归一化后，需要将13个特征两两相乘，添加更多的特征，需要用到多项式进行特征构造，即使用PolynomialFeatures</p><p><ahref="https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.PolynomialFeatures.html">PolynomialFeatures官方文档</a></p><p>使用 sklearn.preprocessing.PolynomialFeatures这个类可以进行特征的构造，构造的方式就是特征与特征相乘（自己与自己，自己与其他人），这种方式叫做使用多项式的方式。例如：有a、b 两个特征，那么它的 2 次多项式的次数为 <spanclass="math inline">\([1,a,b,a^{2},ab,b^{2}]\)</span><sup id="fnref:4"><a href="#fn:4" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[sklearn 的 PolynomialFeatures 的用法](https://www.cnblogs.com/liweiwei1419/p/9715702.html)">[4]</span></a></sup>。</p><p>PolynomialFeatures 这个类有 3 个参数：</p><ul><li><code>degree</code>：控制多项式的次数；</li><li><code>interaction_only</code>：默认为 False，如果指定为True，那么就不会有特征自己和自己结合的项，组合的特征中没有 <spanclass="math inline">\(a^2\)</span> 和 <spanclass="math inline">\(b^2\)</span> ；</li><li><code>include_bias</code>：默认为 True 。如果为 True的话，那么结果中就会有 0 次幂项，即全为 1 这一列。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span>  PolynomialFeatures</span><br><span class="line"></span><br><span class="line">x = np.array([[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>]])</span><br><span class="line">poly = PolynomialFeatures(degree=<span class="number">2</span>, include_bias=<span class="literal">False</span>) <span class="comment"># 实例化，指定2次多项式，去除0次幂项</span></span><br><span class="line">x_d = poly.fit_transform(x)  <span class="comment"># 导出特征构造的结果</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;特征构造前：\n&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(x))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;特征构造后：\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(x_d))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out：</span></span><br><span class="line"><span class="comment"># 特征构造前：</span></span><br><span class="line"><span class="comment"># [[2 3]</span></span><br><span class="line"><span class="comment">#  [4 5]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 特征构造后：</span></span><br><span class="line"><span class="comment"># [[ 2.  3.  4.  6.  9.]</span></span><br><span class="line"><span class="comment">#  [ 4.  5. 16. 20. 25.]]</span></span><br></pre></td></tr></table></figure><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://hg95.github.io/sklearn-notes/Chapter3/preprocessing.MinMaxScaler%E7%94%A8%E6%B3%95.html">preprocessing.MinMaxScaler用法</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/FrankieHello/article/details/79659111">使用sklearn进行对数据标准化、归一化以及将数据还原</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li><li id="fn:3"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/blogshinelee/article/details/102875044">为什么要做特征归一化/标准化？</a><a href="#fnref:3" rev="footnote">↩︎</a></span></li><li id="fn:4"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.cnblogs.com/liweiwei1419/p/9715702.html">sklearn的 PolynomialFeatures 的用法</a><a href="#fnref:4" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;需求&quot;&gt;需求&lt;/h3&gt;
&lt;p&gt;波士顿房价数据集在scikit-learn1.2版本以后被移除了。
目前自己用的刚好是1.2版本，但是需要复现书中的一些代码（Python机器学习基础教程），所以需要从其他途径获取波士顿房价数据集，主要是获得data(506,
104)和相关的target。&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
    <category term="专业书笔记" scheme="https://www.sdhlw.top/tags/%E4%B8%93%E4%B8%9A%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Machine Learning" scheme="https://www.sdhlw.top/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>Numpy不用省略号和科学计数法</title>
    <link href="https://www.sdhlw.top/numpy%E4%B8%8D%E7%94%A8%E7%9C%81%E7%95%A5%E5%8F%B7%E5%92%8C%E7%A7%91%E5%AD%A6%E8%AE%A1%E6%95%B0%E6%B3%95/"/>
    <id>https://www.sdhlw.top/numpy%E4%B8%8D%E7%94%A8%E7%9C%81%E7%95%A5%E5%8F%B7%E5%92%8C%E7%A7%91%E5%AD%A6%E8%AE%A1%E6%95%B0%E6%B3%95/</id>
    <published>2023-02-07T06:33:00.000Z</published>
    <updated>2023-02-07T06:35:22.979Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">np.set_printoptions(threshold = np.inf) <span class="comment"># 不使用省略号表示</span></span><br><span class="line">np.set_printoptions(suppress = <span class="literal">True</span>) <span class="comment"># 不使用科学计数显示</span></span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;np.set_printoptions(threshold = np.inf) &lt;span class=&quot;comment&quot;&gt;# 不使用省略号表示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;np.set_printoptions(suppress = &lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;# 不使用科学计数显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
    <category term="Numpy" scheme="https://www.sdhlw.top/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>Vscode &amp; Jupyter-Notebook：Output exceeds the size limit</title>
    <link href="https://www.sdhlw.top/vscode-jupyter-notebook%EF%BC%9Aoutput-exceeds-the-size-limit/"/>
    <id>https://www.sdhlw.top/vscode-jupyter-notebook%EF%BC%9Aoutput-exceeds-the-size-limit/</id>
    <published>2023-02-05T16:48:05.000Z</published>
    <updated>2023-02-07T07:10:20.530Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Output exceeds the size limit. Open the full output data in a texteditor</p><p>每次报错信息过多就要用文本编辑器打开，可是打开之后都是没编译的，乱码看起来很难受。</p><span id="more"></span><p>参考了这篇<ahref="https://stackoverflow.com/questions/72823258/vscode-interactive-python-output-exceeds-size-limit">回答</a>，找到以下解决方案，我修改为1000：</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302060049102.png" /></p><p>修改之后，重启Vscode即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Output exceeds the size limit. Open the full output data in a text
editor&lt;/p&gt;
&lt;p&gt;每次报错信息过多就要用文本编辑器打开，可是打开之后都是没编译的，乱码看起来很难受。&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Vscode" scheme="https://www.sdhlw.top/tags/vscode/"/>
    
    <category term="Jupyter Notebook" scheme="https://www.sdhlw.top/tags/jupyter-notebook/"/>
    
  </entry>
  
  <entry>
    <title>Vscode的Jupyter的change presentation</title>
    <link href="https://www.sdhlw.top/vscode%E7%9A%84jupyter%E7%9A%84change-presentation/"/>
    <id>https://www.sdhlw.top/vscode%E7%9A%84jupyter%E7%9A%84change-presentation/</id>
    <published>2023-02-05T16:41:09.000Z</published>
    <updated>2023-02-05T16:43:13.845Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>需求：每次使用绘图，都是需要手动切换Change presentations来看到绘图结果，想要把image设置为默认显示，而不是txt。</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302041247820.png" /></p><span id="more"></span><p>解决方法<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Change mimetype for VSC Jupyter Notebook ouput](https://stackoverflow.com/questions/68555264/change-mimetype-for-vsc-jupyter-notebook-ouput)">[1]</span></a></sup>：</p><p>1、打开 <code>settings.json</code> 文件</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302041247208.png" /></p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302041247352.png" /></p><p>2、搜索notebook，找到notebook设置部分，加入这句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;notebook.displayOrder&quot;: [&quot;image/png&quot;, &quot;text/plain&quot;]</span><br></pre></td></tr></table></figure><p>如果已经存在该句，把 <code>"image/png"</code>放在前面；放进去注意格式，放在中间记得末尾加逗号，放在最后，前面一句记得加逗号；</p><p>我的设置：</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302041247432.png" /></p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://stackoverflow.com/questions/68555264/change-mimetype-for-vsc-jupyter-notebook-ouput">Changemimetype for VSC Jupyter Notebookouput</a><a href="#fnref:1" rev="footnote"> ↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;需求：每次使用绘图，都是需要手动切换Change presentations
来看到绘图结果，想要把image设置为默认显示，而不是txt。&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302041247820.png&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Vscode" scheme="https://www.sdhlw.top/tags/vscode/"/>
    
    <category term="Jupyter Notebook" scheme="https://www.sdhlw.top/tags/jupyter-notebook/"/>
    
  </entry>
  
  <entry>
    <title>pip下载太慢</title>
    <link href="https://www.sdhlw.top/pip%E4%B8%8B%E8%BD%BD%E5%A4%AA%E6%85%A2/"/>
    <id>https://www.sdhlw.top/pip%E4%B8%8B%E8%BD%BD%E5%A4%AA%E6%85%A2/</id>
    <published>2023-02-02T12:33:24.000Z</published>
    <updated>2023-02-07T15:04:44.353Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="临时换源">临时换源：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>清华：<code>https://pypi.tuna.tsinghua.edu.cn/simple</code>中科大：<code>https://mirrors.bfsu.edu.cn/pypi/web/simple/</code>阿里云：<code>https://mirrors.aliyun.com/pypi/simple/</code>豆瓣：<code>http://pypi.doubanio.com/simple/</code></p><span id="more"></span><h4id="永久换源1">永久换源<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[pip换源 -pip更换国内镜像源](https://blog.csdn.net/xuezhangjun0121/article/details/81664260)">[1]</span></a></sup>：</h4><p>linux： 修改 ~/.pip/pip.conf (没有就创建一个)， 内容如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></p><p>windows:直接在user目录中创建一个pip目录，如：<code>C:\Users\xx\pip</code>，新建文件pip.ini，内容如下<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></p><h4 id="参考文章">参考文章</h4><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/xuezhangjun0121/article/details/81664260">pip换源-pip更换国内镜像源</a><a href="#fnref:1" rev="footnote"> ↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;临时换源&quot;&gt;临时换源：&lt;/h4&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install django -i https://pypi.tuna.tsinghua.edu.cn/simple&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;清华：&lt;code&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code&gt;
中科大：&lt;code&gt;https://mirrors.bfsu.edu.cn/pypi/web/simple/&lt;/code&gt;
阿里云：&lt;code&gt;https://mirrors.aliyun.com/pypi/simple/&lt;/code&gt;
豆瓣：&lt;code&gt;http://pypi.doubanio.com/simple/&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python机器学习基础教程【第一章】</title>
    <link href="https://www.sdhlw.top/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E3%80%90%E7%AC%AC%E4%B8%80%E7%AB%A0%E3%80%91/"/>
    <id>https://www.sdhlw.top/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E3%80%90%E7%AC%AC%E4%B8%80%E7%AB%A0%E3%80%91/</id>
    <published>2023-02-02T09:43:19.000Z</published>
    <updated>2023-02-02T12:10:38.427Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>本书的附加代码可以在 GitHub 下载：<ahref="https://github.com/amueller/introduction_to_ml_with_python">introductionto ml with python</a></p><p>监督学习算法（supervised learning algorithm）无监督学习算法（unsupervised learning algorithm）</p><p>在机器学习中，这里的每个实体或每一行被称为一个样本（sample）或数据点，而每一列（用来描述这些实体的属性）则被称为特征（feature）。</p><p>如何构建良好的数据表征，这被称为特征提取（featureextraction）或特征工程（feature engineering）</p><p><strong>scikit-learn</strong> 依赖于另外两个 Python 包：NumPy（Python 科学计算的基础包之一）和 SciPy（ Python中用于科学计算的函数集合）。 算法详细文档：<ahref="https://scikit-learn.org/stable/index.html"class="uri">https://scikit-learn.org/stable/index.html</a> 用户指南：<ahref="http://scikit-learn.org/stable/user_guide.html"class="uri">http://scikit-learn.org/stable/user_guide.html</a></p><span id="more"></span><p>若想绘图和进行交互式开发，还应该安装 matplotlib（Python主要的科学绘图库）、IPython 和 JupyterNotebook（在浏览器中运行代码的交互环境）。</p><p><strong>pandas</strong> 是用于处理和分析数据的 Python库。它基于一种叫作 DataFrame 的数据结构，这种数据结构模仿了 R 语言中的DataFrame。</p><p><strong>mglearn</strong>库是我们为本书编写的实用函数库，以免将代码清单与绘图和数据加载的细节混在一起。</p><h4 id="第一个应用">第一个应用</h4><h5 id="了解数据">1、了解数据</h5><p>in：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line">iris_dataset = load_iris()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Keys of iris_dataset: \n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(iris_dataset.keys()))</span><br></pre></td></tr></table></figure><p>out：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Keys of iris_dataset: dict_keys([<span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;target&#x27;</span>, <span class="string">&#x27;frame&#x27;</span>, <span class="string">&#x27;target_names&#x27;</span>, <span class="string">&#x27;DESCR&#x27;</span>, <span class="string">&#x27;feature_names&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>, <span class="string">&#x27;data_module&#x27;</span>])</span><br></pre></td></tr></table></figure><ul><li>DESCR 键对应的值是数据集的简要说明</li><li>target_names键对应的值是一个字符串数组，里面包含我们要预测的花的品种</li><li>feature_names键对应的值是一个字符串列表，对每一个特征进行了说明</li><li>data 里面是花萼长度、花萼宽度、花瓣长度、花瓣宽度的测量数据，格式为NumPy 数组,data数组的每一行对应一朵花，列代表每朵花的四个测量数据，数组中包含 150朵不同的花的测量数据。</li><li>target 是一维数组，每朵花对应其中一个数据，0 代表 setosa，1 代表versicolor，2 代表 virginica</li></ul><h5 id="划分训练集和测试集">2、划分训练集和测试集</h5><p>机器学习中的个体叫作样本（sample），其属性叫作特征（feature）。data数组的形状（shape）是样本数乘以特征数。</p><p>一部分数据用于构建机器学习模型，叫作训练数据（training data）或训练集（training set）。其余的数据用来评估模型性能，叫作测试数据（testdata）、测试集（test set）或留出集（hold-out set）。</p><p><strong>train_test_split</strong> 函数可以打乱数据集并进行拆分。</p><p>scikit-learn 中的数据通常用大写的 X 表示，而标签用小写的 y 表示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 划分训练集和测试集</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(iris_dataset[<span class="string">&#x27;data&#x27;</span>], iris_dataset[<span class="string">&#x27;target&#x27;</span>], random_state=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302021528408.png" /></p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302021528467.png" /></p><ul><li>random_state参数指定了随机数生成器的种子，保证这行代码的输出始终相同；</li></ul><h5 id="观察数据">3、观察数据</h5><p>如果不用机器学习能不能轻松完成任务，或者需要的信息有没有包含在数据中？检查数据也是发现异常值和特殊值的好方法。</p><p>检查数据的最佳方法之一就是将其可视化。</p><p>一种可视化方法是绘制<strong>散点图（scatterplot）</strong>，用这种方法难以对多于 3 个特征的数据集作图。</p><p>解决这个问题的一种方法是绘制<strong>散点图矩阵（pairplot）</strong>，从而可以两两查看所有的特征。散点图矩阵无法同时显示所有特征之间的关系，所以这种可视化方法可能无法展示数据的某些有趣内容。</p><p>训练集中特征的散点图矩阵：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用X_train中的数据创建DataFrame</span></span><br><span class="line"><span class="comment"># 利用iris_dataset.feature_names中的字符串对数据列进行标记</span></span><br><span class="line">iris_dataframe = pd.DataFrame(X_train, columns=iris_dataset.feature_names)</span><br><span class="line"><span class="comment"># 利用DataFrame创建散点图矩阵，按y_train着色</span></span><br><span class="line">grr = pd.scatter_matrix(iris_dataframe, c=y_train, figsize=(<span class="number">15</span>, <span class="number">15</span>), marker=<span class="string">&#x27;o&#x27;</span>,</span><br><span class="line"> hist_kwds=&#123;<span class="string">&#x27;bins&#x27;</span>: <span class="number">20</span>&#125;, s=<span class="number">60</span>, alpha=<span class="number">.8</span>)</span><br></pre></td></tr></table></figure><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302021528536.png" /></p><p>绘制散点图矩阵函数： pandas的scatter_matrix。版本较新换成：pd.plotting.scatter_matrix</p><p><code>pandas.DataFrame( data, index, columns, dtype, copy)</code></p><ul><li>data：一组数据(ndarray、series, map, lists, dict等类型)<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Pandas 数据结构 - DataFrame](https://www.runoob.com/pandas/pandas-dataframe.html)">[1]</span></a></sup>。</li><li>index：索引值，或者可以称为行标签。</li><li>columns：列标签，默认为 RangeIndex (0, 1, 2, …, n) 。</li><li>dtype：数据类型。</li><li>copy：拷贝数据，默认为 False。</li></ul><p><code>scatter_matrix(frame, alpha=0.5, c,figsize=None, ax=None, diagonal='hist', marker='.', density_kwds=None,hist_kwds=None, range_padding=0.05, **kwds)</code></p><ul><li>frame，pandasdataframe对象<sup id="fnref:3"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[pandas库scatter_matrix绘图可视化参数详解](https://blog.csdn.net/wangxingfan316/article/details/80033557)">[3]</span></a></sup></li><li>alpha， 图像透明度，一般取(0,1]</li><li>figsize，以英寸为单位的图像大小，一般以元组 (width, height)形式设置</li><li>ax，可选一般为none</li><li>diagonal，必须且只能在{‘hist’,‘kde’}中选择1个，’hist’表示直方图(Histogramplot),’kde’表示核密度估计(Kernel DensityEstimation)；该参数是scatter_matrix函数的关键参数</li><li>marker。Matplotlib可用的标记类型，如’.’，’,’，’o’等<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[绘图的线型、颜色、标记](https://www.sdhlw.top/%E7%BB%98%E5%9B%BE%E7%9A%84%E7%BA%BF%E5%9E%8B%E3%80%81%E9%A2%9C%E8%89%B2%E3%80%81%E6%A0%87%E8%AE%B0/)">[2]</span></a></sup></li><li>density_kwds。(other plotting keywordarguments，可选)，与kde相关的字典参数</li><li>hist_kwds。与hist相关的字典参数</li><li>range_padding。(float,可选)，图像在x轴、y轴原点附近的留白(padding)，该值越大，留白距离越大，图像远离坐标原点</li><li>kwds。与scatter_matrix函数本身相关的字典参数</li><li>c。颜色</li></ul><h5 id="构建模型k近邻算法">4、构建模型：k近邻算法</h5><p>k近邻分类器算法对一个新的数据点做出预测，算法会在训练集中寻找与这个新数据点距离最近的数据点，然后将找到的数据点的标签赋值给这个新数据点。</p><p>k 近邻算法中 k 的含义是，我们可以考虑训练集中与新数据点最近的任意 k个邻居（比如说，距离最近的 3 个或 5个邻居），而不是只考虑最近的那一个。然后，我们可以用这些邻居中数量最多的类别做出预测。</p><p>scikit-learn 中所有的机器学习模型都在各自的类中实现，这些类被称为Estimator类。k 近邻分类算法是在 neighbors 模块的KNeighborsClassifier类中实现的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line">knn = KNeighborsClassifier(n_neighbors=<span class="number">1</span>)  <span class="comment"># 实例化</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 基于训练集来构建模型</span></span><br><span class="line">knn.fit(X_train, y_train)</span><br></pre></td></tr></table></figure><p>fit 方法返回的是 knn对象本身并做原处修改，因此我们得到了分类器的字符串表示。</p><h5 id="预测">5、预测</h5><p>in：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X_new = np.array([[<span class="number">5</span>, <span class="number">2.9</span>, <span class="number">1</span>, <span class="number">0.2</span>]])</span><br><span class="line">prediction = knn.predict(X_new)   </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Prediction: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(prediction))</span><br></pre></td></tr></table></figure><p>out：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Prediction: [0]</span><br></pre></td></tr></table></figure><p>们模型的预测，这朵新的鸢尾花属于类别 0，也就是说它属于 setosa品种。</p><h5 id="评估模型">6、评估模型</h5><p>计算精度（accuracy）来衡量模型的优劣，精度就是品种预测正确的花所占的比例。</p><p>in：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Test set score: &#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(np.mean(y_pred == y_test)))</span><br></pre></td></tr></table></figure><p>out：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Test set score: 0.97</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Test set score: &#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(knn.score(X_test, y_test))) </span><br><span class="line"><span class="comment"># knn 对象的 score 方法来计算测试集的精度,结果是一致的</span></span><br></pre></td></tr></table></figure><p>对于测试集中的鸢尾花，我们的预测有 97%是正确的。根据一些数学假设，对于新的鸢尾花，可以认为我们的模型预测结果有97% 都是正确的。</p><h5 id="总结">7、总结</h5><p>首先有150行样本，4列特征的鸢尾花（Iris）数据集。</p><p>鸢尾花（Iris）一共有三个品种：setosa、versicolor 或virginica，因此这是一个三分类问题。在分类问题中，可能的品种被称为类别（class），每朵花的品种被称为它的标签（label）。</p><ul><li>划分训练集和测试集（train_test_split 函数）</li><li>构建模型：k近邻算法（knn.fit 函数）</li><li>预测测试集（knn.predict 函数）</li><li>计算精度（knn.score 函数）</li></ul><h4 id="问题解决">问题解决</h4><h5 id="name-null-is-not-defined">name 'null' is not defined</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;d:\MyData\**\book-Python����ѧϰ�����̳�.ipynb&quot;, line 23, in &lt;module&gt;</span><br><span class="line">    &quot;execution_count&quot;: null,</span><br><span class="line">NameError: name &#x27;null&#x27; is not defined</span><br><span class="line"></span><br><span class="line">[Done] exited with code=1 in 0.198 seconds</span><br></pre></td></tr></table></figure><p>重装Vscode中的jupyter插件</p><h5 id="mglearn如何导入本地">mglearn如何导入本地</h5><p>1、下载包：<ahref="https://github.com/amueller/introduction_to_ml_with_python"class="uri">https://github.com/amueller/introduction_to_ml_with_python</a></p><p>2、查看包的存放位置 cell中输入：<code>%pip show pandas</code>,运行，查看包的位置（<code>c:\users\用户名\appdata\local\programs\python\python310\lib\site-packages</code>）</p><p>3、把mglearn文件夹放到包的存放位置（<code>c:\users\用户名\appdata\local\programs\python\python310\lib\site-packages</code>）</p><p>mylearn一些函数过时了，无法导入 ： <imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202302/202302021528610.png" /></p><p>mylearn主要是用于美化的，所以在此先忽略掉</p><h4 id="参考文章">参考文章</h4><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.runoob.com/pandas/pandas-dataframe.html">Pandas数据结构 - DataFrame</a><a href="#fnref:1" rev="footnote"> ↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.sdhlw.top/%E7%BB%98%E5%9B%BE%E7%9A%84%E7%BA%BF%E5%9E%8B%E3%80%81%E9%A2%9C%E8%89%B2%E3%80%81%E6%A0%87%E8%AE%B0/">绘图的线型、颜色、标记</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li><li id="fn:3"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/wangxingfan316/article/details/80033557">pandas库scatter_matrix绘图可视化参数详解</a><a href="#fnref:3" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;本书的附加代码可以在 GitHub 下载：&lt;a
href=&quot;https://github.com/amueller/introduction_to_ml_with_python&quot;&gt;introduction
to ml with python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;监督学习算法（supervised learning algorithm）
无监督学习算法（unsupervised learning algorithm）&lt;/p&gt;
&lt;p&gt;在机器学习中，这里的每个实体或每一行被称为一个样本（sample）或数据点，而每一列（用来描述这些实体的属性）则被称为特征（feature）。&lt;/p&gt;
&lt;p&gt;如何构建良好的数据表征，这被称为特征提取（feature
extraction）或特征工程（feature engineering）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;scikit-learn&lt;/strong&gt; 依赖于另外两个 Python 包：NumPy
（Python 科学计算的基础包之一）和 SciPy（ Python
中用于科学计算的函数集合）。 算法详细文档：&lt;a
href=&quot;https://scikit-learn.org/stable/index.html&quot;
class=&quot;uri&quot;&gt;https://scikit-learn.org/stable/index.html&lt;/a&gt; 用户指南：&lt;a
href=&quot;http://scikit-learn.org/stable/user_guide.html&quot;
class=&quot;uri&quot;&gt;http://scikit-learn.org/stable/user_guide.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Python" scheme="https://www.sdhlw.top/tags/python/"/>
    
    <category term="专业书笔记" scheme="https://www.sdhlw.top/tags/%E4%B8%93%E4%B8%9A%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Machine Learning" scheme="https://www.sdhlw.top/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>Hexo代码块折叠功能</title>
    <link href="https://www.sdhlw.top/hexo%E4%BB%A3%E7%A0%81%E5%9D%97%E6%8A%98%E5%8F%A0%E5%8A%9F%E8%83%BD/"/>
    <id>https://www.sdhlw.top/hexo%E4%BB%A3%E7%A0%81%E5%9D%97%E6%8A%98%E5%8F%A0%E5%8A%9F%E8%83%BD/</id>
    <published>2023-01-25T14:35:42.000Z</published>
    <updated>2023-02-07T09:42:35.456Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="说明">说明</h3><p>实现同样的效果：</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237971.gif" /></p><p>本博客环境：<code>hexo@6.2.0</code>，<code>next@7.8.0</code>，以下所有代码，建立在这个基础之上。</p><p>由 jQuery选择器选择代码模块<code>.highlight</code>相关的DOM节点，给超过某个高度的代码模块添加展开收起的盒子，让盒子实现展开隐藏效果。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[hexo博客代码折叠功能](https://www.toimc.com/hexo-usage-2/)">[1]</span></a></sup></p><p><code>hexo version</code>即可查看hexo版本；</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237479.png" /></p><p>查看<code>theme/next/package.json</code>即可查看next版本；</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237584.png" /></p><span id="more"></span><h3 id="添加-code-unfold.js">1、添加 code-unfold.js</h3><p>把<code>code-unfold.js</code>放置在了<code>themes/next/source/js/code-unfold.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">var CODE_MAX_HEIGHT = 200;</span><br><span class="line">var containers = [];</span><br><span class="line"></span><br><span class="line">// 展开</span><br><span class="line">$(&#x27;body&#x27;).on(&#x27;click&#x27;, &#x27;.js_unfold_code_btn&#x27;, function () &#123;</span><br><span class="line">  $(this).closest(&#x27;.js_highlight_container&#x27;).addClass(&#x27;on&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">// 收起</span><br><span class="line">$(&#x27;body&#x27;).on(&#x27;click&#x27;, &#x27;.js_retract_code_btn&#x27;, function () &#123;</span><br><span class="line">  var $container = $(this).closest(&#x27;.js_highlight_container&#x27;).removeClass(&#x27;on&#x27;);</span><br><span class="line">  var winTop = $(window).scrollTop();</span><br><span class="line">  var offsetTop = $container.offset().top;</span><br><span class="line">  $(this).css(&#x27;top&#x27;, 0);</span><br><span class="line">  if (winTop &gt; offsetTop) &#123;</span><br><span class="line">    // 设置滚动条位置</span><br><span class="line">    $(&#x27;body, html&#x27;).animate(&#123;</span><br><span class="line">      scrollTop: $container.offset().top - CODE_MAX_HEIGHT</span><br><span class="line">    &#125;, 600);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">// 滚动事件，触发动画效果</span><br><span class="line">$(window).on(&#x27;scroll&#x27;, function () &#123;</span><br><span class="line">  var scrollTop = $(window).scrollTop();</span><br><span class="line">  var temp = [];</span><br><span class="line">  for (let i = 0; i &lt; containers.length; i++) &#123;</span><br><span class="line">    var item = containers[i];</span><br><span class="line">    var &#123; $container, height, $hide, hasHorizontalScrollbar &#125; = item;</span><br><span class="line">    if ($container.closest(&#x27;body&#x27;).length === 0) &#123;</span><br><span class="line">      // 如果 $container 元素已经不在页面上, 则删除该元素</span><br><span class="line">      // 防止pjax页面跳转之后，元素未删除</span><br><span class="line">      continue;</span><br><span class="line">    &#125;</span><br><span class="line">    temp.push(item);</span><br><span class="line">    if (!$container.hasClass(&#x27;on&#x27;)) &#123;</span><br><span class="line">      continue;</span><br><span class="line">    &#125;</span><br><span class="line">    var offsetTop = $container.offset().top;</span><br><span class="line">    var hideBtnHeight = $hide.outerHeight();</span><br><span class="line">    // 减去按钮高度，减去底部滚动条高度</span><br><span class="line">    var maxTop = parseInt(height - (hasHorizontalScrollbar ? 17 : 0) - hideBtnHeight);</span><br><span class="line">    let top = parseInt(</span><br><span class="line">      Math.min(</span><br><span class="line">        Math.max(scrollTop - offsetTop, 0), // 如果小于 0 ，则取 0</span><br><span class="line">        maxTop,// 如果大于 height ，则取 height</span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">    // 根据 sin 曲线设置&quot;收起代码&quot;位置</span><br><span class="line">    var halfHeight = parseInt($(window).height() / 2 * Math.sin((top / maxTop) * 90 * (2 * Math.PI/360)));</span><br><span class="line">    $hide.css(&#x27;top&#x27;, Math.min(top + halfHeight, maxTop));</span><br><span class="line">  &#125;</span><br><span class="line">  containers = temp;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 添加隐藏容器</span><br><span class="line">function addCodeWrap($node) &#123;</span><br><span class="line">  var $container = $node.wrap(&#x27;&lt;div class=&quot;js_highlight_container highlight-container&quot;&gt;&lt;div class=&quot;highlight-wrap&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;).closest(&#x27;.js_highlight_container&#x27;);</span><br><span class="line"></span><br><span class="line">  // 底部 &quot;展开代码&quot; 与 侧边栏 &quot;收起代码&quot;</span><br><span class="line">  var $btn = $(`</span><br><span class="line">    &lt;div class=&quot;highlight-footer&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;js_unfold_code_btn show-btn&quot; href=&quot;javascript:;&quot;&gt;展开代码&lt;i class=&quot;fa fa-angle-down&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;a class=&quot;js_retract_code_btn hide-btn&quot; href=&quot;javascript:;&quot;&gt;&lt;i class=&quot;fa fa-angle-up&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;收起代码&lt;/a&gt;</span><br><span class="line">  `);</span><br><span class="line"></span><br><span class="line">  $container.append($btn);</span><br><span class="line">  return $container;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function codeUnfold () &#123;</span><br><span class="line">  $(&#x27;.highlight&#x27;).each(function () &#123;</span><br><span class="line">    // 防止重复渲染</span><br><span class="line">    if (this.__render__ === true) &#123;</span><br><span class="line">      return true;</span><br><span class="line">    &#125;</span><br><span class="line">    this.__render__ = true;</span><br><span class="line">    var $this = $(this);</span><br><span class="line">    var height = $(this).outerHeight();</span><br><span class="line">    if (height &gt; CODE_MAX_HEIGHT) &#123;</span><br><span class="line">      // 添加展开&amp;收起容器</span><br><span class="line">      var $container = addCodeWrap($this, height);</span><br><span class="line">      containers.push(&#123;</span><br><span class="line">        $container,</span><br><span class="line">        height,</span><br><span class="line">        $hide: $container.find(&#x27;.js_retract_code_btn&#x27;),</span><br><span class="line">        hasHorizontalScrollbar: this.scrollWidth &gt; this.offsetWidth,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="添加-jquery">2、添加 jquery</h3><p>修改next主题配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fancybox: true  </span><br></pre></td></tr></table></figure><p>因为<code>fancybox</code>会依赖<code>jquery</code>，所以设置成<code>true</code>；</p><h3 id="引用-code-unfold.js">3、引用 code-unfold.js</h3><p>修改文件<code>themes/next/layout/_scripts/index.njk</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 在最后添加  </span><br><span class="line">&#123;&#123;- next_js(&#x27;code-unfold.js&#x27;) &#125;&#125;  </span><br></pre></td></tr></table></figure><p>next8.0的模板是使用njk，旧版是使用swig<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[Hexo-5.x 与 NexT-8.x 跨版本升级](https://www.imczw.com/post/tech/hexo5-next8-updated.html#more)">[2]</span></a></sup>；我的next是7.8版本，没有 <code>index.njk</code>文件只有 <code>index.swig</code>文件；查看了njk文件感觉和添加进去的代码格式似乎没有差别，尝试将以上代码添加到<code>index.swig</code> 文件中；</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237664.png" /></p><p>下面找到文件<code>themes/next/source/js/next-boot.js</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NexT.boot.refresh = function () &#123;  </span><br><span class="line">  // 添加一行代码  </span><br><span class="line">  codeUnfold()  </span><br><span class="line">    </span><br><span class="line">  // ...</span><br></pre></td></tr></table></figure><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237750.png" /></p><h3 id="添加样式">4、添加样式</h3><p>1、创建 <code>highlight.styl</code>可以添加<code>theme/next/source/css/_common/components/highlight.styl</code>文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">// 展开收起效果</span><br><span class="line">.highlight-container</span><br><span class="line">  position: relative</span><br><span class="line">  background-color: highlight-background</span><br><span class="line">  &amp;.on</span><br><span class="line">    .highlight-footer</span><br><span class="line">      display: none</span><br><span class="line">    .hide-btn</span><br><span class="line">      display: flex</span><br><span class="line">    .highlight-wrap</span><br><span class="line">      max-height: none</span><br><span class="line">  .highlight-wrap</span><br><span class="line">    overflow: hidden</span><br><span class="line">    max-height: 200px</span><br><span class="line">  .highlight-footer</span><br><span class="line">    position absolute</span><br><span class="line">    width: 100%</span><br><span class="line">    left: 0</span><br><span class="line">    bottom: 0</span><br><span class="line">    height: 60px</span><br><span class="line">    background-image: &#x27;linear-gradient(-180deg, rgba(255,255,255,0) 0%, %s 65%)&#x27; % highlight-background;</span><br><span class="line">    text-align: center</span><br><span class="line">  .show-btn</span><br><span class="line">    font-size: 12px</span><br><span class="line">    color: #fff</span><br><span class="line">    position: absolute</span><br><span class="line">    left: 50%</span><br><span class="line">    transform: translateX(-50%)</span><br><span class="line">    bottom: 0</span><br><span class="line">    line-height: 2em</span><br><span class="line">    text-decoration: none</span><br><span class="line">    padding: 0 0.8em</span><br><span class="line">    text-align: center</span><br><span class="line">    border-radius: 4px 4px 0</span><br><span class="line">    &amp;:hover</span><br><span class="line">      text-decoration: none</span><br><span class="line">  .hide-btn</span><br><span class="line">    color: #fff</span><br><span class="line">    font-size: 12px</span><br><span class="line">    width: 22px</span><br><span class="line">    position: absolute</span><br><span class="line">    left: -21px</span><br><span class="line">    top: 0</span><br><span class="line">    line-height: 1em</span><br><span class="line">    text-decoration: none</span><br><span class="line">    text-align: center</span><br><span class="line">    display: none</span><br><span class="line">    flex-direction: column</span><br><span class="line">    background-color: highlight-background</span><br><span class="line">    border-radius: 4px 0 0 4px</span><br><span class="line">    padding: 0.1em 0 0.6em</span><br><span class="line">    transition: top ease 0.35s</span><br><span class="line">  .fa-angle-up,</span><br><span class="line">  .fa-angle-down</span><br><span class="line">    font-style: normal</span><br><span class="line">    color: #fff</span><br><span class="line">  .fa-angle-up:before</span><br><span class="line">    content:&quot;\f106&quot;</span><br><span class="line">  .fa-angle-down:before</span><br><span class="line">    content:&quot;\f107&quot;</span><br><span class="line">    margin-left: 0.5em</span><br><span class="line">  .js_unfold_code_btn, .js_retract_code_btn</span><br><span class="line">    background: rgba(0,0,0,0.5)</span><br><span class="line">    border-bottom: none !important</span><br><span class="line">    &amp;:hover</span><br><span class="line">      border-bottom-color: none !important</span><br></pre></td></tr></table></figure><p>2、引用样式 找到文件<code>themes/next/source/css/_common/components/index.styl</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@import &#x27;post&#x27;;</span><br><span class="line">@import &#x27;pages&#x27;;</span><br><span class="line">@import &#x27;third-party&#x27;;</span><br><span class="line">// 添加这一行，不要加分号！！</span><br><span class="line">@import &#x27;highlight&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该目录下（<code>themes/next/source/css/_common/components/</code>）没找到<code>index.styl</code> ，尝试将 <code>@import 'highlight'</code> 添加到<code>components.styl</code> ，看是否可行；</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237863.png" /></p><p>实现了想要的效果，做的修改是可行的！</p><h3 id="参考文章">参考文章</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.toimc.com/hexo-usage-2/">hexo博客代码折叠功能</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.imczw.com/post/tech/hexo5-next8-updated.html#more">Hexo-5.x与 NexT-8.x 跨版本升级</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;说明&quot;&gt;说明&lt;/h3&gt;
&lt;p&gt;实现同样的效果：&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237971.gif&quot; /&gt;&lt;/p&gt;
&lt;p&gt;本博客环境：&lt;code&gt;hexo@6.2.0&lt;/code&gt;，&lt;code&gt;next@7.8.0&lt;/code&gt;，以下所有代码，建立在这个基础之上。&lt;/p&gt;
&lt;p&gt;由 jQuery
选择器选择代码模块&lt;code&gt;.highlight&lt;/code&gt;相关的DOM节点，给超过某个高度的代码模块添加展开收起的盒子，让盒子实现展开隐藏效果。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[hexo博客代码折叠功能](https://www.toimc.com/hexo-usage-2/)&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hexo version&lt;/code&gt;即可查看hexo版本；&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237479.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;查看&lt;code&gt;theme/next/package.json&lt;/code&gt;即可查看next版本；&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301252237584.png&quot; /&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="Hexo" scheme="https://www.sdhlw.top/tags/hexo/"/>
    
    <category term="So" scheme="https://www.sdhlw.top/tags/so/"/>
    
  </entry>
  
  <entry>
    <title>NPM---Node 包管理器</title>
    <link href="https://www.sdhlw.top/npm-node-%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <id>https://www.sdhlw.top/npm-node-%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</id>
    <published>2023-01-22T16:02:55.000Z</published>
    <updated>2023-01-22T16:19:45.391Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>npm（“Node 包管理器”）是 JavaScript 运行时 Node.js的默认程序包管理器。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[什么是 npm —— 写给初学者的编程教程](https://www.freecodecamp.org/chinese/news/what-is-npm-a-node-package-manager-tutorial-for-beginners/)">[1]</span></a></sup></p><p>npm 由两个主要部分组成：</p><ul><li><p>用于发布和下载程序包的 CLI（命令行界面）工具</p></li><li><p>托管 JavaScript 程序包的 在线存储库<span id="more"></span></p></li></ul><p>为了更直观地解释，我们可以将存储库 npmjs.com视为一个物流集散中心，该中心从卖方（npm包裹的作者）那里接收货物的包裹，并将这些货物分发给买方（npm包裹的用户）。</p><p>为了促进此过程，npmjs.com 物流集散中心雇用了一群勤劳的袋熊（npmCLI），他们将被分配给每个 npmjs.com 用户作为私人助理。因此，dependencies（依赖项）会如下传递给 JavaScript 开发人员：</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301222349448.png" /></p><p>发布 JS 软件包的过程如下：</p><p><imgsrc="https://my-picture-1316590908.cos.ap-chongqing.myqcloud.com/img202301/202301222349502.png" /></p><h4 id="package.json">package.json</h4><p>每个 JavaScript 项目（无论是 Node.js 还是浏览器应用程序）都可以被当作npm 软件包，并且通过 package.json 来描述项目和软件包信息。</p><p>我们可以将 package.json 视为快递盒子上的运输信息。</p><p>当运行 <code>npm init</code> 初始化 JavaScript/Node.js 项目时，将生成<code>package.json</code>文件，文件内的内容(基本元数据)由开发人员提供：</p><ul><li><code>name</code>：JavaScript 项目或库的名称。</li><li><code>version</code>：项目的版本。通常，在应用程序开发中，由于没有必要对开源库进行版本控制，因此经常忽略这一块。但是，仍可以用它来定义版本。</li><li><code>description</code>：项目的描述。</li><li><code>license</code>：项目的许可证。</li></ul><h4 id="npm-scripts">npm scripts</h4><p><code>package.json</code> 还支持一个 <code>scripts</code>属性，可以把它当作在项目本地运行的命令行工具。例如，一个 npm 项目的<code>scripts</code>部分可能看起来像这样：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tsc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier --write **/*.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;format-check&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier --check **/*.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eslint src/**/*.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ncc build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jest&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run build &amp;&amp; npm run format &amp;&amp; npm run lint &amp;&amp; npm run pack &amp;&amp; npm test&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><code>eslint</code>，<code>prettier</code>，<code>ncc</code>，<code>jest</code>不是安装为全局可执行文件，而是安装在项目本地的<code>node_modules/.bin/</code> 中。</p><p>最新引入的 <ahref="https://www.freecodecamp.org/news/npm-vs-npx-whats-the-difference/">npx</a>使我们可以像在全局安装程序一样运行这些 <code>node_modules</code>项目作用域命令，方法是在其前面加上<code>npx ...</code>（即<code>npx prettier --write ** / *。ts</code>）。</p><h4 id="package-lock.json">package-lock.json</h4><p>该文件描述了 npm JavaScript 项目中使用的依赖项的确切版本。如果<code>package.json</code> 是通用的描述性标签，则<code>package-lock.json</code> 是成分表。</p><p>就像我们通常不会读取食品包装袋上的成分表（除非你太无聊或需要知道）一样，<code>package-lock.json</code>并不会被开发人员一行一行进行读取。</p><p><code>package-lock.json</code> 通常是由 <code>npm install</code>命令生成的，也可以由我们的 NPM CLI 工具读取，以确保使用<code>npm ci</code> 复制项目的构建环境。</p><h4 id="dependencies-vs-devdependencies">dependencies vsdevDependencies</h4><p>devDependencies 里面的插件只用于开发环境，不用于生产环境，而dependencies是需要发布到生产环境的。<sup id="fnref:2"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--error hint--medium hint--rounded hint--bounce"aria-label="[npm -i 与npm install -s与-d的区别](https://www.cnblogs.com/cina33blogs/p/9210931.html)">[2]</span></a></sup></p><p>这两个以键值对象的形式出现，其中 npm 库的名称为键，其<ahref="https://semver.org/">语义格式</a>版本为值。 大家可以看看 <ahref="https://github.com/actions/typescript-action">Github 的 TypeScript操作模板</a>中的示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@actions/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@actions/github&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@types/jest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^25.1.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@types/node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^13.9.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@typescript-eslint/parser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.22.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@zeit/ncc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.21.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint-plugin-github&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.4.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint-plugin-jest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^23.8.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^25.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jest-circus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^25.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;js-yaml&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.13.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.19.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ts-jest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^25.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这些依赖通过带有 <code>--save</code> 或 <code>--save-dev</code>标志的 <code>npm install</code> 命令安装。它们分别用于生产和开发/测试环境。在下一节中，我们将更深入地研究这些软件包的安装。</p><p>同时，理解语义版本前面的符号非常重要（假设你已经阅读 <ahref="https://semver.org/">semver</a> 的 <code>major.minor.patch</code>模型）：</p><ul><li><code>^</code>：表示最新的次版本，例如， <code>^1.0.4</code>可能会安装主版本系列 <code>1</code> 的最新次版本<code>1.3.0</code>。</li><li><code>〜</code>：表示最新的补丁程序版本，与 <code>^</code> 类似，<code>〜1.0.4</code> 可能会安装次版本系列 <code>1.0</code>的最新次版本<code>1.0.7</code>。</li></ul><p>所有这些确切的软件包版本都将记录在 <code>package-lock.json</code>文件中。</p><h4 id="npm-install">npm install</h4><p>这是现在我们开发 JavaScript/Node.js 应用程序时最常用的命令。</p><p>默认情况下，<code>npm install &lt;package-name&gt;</code> 将安装带有<code>^</code> 版本号的软件包的最新版本。npm 项目上下文中的<code>npm install</code> 将根据 <code>package.json</code>规范将软件包下载到项目的 <code>node_modules</code>文件夹中，从而升级软件包的版本（并重新生成<code>package-lock.json</code> ）。<code>npm install &lt;package-name&gt;</code> 可以基于 <code>^</code> 和<code>〜</code> 版本匹配。</p><p>如果要在全局上下文中安装程序包，可以在机器的任何地方使用它，则可以指定全局标志<code>-g</code>（例如 <ahref="https://github.com/tapio/live-server">live-server</a>）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm i module_name  -S  = &gt;  npm install module_name --save    写入到 dependencies 对象</span><br><span class="line"></span><br><span class="line">npm i module_name  -D  =&gt; npm install module_name --save-dev   写入到 devDependencies 对象</span><br><span class="line"></span><br><span class="line">npm i module_name  -g  全局安装</span><br></pre></td></tr></table></figure><h4 id="参考文章">参考文章</h4><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.freecodecamp.org/chinese/news/what-is-npm-a-node-package-manager-tutorial-for-beginners/">什么是npm —— 写给初学者的编程教程</a><a href="#fnref:1" rev="footnote">↩︎</a></span></li><li id="fn:2"><spanstyle="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><spanstyle="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.cnblogs.com/cina33blogs/p/9210931.html">npm-i 与npm install -s与-d的区别</a><a href="#fnref:2" rev="footnote">↩︎</a></span></li></ol></div></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;npm（“Node 包管理器”）是 JavaScript 运行时 Node.js
的默认程序包管理器。&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span
class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot;
aria-label=&quot;[什么是 npm —— 写给初学者的编程教程](https://www.freecodecamp.org/chinese/news/what-is-npm-a-node-package-manager-tutorial-for-beginners/)
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;npm 由两个主要部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用于发布和下载程序包的 CLI（命令行界面）工具&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;托管 JavaScript 程序包的 在线存储库</summary>
    
    
    
    <category term="Study" scheme="https://www.sdhlw.top/categories/study/"/>
    
    
    <category term="NPM" scheme="https://www.sdhlw.top/tags/npm/"/>
    
    <category term="Java" scheme="https://www.sdhlw.top/tags/java/"/>
    
  </entry>
  
</feed>
